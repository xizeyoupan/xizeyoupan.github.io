[{"title":"我超，盒","url":"/2022/04/17/2022-04-17-wochao-nuclear/","content":"\nbanner：https://www.pixiv.net/artworks/97567572\n\n## 序\n作为2202年的开局，第一季度似乎就不怎么顺利。乌俄战争和上海疫情这两只黑天鹅，不管是对微观的个人还是宏观的经济体，都产生了一定的负面影响。在这个背景下，可能会有一些人更热衷于在网上制造对立、挑拨矛盾。網路是如今信息传递上不可或缺的一环，让信息流动更加快速、让信息解构更加流行。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220417/1.jpg)\n\n<p style=\"text-align: center;\">上图是母亲大人不小心删掉微信后又加回来的截图</p>\n\n但同时，也让信息安全更加混乱。虽然有时候赛马高手和跨界大佬会问我如何开盒，可我由于没有知识储备，只能回复无可奉告。但是为了让群友不再那么害怕，我只能在此瞎写一气，打消群友的顾虑罢了。\n\n## 搜索引擎的正确用法\n不可否认，这些年搜索引擎在被门户网站和app分流之后，日常使用已经比较少了。但是，一些相对简单的搜索方法仍值得掌握。拿谷歌来说，在双引号内的内容是完全匹配，而在site后面可以加上域名来过滤信息。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220417/2.jpg)\n\n这样就能找到一些账号的发言了。当然，把域名换成贴吧之类也能得到类似的结果。如果有的页面更新了，还能用快照来找到。\n\n这些信息，如果不过激的还好，<span class=\"mask\">比如李粒q，</span>而一旦与主流相悖，<span class=\"mask\">比如刘慈欣，</span>造成的结果我不好说。\n\n现在假如你是一个小学二年级的同学，那么对于一些认证不那么严格的游戏，随便找个身份证也是极简单的：\n\n只要搜索`\"身份证\" site:gov.cn filetype:xls`就行，总能找到一些号码。\n\n## “一不小心”的主动泄漏\n不知道什么原因，最近跨界大佬把金刚也拉来打游戏了。其实我对金刚是有一点愧疚之情的。\n\n还记得几年前，我不知道从哪里关注了金刚的b站账号，便被他的临摹作品所吸引。突然又发现他是个煤油、玩机达人，我对他更加崇拜了。\n\n直到我观摩了他18年底投稿的一个启动器视频，啊不，是投稿的一个**影片**，便顺着影片找到了他的微博。由于年代久远，我已经不记得我微博私信他什么了。只记得他匆匆注销了那个微博，并说是小号，无关大雅。在印象中，我是告诉过他我是从b站视频找来的。但这影片并没有下架——我在一分钟前还看过<span class=\"mask\">，播放数不到1000，不及跨界大佬皇室战争播放量的佰分之一。</span>\n\n但重点并不在播放量上。实际上，从这个影片中能得到的信息有很多——我承认特别是当我看到“赵子钰”三个字的时候，很难绷得住。\n\n微博账号、城市、大概住址、学校、爱好，<span class=\"mask\">包括性癖，</span>如果你愿意找，都能从这短短的视频中找到。突然记得金刚那时问过我是不是也喜欢这个xp，可惜彼时并没有被赛马高手拉进gal的坑，只能否定了。\n\n<span class=\"mask\">不知道有没有坏家伙给金刚打小报告o(￣┰￣*)ゞ</span>\n\n这些信息，如果没事还好，而一旦被人抓住把柄，就会吸引上千个甚至数百个键盘侠来跟你互动，尽管一般不能造成什么实际伤害，但有可能会使人心理压力变大，毕竟不是人人都能抗压的。\n\n有时候主动泄漏是存在蒙蔽性的。比如跨界大佬曾把某人名字不打码地放到黑枪博客里，然后又打码上传了一份。但用过git的都知道，简单地commit并不能擦除之前的内容。**这意味着赛马高手不肯承认自己错误的做法，反而使用删除石桥夜话等方式试图掩盖自己的行为。这种卑劣行径，恰恰暴露了赛马高手做贼心虚的心理。赛马高手这种认不清自己情况，糊弄民众，透支未来的行为，到最后一定是搬起氟石、腊石、萤石、陨石、孔雀石、芙蓉石、木化石、鱼鳞石、菊花石、户县石、龟纹石、灵璧石、鹅卵石、钟乳石、大理石、风动石、钙沸石、电气石、银星石、月光石、摩根石、红石、钻石、青金石、绿宝石、钴方解石、钴尖晶石、原石、圣结石砸自己的脚！**\n\n但同样，赛马高手曾经通过一个域名的whois反查开了某个盒，着实把这一手玩明白了。\n\n## 防范不能的被动泄漏\n\n理论上说，服务提供者有义务保证用户的信息不被泄漏。但由于各种原因，当代个人信息就如同纸糊的一样脆弱。\n\n比如像之前一篇打卡blog提到的，在我校任何一个人几乎都能0门槛[^1]地获得全校师生信息。\n\n又比如赛马高手博客的评论系统有个bug，或者说，*feature*，只要抓个包，任何访问他博客的人都能得知评论者的信息，包括ip、邮箱（如果填了）等。\n\n我还记得一年前跨界大佬问我是怎么知道他们学校gogo集训队的群号的，其实很简单——qq有防撤回，那大家有没有想过，万一，我是说万一，你转发了聊天记录后，恰好有个模块能显示聊天记录的q号和群号呢？<span class=\"mask\">毕竟从上文金刚的视频里可以看到，他那个时候已经装了qq坦白说破解插件了。</span>\n\n同时大范围的信息泄漏层出不穷。我省几年前的一次学生信息泄露，涵盖了小学到高中，可以说已经是各社工库标配了。<span class=\"mask\">这一点作为社工裤站长的跨界大佬一定无比清楚。</span>\n\n## 尾声\n上面胡乱写了一些，只希望大家有些了解罢了。\n\n最后感兴趣的可以看看这篇：[可能有用的初级防开盒tips](https://www.bilibili.com/read/cv12364794)\n\n最最后催更下赛马高手、跨界大佬、集训队长的博客。\n\n[^1]: 但是有技术门槛，但也不高。\n\n<style>\n    span.mask {\n        transition: 1.25s;\n        filter: blur(0.25em);\n    }\n\n    span.mask:hover {\n        filter: none;\n    }\n</style>","tags":["生活","随笔","水文","核武器"],"categories":["living"]},{"title":"2021年终总结","url":"/2022/03/15/2022-03-15-review-2022/","content":"\n## 序\n\n<div class=\"seeyear\">\n    <meter id=\"thisyear\" value=\"100\" max=\"100\" style=\"width: 80%;\"></meter>\n    <div id=\"remaintime\"></div>\n</div>\n\n## 过去\n\n匆忙中一年又过去，过年也显得越来越机械化。[^1] 我没想到，在我打这行字的时候，被众人封神的Copilot会自动补全这一句话：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220315/1.jpg)\n\n人与人之间都不能一概而论，这毕竟是AI，想让它与人类共情确实太难了。博主不忍看到AI继续胡言乱语，嘲讽世人，便恼羞成怒地把它关了。其实一开始，我是想说，我也没想到这一年的年终总结会更地这么晚。“有些博主的年终总结可能要拖拉个半年才写得完”[^2]，看来这句话是完全正确的。群友总是催我更新，但借用一句知乎答主的话来说，“对于博主这么一个宅来说，不出门，就基本碰不到什么新鲜的事情，而博主本人也并非一个思想家，也不能在寝室里格物致知没事就格出一些道理来作为杂谈的谈资”[^3]。博主不像孙哥，涉猎广泛，满腹经纶，小学时期就凭借一篇《消逝的xx》一举夺得优秀作文，展现了自己的乡土情怀；如今一篇《石桥夜话》初试校园短篇小说，《正月里》更是跳出传统博文之囿，将近5000字的文章阅读起来就好像在品鉴中国近几年来泛二次元的编年史，<span class=\"mask\">短短的博文涵盖了孙哥一点正事没干的童年，</span>使人了解到了世界的多样性。\n\n说起过年，上一次过年还是在一个半月前。我家过年的习俗还是比较淡的，大年三十吃完饭春晚看到十点就困了，爸妈都早早关掉电视睡觉了，近几年鞭炮都很少放，更别提守岁了。在越来越多人感叹年味稀薄的今天，是否有人思考过过去的年味与未来的将会是同一类东西。在我的记忆中年味可能是与表哥表弟在路边放鞭炮，一块钱擦炮，五毛摔炮，还有偶尔能在地上发现的没有爆炸的几颗千响炮。其中擦炮最有趣——扔水里也能炸。但是扔水里的时间必须掌握好：擦炮从点火到爆炸需要3-8秒，一点火就扔进水中擦炮会熄灭，而时间一长就足以在你的手里炸开花。而我们小孩玩的，就是炸在手里与炸在水里的刺激。这些场景从好几年前就开始渐渐淡出了我的生活——而疫情的出现无疑加速了这个趋势。对刺激的追求，也如同年味，随着长大一点点消散了。现在想来，小时候的我们是幸运的——无数次把擦炮扔进带有“污”字的井盖中，而只要井盖被掀翻一次，我现在就很有可能不会坐在电脑前写blog了。\n\n流年似水，流走的不仅是时间，还有回忆。彩色铜纸印刷的市电视报早已不订，而与其绑定的小记者证已经在门上挂了将近十年，直到孙哥前来偷拍才被我想起；滨海公园每年的菊展，最近一次拍照留念也是十多年前；春节时傍晚坐公交车离开外婆家，透过车窗上氤氲的雾气观察车外光怪陆离的世界，抹一抹水雾，愕然发现公交车刚好经过中心医院旁边的公园，自从我不是医院的常客之后，这个公园几乎就没去过了。而这些“片刻的欢娱和不幸，转眼间就已跑到似水流年里去了”。[^4]\n\n## 过去的将来\n\n如果说卷王偶尔摆一下烂是一种妥协，那么在白兰的时候偶尔不摆也是一种妥协。而我可能是另外一种——可持续白兰。有好多次我躺在床上，床下室友在讨论我听不懂的原神。讨论声并不影响我入睡，而是能被我朦朦胧胧听到。这时我感觉我的大脑就像一台半双工的机器，可以进行思考，也可以听到声音，但不能一边听一边思考。所以等我起床都不知道自己算睡着了没有。\n\n曾经我认为一件事没价值就会对此嗤之以鼻，但事情往往会在意想不到的地方发生变化。比如我发现，高中教的excel，是大学的物理实验处理数据的一个好帮手。可惜不知道是幸存者偏差还是什么原因，我似乎并没有见过身边的人用excel来计算。而这些天让我颇感意外的是晗哥，不但给编辑器装上了二次元背景，还在一两天之内迅速搭好了博客，无师自通，让我暗自庆幸晗哥没来CS，又为卷不过这位跨界大佬而担忧。虽然感觉他博客的关于页面有点说都不会话了，但打黑枪的能力显然是霰弹枪级别的。\n\n那么这一篇没有一点总结的年终总结终于写完了。\n\n不如用麻子哥的一首歌来结束吧。\n\n<meting-js server=\"tencent\" type=\"song\" id=\"000unlme4AvzLw\" ></meting-js>\n\n[^1]: https://quantum818.github.io/2022/01/31/2022-1-31\n[^2]: https://github.com/saveweb/review-2021\n[^3]: [杂谈](https://www.zhihu.com/question/471180232)\n[^4]: 王小波 《流年似水》\n\n由于本人文笔欠佳，所以本文很大程度借鉴了《正月里》[^1] 。\n\n<script>\n    var mmin = Date.parse(new Date(\"2022-01-01 00:00:00\"));\n    var low = Date.parse(new Date(\"2022-05-01 00:00:00\"));\n    var high = Date.parse(new Date(\"2022-09-01 00:00:00\"));\n    var mmax = Date.parse(new Date(\"2023-01-01 00:00:00\"));\n    var e = document.getElementById('thisyear');\n    var re = document.getElementById('remaintime');\n    e.setAttribute(\"high\", high);\n    e.setAttribute(\"low\", low);\n    e.setAttribute(\"min\", mmin);\n    e.setAttribute(\"max\", mmax);\n    e.setAttribute(\"optimum\", mmin);\n    setInterval(function () {\n        var now = Date.parse(new Date());\n        e.setAttribute(\"value\", now);\n        var prog = ((now - mmin) / (mmax - mmin) * 100).toFixed(8);\n        if (prog > 100) {\n            re.textContent = \"当你看见这篇文章的时候，2022年已经过完了🙂\";\n        } else {\n            re.textContent = \"当你看见这篇文章的时候，2022年已经过去了\" + prog + \"%🥰\";\n        }\n    }, 1000);\n</script>\n<style>\n    .seeyear {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n\n    span.mask {\n        transition: 1.25s;\n        filter: blur(0.25em);\n    }\n\n    span.mask:hover {\n        filter: none;\n    }\n</style>\n","tags":["生活","随笔","年终总结"],"categories":["living"]},{"title":"用钉钉来进行FineReport打卡是否搞错了什么","url":"/2022/03/02/2022-03-02-punch-with-script/","content":"\nbanner：https://www.pixiv.net/artworks/96633231\n\n## 前言\n\n过去的整个寒假无所事事，饱食终日，正如整个流水帐似的2021年。寒假里，起床的动机仅仅是因为要打卡——每天上午12点前截至。于是一个个上午就在睡梦中掠过了。返校后，我的作息才稍微这么阳间了一点——一礼拜四节早八，说多不多，说少不少。可还是要打卡。\n\n提醒打卡并@没打卡的同学，是班委每天都会做的事。 ~~（或许用QQ机器人会更方便点~~ 虽然每天早上10点后如果还没打卡，钉钉会自动推送一条通知，但以我为数不多迟打卡的经历来看，这既不保险，也不好用——寒假里没提醒；就算开学了有提醒，在不开FCM的情况下，多半收不到。\n\n自动化打卡，之前早就想做了，但是每天耗费的时间不到一分钟，使我有了懒惰之心。但是最近拜读了一篇文章[^1]，使我的思想有了本质上的提高。是啊，“人生在勤，勤则不匮”，说的多么好啊！恰好某天班群里也发了几句揶揄的消息，我决定浅试一下吧。\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/2.jpg)\n\n## 正文\n说实话，我一直对为什么要在钉钉中打卡很疑惑。填报系统是帆软——给人的第一印象是又重又慢。虽然钉钉可以单点登录，但我平时还是选择用浏览器手动登录——钉钉的跳转太慢了。\n\n有一说一对于这种简单的需求，理论上用puppeteer随便搞搞应该很好过。但由于我勇于挑战自我<span class=\"mask\">脑子不太好使</span>，因此决定自己分析看看。\n\n**由于利益关系，这里面水很深，本篇博文仅会给出hint。**\n\n### 认证\n直接复制链接到浏览器打开，会自动跳转到一个登录页面。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/3.jpg)\n\n我们废话不多说，直接抓个包看看：\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/4.jpg)\n\n哈哈，除了`username`是学号之外，其它一个都不认识捏。看下源码：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/5.jpg)\n\n哈哈，这下post的五个请求参数就只剩一个密码了捏。结合登录按钮上的`login()`函数，博主有理由怀疑加密逻辑写在js里。于是经过我精谨细腻[^2]的逆向<span class=\"mask\">（其实是疯狂Ctrl+F）</span>，没花多少时间就确定相关逻辑在`login.js`中：\n\n```js\nfunction login(){\n\tvar username = jQuery(\"#username\").val();\n\tvar password = jQuery(\"#password\").val();\n\tif(null == username || '' == username || null == password || '' == password){\n\t\tjQuery(\"#msg\").html('用户名或密码不能为空!');\n\t\treturn false;\n\t}\n\tpassword = Encrypt(password);\n\tjQuery(\"[name='password']\").val(password);\n\tvar s = jQuery(\"#veriyCode\").size();\n\tif(s == 1){\n\t\tvar vCode = jQuery(\"#veriyCode\").val();\n\t\tif(null === vCode || ''===vCode || vCode.length !=4){\n\t\t\tjQuery(\"#msg\").html('请输入正确的验证码!');\n\t\t\treturn false;\n\t\t}\t\t\n\t}\n\tjQuery(\"#fm1\").submit();\n}\n\n\nfunction Encrypt(word){\n\tvar key = CryptoJS.enc.Utf8.parse(aes1);\n\tvar iv  = CryptoJS.enc.Utf8.parse(akey);\n    srcs = CryptoJS.enc.Utf8.parse(word);\n    var encrypted = CryptoJS.AES.encrypt(srcs, key, { iv: iv,mode:CryptoJS.mode.CBC,padding: CryptoJS.pad.Pkcs7});\n    return encrypted.ciphertext.toString().toUpperCase();\n}\n```\n\n我怀着忐忑不安的心情仔细研究了这段代码，却不知不觉入了迷。回过神来，心中却早已对这位未曾谋面的作者佩服得五体投地：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/6.jpg)\n\n这豪放的判等，这自由的声明，这恣意的缩进，会不会让你想起那个只会复制粘贴的自己？\n\n定了定神，接下来找`aes1`和`akey`。不然为什么要佩服作者呢，因为做人就该堂堂正正。变量如其名，`aes1`就躺在`aes.js`里。而`akey`呢？一开始我是迷惑不解的，<span class=\"mask\">直到上批站看了几集切片才豁然开朗——就如同Asoul的一个魂，这里的Akey指的就是一把钥匙</span>。把一把钥匙放在`jquery-1.8.3.min.js`里，很新奇，从未见过，却又十分浪漫。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/7.jpg)\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/8.jpg)\n\n那么一切都能解释通了：虽然这两个变量都用明文存储，对加密毫无帮助，但著名的V学家孙哥[^3]早就下过断论：A/什么事都干的出来。大概是受到“夹心糖屁用没有的刺激”，为了显示自己是很厉害的人，所以才加了这两个屁用没有的东西吧。夹心糖真的...我真的哭死/(ㄒoㄒ)/~~\n\n那么在Copilot的帮助下，博主很容易就补出了相应的代码：\n```python\ndef encrypt(word):\n    akey = '0987654321123456'\n    aes1 = 'key_value_123456'\n    iv = akey.encode()\n    key = aes1.encode()\n\n    encoder = PKCS7Encoder(32)\n    srcs = encoder.encode(word)\n    cipher_text = AES.new(key, AES.MODE_CBC, iv).encrypt(srcs.encode())\n    cipher_text = b2a_hex(cipher_text).decode('utf-8')\n    return cipher_text.upper()\n\ndef decrypt(word):\n    akey = '0987654321123456'\n    aes1 = 'key_value_123456'\n    iv = akey.encode()\n    key = aes1.encode()\n    word = a2b_hex(word)\n    decrypted = AES.new(key, AES.MODE_CBC, iv).decrypt(word)\n    # decrypted = decrypted.decode('utf-8')\n    return decrypted\n```\n\n有一个坑是默认的`PKCS7Encoder`用了16个octets，需要改成32。\n\n### 提交\n登录过后就能自动进入报表页面了。\n值得一提的是，这个定位由于采用H5，用了百毒的api。那么不用一行代码，只要稍微动点手脚就能指哪定哪，我不好说这是马奇诺防线，还是防君子不防小人，或者二者兼有？\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/9.jpg)\n\n简简单单抓了几个包，很容易发现一个疑似的提交：\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/10.jpg)\n\n看起来还挺像这么回事。那我们废话不多说，直接用小学二年级就学过的爬虫知识，来进行模拟提交，我已经觉得胜利在望了。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/11.jpg)\n\n接下来，没有意外的话就会发生意外。\n果然不出我的所料，一通操作猛如虎，一看代码405。\n\n`Reportlet SessionID: \"\" time out.`\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/12.jpg)\n\n这极大地打击了我的自信心，差点一蹶不振。好在经过我七七四十九天的思考，终于做出了一个违背祖宗的决定：尝试直接逆向帆软源码。\n\n又经过了无聊的导入和搜索，终于发现了一点端倪：\n```java\npublic void process(HttpServletRequest var1, HttpServletResponse var2) throws Exception {\n\tString var3 = WebUtils.getHTTPRequestParameter(var1, \"sessionID\");\n\tTemplateSessionIDInfo var4 = (TemplateSessionIDInfo)SessionPoolManager.getSessionIDInfor(var3, TemplateSessionIDInfo.class);\n\tif (var4 == null) {\n\t\tErrorHandlerHelper.getErrorHandler().error(var1, var2, \"Reportlet SessionID: \\\"\" + var3 + \"\\\" time out.\");\n\t} else {\n\t\tSessionLock var5 = var4.getSessionLock();\n\t\tvar5.lockInterruptibly();\n\n\t\ttry {\n\t\t\tthis.ybzorkl0(var1, var2);\n\t\t} finally {\n\t\t\tvar5.unlock();\n\t\t}\n\n\t}\n}\n```\n\n跟进`getHTTPRequestParameter`方法看了看，似乎是从header、cookie、session等各种你想得到和想不到的地方拿参数。那就好办了，直接加个`sessionID`在头上试试。\n\n这次总算对了，服务器返回了200。写完这些内容，正当给自己安排课表的我打算在床上小憩到中午的时候，我的手机来了个通知，猝不及防地打断了我的安排：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/13.jpg)\n\n这就很尴尬了。去前端的数据包看看是否漏了什么。无心插柳柳成荫，一看还真发现了一些不得了的东西：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/14.jpg)\n\n有学号、手机号之类的，只能说懂得都懂。<span class=\"mask\">属于开盒神器了</span>但我们不能做那种事，不好不好，不好不好，我们就分析打卡嘛\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220302/nogood.gif)\n\n至于一张表规模快到一千万这种事，由于博主逃了很多本学期的数据库课程，因此不敢妄加评判。\n\n回到打卡主题，这就有点麻烦了。虽然后端的Java经过编译后的方法名都成了乱码，但博主还是钻研了一会，因为我知道，只要功夫深，迟早要弃坑。因此无果的博主决定不再尝试。\n\n**Q.E.D.**\n\n## 后记\n后来博主花10分钟时间用puppeteer解决了这个问题。\n\n> 如果哪位老师发现某人一天提交了好几十次的表单，请一定要相信我是我网卡了···<span class=\"mask\">挝瑧鍀不想再喝茶了😭😭😭</span>\n\n[^1]: [习近平：在知识分子、劳动模范、青年代表座谈会上的讲话](http://cpc.people.com.cn/n1/2016/0430/c64094-28316364.html)\n[^2]: [以创新理念，绘制精谨细腻“工笔画”](https://news.cctv.com/2019/04/27/ARTIZBWl2M41rQxABYSUIaIr190427.shtml)\n[^3]: [管人害人，远离管人至少能延长二十年寿命](https://quantum818.github.io/2022/01/31/2022-1-31/)\n\n<style>\n    span.mask {\n        transition: 1.25s;\n        filter: blur(0.25em);\n    }\n    span.mask:hover {\n        filter: none;\n    }\n</style>\n","tags":["python","抓包","水文"],"categories":["technology"]},{"title":"关于我突然想起来五年前买过8266这件事","url":"/2022/03/01/2022-xx-xx-xxx/","content":"\n","tags":["ESP8266","IoT","MQTT","模电数电"],"categories":["technology"]},{"title":"Only My Markdown","url":"/2022/02/23/2022-02-23-write-blog-with-ci/","content":"\nbanner：https://www.pixiv.net/artworks/90496169\n\n## 前言\n\n上学期小新的HDMI接口突然坏了，我想着用 USB Hub顶用一下就算了。寒假里直接狗东返厂换了一块主板——收到返件的时候我内心是什么慌张的——发现没有被调包成爱国者主板[^1]后，才稍稍有些放心。测试了一下后顺带重装了系统。众所周知，重装系统后的环境搭建十分烦人，特别是对于Hexo这种框架。但不可否认的是，已经拥有和想要有一个博客的人似乎很多，不管出于什么原因[^2]，但是很多时候我们都想偷个懒，光是写博客已经绞尽脑汁了，搭建一个博客并个性化，这种复杂度足以使一位211大学的高材生专注于集训[^3]而拖延。\n\n那么用上CI后，这种情况是否会有所改观？本文以Hexo的Stun为例，记录了从0开始搭建一个博客并魔改上CI自动部署的内容。   \n*注意：阅读以下文本需要相关基础。*\n\n## 环境要求\n理论上只需要Git，开发时可能需要其他工具，如node。\n\n## 先前准备\n按照网上一大堆的教程装好Hexo和主题，粗略配置即可，不再赘述。新建一篇post并启动server以验证安装是否成功。\n\n## 删减文件夹并编写action脚本\n经过一番折腾我们的文件夹结构可能会像这样（省略了`node_modules`）：\n```\n├── .github\n│   └── dependabot.yml\n├── .gitignore\n├── _config.landscape.yml\n├── _config.yml\n├── package-lock.json\n├── package.json\n├── scaffolds\n│   ├── draft.md\n│   ├── page.md\n│   └── post.md\n├── source\n│   └── _posts\n└── themes\n    ├── .gitkeep\n    └── stun\n```\n\n如果有CI的话，用不到这么多一堆文件夹。把多余的文件都删掉，变成：\n```\n├── _config.yml            # Hexo 站点配置\n├── package-lock.json\n├── package.json           # 项目清单\n├── source                 # blog 数据文件夹\n│   └── _posts\n│       └── hello-world.md\n└── themes\n    └── stun\n        └── _config.yml    # 主题配置\n```\n\n为了下一步编写CI脚本更方便，博主把`themes\\stun\\_config.yml`文件移到了`source\\_posts\\_data`文件夹下，并更名为`stun.yml`，由于博主本人在配置主题时改动了原始主题的翻译文件，拷贝一份修改好的`themes/stun/languages/zh-CN.yml`到当前Hexo项目目录备用。最后结果长这样：\n```\n├── _config.yml\n├── package-lock.json\n├── package.json\n├── source\n│   └── _posts\n│       ├── _data\n│       │   └── stun.yml\n│       └── hello-world.md\n└── zh-CN.yml\n```\n\n新增`.github\\workflows\\publish.yml`，写一个自动安装hexo并生成网页发布的脚本：\n\n```yml\non:\n  push:\n\njobs:\n  publish:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          fetch-depth: \"0\"\n\n      - uses: actions/setup-node@v2\n        with:\n          node-version: \"16\"\n\n      - run: npm install\n\n      - run: git clone https://github.com/liuyib/hexo-theme-stun.git themes/stun # 安装主题\n\n      - run: mv source/_data/sutn.yml themes/stun/_config.yml -f # 还原主题配置文件\n      - run: mv zh-CN.yml themes/stun/languages/zh-CN.yml -f # 还原主题翻译文件\n\n      - run: npm run build # 生成静态网页\n\n      - name: Deploy # 自动部署\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          personal_token: ${{ secrets.DEPLOY_KEY }} # 此处的DEPLOY_KEY需要申请token，详见action说明\n          external_repository: xizeyoupan/xizeyoupan.github.io\n          publish_branch: master\n          publish_dir: ./public\n```\n把这个Hexo项目上传到github，理论上就能自动部署了。\n如果要在本地预览，还需要一个小脚本：\n```python\nimport os\nimport shutil\n\nimport subprocess\n\nCURRENT_PATH = os.path.dirname(os.path.abspath(__file__))\n\nif not os.path.exists(os.path.join(CURRENT_PATH, 'themes', 'stun')):\n    out = subprocess.check_output('git clone https://github.com/xizeyoupan/hexo-theme-stun.git themes/stun',\n                                  cwd=CURRENT_PATH, shell=True)\n    print(out.decode('utf-8'))\n    out = subprocess.check_output('npm install', cwd=CURRENT_PATH, shell=True)\n    print(out.decode('utf-8'))\n\n\nshutil.copyfile(os.path.join(CURRENT_PATH, 'source/_data/sutn.yml'),\n                os.path.join(CURRENT_PATH, 'themes/stun/_config.yml'))\nshutil.copyfile(os.path.join(CURRENT_PATH, 'zh-CN.yml'),\n                os.path.join(CURRENT_PATH, 'themes/stun/languages/zh-CN.yml'))\n\ntry:\n    subprocess.call('npm run server', cwd=CURRENT_PATH, shell=True)\nexcept KeyboardInterrupt:\n    os.remove(os.path.join(CURRENT_PATH, 'db.json'))\n```\n\n## 进阶\n\n### 安装插件\n如果你对主题提供的功能不满意，往往可以自己添加恰当的插件，在Hexo项目目录用npm安装，配置可以写在站点配置的`_config.yml`中。   \n以下是我个人安装的一些插件：\n- hexo-filter-mathjax ：如果你不想用一些renderer操纵数学公式，用这个。\n- hexo-generator-feed ：生成RSS。\n- hexo-generator-sitemap ：生成sitemap。\n- hexo-helper-live2d ：live2d插件，虽然archived了但是能用就行。\n\n### 修改代码\n如果你对主题仍不满意或想要的功能没有插件支持，可以考虑fork一份并自行修改相关代码。如果你的功能非常完善，还可以提一个PR。\n\n#### 添加音乐播放器\n[MetingJS](https://github.com/metowolf/MetingJS)是由大佬们搞的一个音乐播放前端插件。   \n想要在每个页面都添加一个迷你播放器，可以添加`themes/stun/layout/_partials/widgets/MetingJS.pug`，内容为\n```js\nlink(\n    rel=\"stylesheet\" \n    href=\"https://unpkg.com/aplayer/dist/APlayer.min.css\"\n) \nscript(src=\"https://unpkg.com/aplayer/dist/APlayer.min.js\")\nscript(src=\"https://unpkg.com/meting@2/dist/Meting.min.js\")\n\nmeting-js(\n    server=\"netease\"\n    type=\"playlist\"\n    id=\"歌单id\"\n    fixed=\"true\"\n)\n```\n\n接着修改`themes/stun/layout/_partials/head/head.pug`，在最后插入`include ../widgets/MetingJS.pug`即可。\n\n## 进阶的进阶\n### 提个PR\n如果主题或者框架有问题，可以尝试自行修改。比如本人在此主题使用中确实发现[有问题](https://github.com/liuyib/hexo-theme-stun/issues/246)，于是就提了个PR。虽然但这个问题严格来说不是bug，但在性能开销不大的前提下还是选择质量比较好。\n\n### 自动图片压缩\n本博客使用[ucloud](https://www.ucloud.cn)存储图片，同时在相应目录`source/assets`下本地也存有一份。当图片很大时，需要进行压缩。不然非常影响浏览体验，如下图。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/220223/4.jpg)\n\n大概只有博主这么耐心的人才会耐着性子等15秒来加载一张不是lazy-load的图片——抛开美观不谈[^4]，让这种图片在首页加载着实让人心急。我们当然可以手动压缩然后上传到COS，当然也可以用类似picgo的插件[^5]，但过程比较繁琐。所以这里我们用`squoosh/cli`，配合脚本来实现自动压缩并上传。那么我们在写md时遇到把图片等资源文件放到`source\\assets`目录下，由于hexo会把`source`文件夹下的内容放到网站主目录，引用链接时只需要去掉相对目录的`source`就行了。由于代码太烂这里就不放了。\n\n## 总结\n所以江南哥和小晗的blog啥时候能搭完呢？\n\n### 3.15更新\n哈哈晗哥博客搭完了捏😋\n\n[^1]: ![](https://xjc.cn-sh2.ufileos.com/assets/blog/220223/1.jpg?show=inline)\n[^2]: ![](https://xjc.cn-sh2.ufileos.com/assets/blog/220223/2.jpg?show=inline) 在此澄清一下，博主对于这种行为深恶痛绝。\n[^3]: ![](https://xjc.cn-sh2.ufileos.com/assets/blog/220223/3.jpg?show=inline)\n[^4]: [抛开xx不谈](https://jikipedia.com/definition/805213546)\n[^5]: {% post_link 2021-08-19-dev-a-new-picgo-plugin '具体看这里' %}\n","tags":["blog","github action","CI","Vercel"],"categories":["technology"]},{"title":"2021国庆","url":"/2021/10/03/2021-10-03-2021-october/","content":"\nbanner：https://www.pixiv.net/artworks/93155398\n\n## 一\n\n国庆长假已经两天了。这两天几乎没进行学习，既没学算法、也没写代码。\n相反，看看切片、睡睡觉、读读&nbsp;&nbsp;<ruby>\n    <rb>小说</rb>\n    <rt>Visual Novel</rt>\n</ruby>，也挺惬意。回想过去几个月，似乎依旧过着一成不变的生活，并没有什么实质性的进展。\n\n应该算是意料之中，英语六级果不其然地失败了。\n\n想起了当时考过四级后把大半没做的四级仿真卷送给某人，某人高分掠过四级后又把卷子倒卖给某垮男来牟利，我真的不知道该哭还是该笑。\n\n但只要想起这个哥们在初中仗着自己高超的黑客技术帮同学破解电脑密码还要收人家五十，我就丝毫不会觉得奇怪了。\n\n也有一些其他无法让人高兴起来的事情，有点难过。\n\n本来早该换的寝室，被辅导员以床位不足的理由搪塞过去了。国庆过后就要开始补不知如何评价的大一上的C语言课了。电路课的老师讲话的时候就像含了一口水在喉咙里，不坐前排根本听不清楚，因此我就记得一句“由于专业原因，这堂课不教基于基尔霍夫定律的电路分析方法”。还有每周两节令人抓狂的、每节课的**信息熵**都巨大的信息论。\n\n## 二\n我现在已经很少关注那些东洋亚文化了，就拿这几天刚推完的《_*MYTH*_》来水水文好了。\n\n### MYTH\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/sou.jpg)\n\n<meting-js\n    name=\"劇中劇\"\n    artist=\"ラック眼力\"\n    url=\"https://xjc.cn-sh2.ufileos.com/assets/blog/211003/%E5%8A%87%E4%B8%AD%E5%8A%87.mp3\"\n    cover=\"https://xjc.cn-sh2.ufileos.com/assets/blog/211003/cover.png\">\n</meting-js>\n\n《MYTH》，一部非常小众的电波烧脑作。同人社团 Circletempo 在2008年发行的作品。[批评空间](https://erogamescape.dyndns.org/~ap2/ero/toukei_kaiseki/game.php?game=10602)中央值84（2021.10.4数据），对于一个同人社团来说，应该算是一个不错的分数。\n\n想了很久应该从哪里下笔描述这个故事。要在寥寥几句话内把《MYTH》的世界观讲清楚是很不容易的。\n\n在未来某一天，地球由于不明原因环境巨变，地球大多数人都得了放射病而死。出生在1984年的，原本是警察的**江户川**也奄奄一息。这天他偶然间得到了失踪多年的大姐的消息。此时的大姐已经成为神秘宗教组织**访印教**的宗教法人，并宣称创造出了能“容纳大量死者信息的程序<ruby>\n    <rb>‘神话’</rb>\n    <rt>MYTH</rt>\n</ruby>”。大姐让江户川把记忆供她研究，之后就能让江户川在MYTH中见到因病去世的妻子。于是在西历2052年前后，五个时空迥异的世界被创造出来了。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/worlds.png)\n\n作为一部元叙述作品，故事的推进大部分时间都采取了双线的碎片化叙事，在一个场景结束后立马跳到（看似）毫不相干的下一个场景中去。虽说是双线叙事，可作品在每个篇章都设置了不同场景，这让剧本更加宏大和烧脑。贯穿整体的Meta元素可能会让人摸不着头脑，但丝毫不影响读者的阅读兴趣。\n\n末日、宗教、哲学、神话、轮回、刑侦、犯罪、电波...编剧打造了一个无比庞大的世界观，无数个“剧中剧”在此间上演。作品名为“寻影ADV”，而实际上这个“影”在我看来指的就是自我实现、自我存在。作为一个剧本中的主人公，反抗作者还是平静接受；作为一个舞台上的配角，又怎样选择。这类问题永远没有标准答案，因而显得复杂而深奥。\n\n![来源https://bangumi.tv/blog/305494](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/yingxuejia.jpg)\n\n作品虽然只有480p分辨率，系统也说不上好用，但在细节的设计上还是动了脑筋的。各个世界的UI基本上都不一样；使用了人物关系图和笔记本来梳理情节；在世界破裂时音乐也会变得断断续续；对话的引号就能展现出自我意志和剧本意识的差别... ~~虽然最后发现都是祂写在剧本上的~~\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/yinhao.png)\n\n某些CG可能有点掉san值，<span class=\"mask\">比如把三次元的嘴巴和眼睛嵌在二次元皮上，</span>这里我就不放了。对作品完整的理解非常需要读者的细细阅读，在此我想聊点游戏以外的事。\n\n>...自此以后，又长久没有看见 Circletempo 。到了年关，neet说，“ Circletempo 的推特注销了呢！”到第二年的端午，又说“ Circletempo 网站的证书过期了呢！”到中秋可是没有说，再到年关也没有看见他。到现在Circletempo 网站终于403——大约 Circletempo 的确解散了。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/403.png)\n\n这样一来，创造出创造了<ruby>\n    <rb>MYTH世界</rb>\n    <rt>人类墓地</rt>\n</ruby>的世界的 Circletempo 社团在十多年后只能在<ruby>\n    <rb>archive网站</rb>\n    <rt>互联网墓地</rt>\n</ruby>上略窥一斑，令人感慨。但正如《MYTH》中所言，这是有意义的。只要知性生命不停止思考，角色的故事将会永远延续。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/archive.png)\n\n作品的音乐由 [ラック眼力](https://twitter.com/luckganriki) 负责，虽然没有神曲，但对日常、狂气的电波系、惊悚氛围的渲染还是不错的。值得一提的是，ラック眼力 还负责过不少 龍騎士07 的音乐，主要是《海猫鸣泣之时》及其衍生作品，此外还重编曲过**车万**的二创同人专辑[《桜下之抄》](https://thwiki.cc/%E6%A1%9C%E4%B8%8B%E4%B9%8B%E6%8A%84)的大部分歌曲。\n\n作品的原画由 [ほっぺ](https://twitter.com/daydream_walker) 担当，而这位画师的其他作品似乎不怎么能找的到，[p站](https://www.pixiv.net/users/238922)上的插画也已经六年没更新了。而去推特一看，才恍然大悟：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/211003/prettyderby.png)\n\n接着看到 timeline 全是赛马娘，由此就很容易得出结论：~~玩赛马娘的都是傻逼~~。 但目前似乎其[个人网站](http://www5b.biglobe.ne.jp/~in-magic/daydream.html)还能打开，真是太令人意外了。\n\n至于企画/剧本 ナカオボウシ ，应该就是他注销了 Circletempo 的官推，而他之前留在 Circletempo 官网的个人推特账号似乎也注销了。从批评空间来看，他最新的活动是19年担任 07th Expansion 的《白鹤鸣泣之时》的演出（上文提到的ラック眼力也在其中负责一部分音乐）。至于现在是在写新剧本，还是在写轻小说，又有谁知道呢？\n\n## 三\n《MYTH》中的寻影之旅随着每次 loop 的 <ruby>\n    <rb>诸神黄昏</rb>\n    <rt>末日</rt>\n</ruby> 结束了，但人生的寻影是一个持续漫长的过程。我有时候会陷入了世界一成不变的错觉中，最近刷到**华为口**下一代最高支持 240W 供电，又了解到了昔日的好友如今变成了一个勤奋的切片员，才发现原来世界是在实时变化的。那么让我也趁这个国庆假期填填坑，补补知识吧。\n\n<style>\nspan.mask {\n    background-color: #e0e0eb;\n    color: transparent;\n    transition: color 0.5s;\n}\n\nspan.mask:hover {\n    color: #aaaa55;\n    background-color: transparent;\n}\n</style>","tags":["生活","随笔","gal"],"categories":["living"]},{"title":"从0开始开发一个picgo插件","url":"/2021/08/19/2021-08-19-dev-a-new-picgo-plugin/","content":"\nbanner：https://www.pixiv.net/artworks/92048077\n\n# 前言\n嘛，正如标题所言，我确实打算写一个picgo插件。\n\n并开此贴为证，（~~那如果写了个bug岂不是贻笑大方~~），记录一些过程（~~破事水~~）。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/logo.png)\n\n> PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具\n\n简单来说， [picgo](https://picgo.github.io/PicGo-Doc/zh/guide/) 可以把图片上传到各个图床，获取外链，方便在Markdown、BBS等各种场合使用。\n\n## 为什么要使用图床\n\n图床就是储存图片的网站。现在的图片动辄上几 MB ，使用图床能够有效提高图片的加载速度。有些论坛对于图片使用有大小限制，像很多 discuz 论坛个性签名的 gif 就只有用图床才能做到。此外，图床还能对图片进行备份。博客是可以长期存在的东西，但图床就不一定了。在本地、 github 、图床三端存储，可以把图片丢失的概率降到最低。\n\n## 使用流程\n\n没有 picgo 时：\n- 下载图片到本地\n- 如果图片太大，用 [squoosh](https://squoosh.app/) || [tinypng](https://tinypng.com/) 压缩\n- 下载压缩后的图片到本地\n- 上传图床\n- 复制图床链接\n- Markdown 中插入链接\n\n有了 picgo 之后：\n- 下载图片到本地\n- picgo上传并压缩\n- Markdown 中插入链接\n\n可以看到直接砍掉了中间几步，大幅提高工作 ~~摸鱼~~ 效率。\n\n## 旧事\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/first-commit.jpg)\n\n大概也是去年的这个时候，我根据 [插件开发指南](https://picgo.github.io/PicGo-Core-Doc/zh/dev-guide/cli.html) 写了一个 Ucloud 的 uploader 。如果以二零年九月为一条线，向前向后可以分出两个我：前一个我，什么都不懂；后一个我，也什么都不懂。\n\n![If the authors of computer programming books wrote arithmetic textbooks](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/UTLQ9gH.png)\n\n~~呃，为什么上面的图是 Rabbit 而不是 Bunny <span class=\"mask\">Girl</span>~~\n\n总的来说，这工具挺好用。没想到的是，发布到 npm 的一年的时间里，竟然还有几个人去下载。~~那为什么 github 只有三个 star~~\n\n![npm-stat.com](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/cnt.jpg)\n\n而个人在使用中，觉得还有一点不足：当图片在剪切板中或者用图片的 url 上传时，只上传到了图床，如果要保存到本地，还得手动操作，略显麻烦。于是就想再开发一个插件。于是就找了找以前的项目。~~于是就看不懂自己之前写的了。~~\n\n# 开发\n由于本人智商孱弱，只得跟着文档重新一步步来。\n\n## 确定需求，明确插件的生命周期\n需求上面提了：在剪切板中或者用图片的 url 上传时，能够自动保存到自定义的文件夹。而整个上传的生命周期(Lifecycle)如下：\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/Lifecycle.jpg)\n\n理论上，我们可以从3个生命周期钩子中任选一个来注册我们的插件，但是考虑到其他插件，情况会复杂一点。比如我有一个压缩图片的 Transformer ，那到底是保存压缩后的文件还是压缩前的。虽然可以让用户自定义，但一般来说，我们对保存在本地的图片的大小是宽容的，追求清晰，所以可以注册一个 beforeTransformPlugin 。\n\n## 准备环境\n- 安装 node 。\n- 安装 picgo 。 `npm install picgo -g`\n- 试运行。 `picgo -h`\n\n## 使用插件模板\n为了方便开发者快速开发picgo的插件，PicGo官方提供了插件模板。然后就傻瓜式操作了。\n\n```shell\nPS D:\\repo> picgo init plugin picgo-plugin-store\n[PicGo INFO]: Template files are downloading...\n[PicGo SUCCESS]: Template files are downloaded!\n? Plugin name: store # 这里不要加picgo-plugin-前缀\n? Plugin description: To store img which not exists locally\n? author: xizeyoupan\n? Choose modules you want to develop: beforeTransformPlugins\n? Your plugin is just used in CLI? No\n? Use TS or JS? (Use arrow keys)      \n> Yes, use TS Project(recommended)    \n  Yes, use JS Project\n```\n\n此处我要说两句， TS 是 JS 的超集，TS 相对于 JS 增加了许多功能，picgo 就是用 ts 写的，而且上面也提示了 ts 是 recommended 的，所以，我们这里就直接选 **js** 吧，当然是因为这种 fragments 用 ts 完全是杀鸡用牛刀，才不是因为我一点都不会用 ts 呢，不是！\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/noob.jpg)\n\n```\n? Use TS or JS? js\n? Your plugin has some shortcut for GUI? No\n[PicGo SUCCESS]:\nGenerate template files successfully!\nPlease cd D:\\repo\\picgo-plugin-store, and then\n\nnpm install\n\n# or\n\nyarn\n[PicGo SUCCESS]: Done!\n```\n\n接着按提示 cd && install 。\n\n## 代码编写\n\n### 初体验\n模板的代码已经为我们搭好了简单的框架，我们只要把逻辑在 handle 中实现就行了。\n\n```javascript\nconst handle = ctx => {\n  console.log(ctx)\n}\n\nmodule.exports = (ctx) => {\n  const register = () => {\n    ctx.helper.beforeTransformPlugins.register('store', { handle })\n  }\n  return {\n    register\n  }\n}\n```\n\n接下来我们先测试一下。由于我们要开发 GUI 插件，这里一步到位了，所以 cd 到PicGo默认[配置文件](https://picgo.github.io/PicGo-Core-Doc/zh/dev-guide/deploy.html#gui%E6%8F%92%E4%BB%B6)所在的目录下，输入：\n\n```shell\nnpm install D:\\repo\\picgo-plugin-store\n```\n\n然后重启 PicGo ，就能看到自己的插件了。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/test-plugin.jpg)\n\n我们在 handle 中加几行代码：\n\n```javascript\nconst handle = ctx => {\n  ctx.emit('test', {\n    title: 'this is input',\n    body: JSON.stringify(ctx.input),\n  })\n}\n```\n\n然后再重复执行\n\n```shell\nnpm install D:\\repo\\picgo-plugin-store\n```\n\n并重启，试着上传一张图片，就能在弹窗中看到输入的数组了。话说回来，这样调试起来还是挺费劲的，代码更新后就要 install ，没有断点，没有热重载。在官方文档看了一下，好像并没有调试的详细步骤。如果想要调试 GUI ，可能还要 clone PicGo-electron 。下面是一种在 PicGo-Core 中能断点的方法：\n\n- 在你插件的代码中新建个文件，比如`src/test.js`。\n- 写上代码调用picgo。\n```JavaScript\n// 系统全局安装路径，用 npm config get prefix 查看，在其下的 node_modules 里。\nconst PicGo = require('C:\\\\Users\\\\myusername\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\picgo')\n\n// 配置文件的路径，这里我直接使用 PicGo-electron 的了。\nconst picgo = new PicGo('C:\\\\Users\\\\myusername\\\\AppData\\\\Roaming\\\\picgo\\\\data.json')\n\n// 执行上传\npicgo.upload(['https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png',\n  'C:\\\\Users\\\\myusername\\\\Desktop\\\\20210821110935.png', 'C:\\\\Users\\\\myusername\\\\Desktop\\\\temp\\\\20210821110935.png'])\n```\n\n- 在`package.json`中修改 test script ：\n```json\n\"scripts\": {\n  \"test\": \"node src/test.js\",\n}\n```\n这样就能在 IDE 中 debug 了。\n\n### 开始上路\n\n> Transformer的作用是把input输入的内容（比如path）转化成Uploader可以上传的内容。\n\n那input数组的每个输入元素到底是什么呢？经过几次上面方法的测试，我们可以得出结论：对于本地图片，就是本地路径；对于剪贴板，先把图片保存在本地临时文件夹中，因此是一个本地临时文件的路径。然后再通过回调，在整个生命周期结束，或发生错误时删除图片。\n\n关键[代码](https://github.com/PicGo/PicGo-Core/blob/d2b73c17e9aacfa81da5d168a71d55792988a6e7/src/core/PicGo.ts#L177)如下：\n\n```typescript\n// 这个函数就对图片在剪贴板\nasync upload (input?: any[]): Promise<IImgInfo[] | Error> {\n  if (this.configPath === '') {\n    this.log.error('The configuration file only supports JSON format.')\n    return []\n  }\n  // upload from clipboard\n  if (input === undefined || input.length === 0) {\n    try {\n      const { imgPath, isExistFile } = await getClipboardImage(this)\n      // 这里的 imgPath 就是临时图片文件的路径\n      if (imgPath === 'no image') {\n        throw new Error('image not found in clipboard')\n      } else {\n        this.once('failed', () => {\n          if (!isExistFile) {\n            // 删除 picgo 生成的图片文件，例如 `~/.picgo/20200621205720.png`\n            fs.remove(imgPath).catch((e) => { this.log.error(e) })\n          }\n        })\n        this.once('finished', () => {\n          if (!isExistFile) {\n            fs.remove(imgPath).catch((e) => { this.log.error(e) })\n          }\n        })\n        const { output } = await this.lifecycle.start([imgPath]) // 从这里才真正进入生命周期，因此我们在插件中拿到的 path 就是临时图片文件的路径\n        return output\n      }\n    } catch (e) {\n      this.emit(IBuildInEvent.FAILED, e)\n      throw e\n    }\n  } else {\n    // upload from path\n    const { output } = await this.lifecycle.start(input)\n    return output\n  }\n}\n```\n\n那如果从 url 上传图片呢？再读读源码就知道，官方的默认实现是在 [path](https://github.com/PicGo/PicGo-Core/blob/aef0261861c6140bf3743ee875ab7b10b4e5948a/src/plugins/transformer/path.ts) 这个 Transformer 中，从网上拿数据。\n\n```typescript\nif (isUrl(item)) {\n    info = await getURLFile(item) // 在这个函数中进行请求\n} else {\n    info = await getFSFile(item)\n}\n```\n\n考虑到我们插件的生命周期在 Transformer 之前，所以我们应该提前先拿到数据，保存在本地。而这样一来图片就会被下载两次，所以我们可以修改 input ，使之变为本地文件的路径。如果是本地上传的文件，我们只要拷贝一份到目标目录就行。如果本地文件不需要重复存储，只要把插件配置的目标路径设为本地文件所在的路径即可。\n\n### 写bug\n\n主要逻辑：\n```javascript\nconst storeHandle = async (ctx) => {\n  const config = ctx.getConfig('picgo-plugin-store')\n\n  ctx.input = await Promise.all(ctx.input.map(async (item, index) => {\n    let fileName = ''\n    let filePath = config.storePath\n\n    // ...\n\n    if (isUrl(item)) {\n      item = await downloadFile(item, filePath, fileName, ctx)\n    } else {\n      item = copyFile(item, filePath, fileName)\n    }\n\n    return item\n  }))\n}\n```\n\n`copyFile`返回的就是`item`，而`downloadFile`会返回一个带文件名的，和配置的路径一致的绝对路径。对于默认命名规则，剪贴板是时间戳， url 则是其最后一个路径。有时我们想使用自己的名字。于是我试图这么做：\n\n```javascript\nif (config.setEachImgName) {\n  fileName = await guiApi.showInputBox({\n    title: '输入文件名',\n    placeholder: '不用加后缀'\n  })\n}\n```\n\n但是很遗憾，作者并没有给插件的 handle 方法提供 [guiApi](https://picgo.github.io/PicGo-Core-Doc/zh/dev-guide/gui.html#guiapi) ，所以我们自定义名称这条路就行不通了。。。吗？\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/excuse-me.png)\n\n看看设置，很容易找到一个上传前重命名。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/picgo-config.png)\n\n那再看看[代码](https://github.com/Molunerfinn/PicGo/blob/a676c083fe597ac14bbf2aef0c9c13d769d390df/src/main/apis/app/uploader/index.ts#L97)，看我们能不能拿到这个名字\n\n```typescript\npicgo.helper.beforeUploadPlugins.register('renameFn', {\n  handle: async (ctx: IPicGo) => {\n    ...\n    await Promise.all(ctx.output.map(async (item, index) => {\n      ...\n      if (rename) {\n        ...\n        name = await waitForRename(window, window.webContents.id)\n      }\n      item.fileName = name || fileName\n    }))\n  }\n})\n```\n\n从中我们可以看到几个关键点：\n- 作者也是注册了一个插件。\n- 改名插件的生命周期在我们自己插件的后面。\n- 改名通过修改 output 中 item 的 fileName 来实现。\n\n那我们就可以再注册一个 afterUploadPlugin ，在上传完成后对目标目录内的图片进行重命名。\n\n```javascript\nconst renameHandle = ctx => {\n  const config = ctx.getConfig('picgo-plugin-store')\n  if (!config.autoRename) return\n  if (ctx.input.length !== ctx.output.length) return\n\n  let filePath = config.storePath\n\n  for (let i = 0; i < ctx.input.length; i++) {\n    const fileName = path.basename(ctx.input[i])\n    fs.renameSync(path.join(filePath, fileName), path.join(filePath, ctx.output[i].fileName))\n  }\n}\n```\n\n这样，我们就完成了基本的代码逻辑。\n\n# 部署\n官方的插件模板已经为我们准备好了`.travis.yml`，我们只需要配置好`NPM_TOKEN`就能在推送到 github 时直接用 Travis 发布到 npm 上了。 ~~所以我直接把`.travis.yml`删了，换上了 github action。~~ 嘛，github 官方的稳定性应该比 Travis 好一点吧。。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/such-a-doll.png)\n\n## 配置Action\n\n新建`.github/workflows/npm-publish.yml`，写入：\n\n```yml\non: push\n\njobs:\n  publish:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v1\n      - uses: actions/setup-node@v1\n        with:\n          node-version: 14\n      - run: npm install\n      - uses: JS-DevTools/npm-publish@v1\n        with:\n          token: ${{ secrets.NPM_TOKEN }}\n```\n\n为了下面自动打 tag ，我们修改`package.json`中的 version 为 `0.0.0` 。接着就是一套提交流程：\n\n```shell\ngit init\ngit remote add origin https://github.com/xizeyoupan/picgo-plugin-store.git\ngit branch -M master\ngit add .\ngit commit -m feature:first-commit\nnpm run patch # 这边会升级版本并commit\n```\n\n如果你在项目中设置了`NPM_TOKEN`（可用 npm cli login 后在 `.npmrc` 文件中找到。），那么应该就能看到 npm 上自动发布的包啦~\n\n## 后续维护\n如果修改了本地代码，只需：\n```shell\ngit add .\ngit commit -m feature:some-features\nnpm run patch\n```\n就又能提交代码并自动发布到 npm 上啦！\n\n# 后记\n没想到简单的一个项目写的还挺长。看了一下 picgo 可以追溯到2018年。 ~~怪不得还在用已经 Deprecated 一万年的 `request` 。~~ 代码中也可能会有点历史遗留问题，比如看起来就很鸡肋的 base64 Transformer。当我看到这段[代码](https://github.com/PicGo/PicGo-Core/blob/dev/src/plugins/transformer/base64.ts)时表情是疑惑的:\n```typescript\nimport { IPicGo } from '../../types'\nconst handle = async (ctx: IPicGo): Promise<IPicGo> => {\n  ctx.output.push(...ctx.input)\n  return ctx\n}\n\nexport default {\n  handle\n}\n```\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/yiliya.jpg)\n\n又仔细看了看文档，读了一下源码：\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/trans-doc.png)\n\n才明白默认实现没用到这个，对照代码确实`base64 将直接接收一个Uploader可支持的output数组`，也明白了 buffer 和 base64 二选一原来是对 Transformer 来说的，因此对于 Uploader 理论上要把两个都实现一下。写到这里我突然想起来我之前写的 ucloud-uploader 好像只实现了 buffer ，还有一个图片名是中文时 encodeURI 的 bug 没修。\n\n但因为这几天已经码了不少字，所以明天再改吧。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210819/hardwork-tomorrow.png)\n\n<style>\nspan.mask {\n    background-color: #e0e0eb;\n    color: transparent;\n    transition: color 0.5s;\n}\n\nspan.mask:hover {\n    color: #aaaa55;\n    background-color: transparent;\n}\n</style>","tags":["javascript","npm","picgo","github action","CI"],"categories":["technology"]},{"title":"关于我打算这个暑假入门机器学习这件事","url":"/2021/08/09/2021-08-09-start-ml/","content":"\nbanner : [pixiv](https://www.pixiv.net/artworks/91609020)\n\n# 序\n咕了。\n\n# 灼眼的项目\n\n# Re:从零开始的炼丹生活\n\n# 蒟弱的工作！\n\n# 摸鱼科大学的劣等生\n\n# 炼丹用书目录\n\n# 我的GPU很少\n\n# 在老师给的数据集中训练是否搞错了什么\n\n# 我的训练参数果然有问题\n\n# 我们的重置数据\n\n# No Hypothesis No Loss\n\n# 我的拟合度哪有这么可笑！\n\n# 欢迎来到算力至上主义的教室\n\n# 为下学期的满课献上祝福！\n\n# 后记","tags":["机器学习","python"],"categories":["technology"]},{"title":"21年中","url":"/2021/07/10/2021-07-10-mid-in-2021/","content":"\nbanner：https://www.pixiv.net/artworks/91010504\n\n## 一\n农历的六月，姑且也算年中吧？\n\n这半年多，我做了什么？20-21年的寒假得知自己低分飘过了四级，偶尔和同学爬爬山，然后，似乎就开学了...\n\n开学后，听了几天无聊的砼课，就既莫名其妙、又顺理成章地跑到计科专业去了。记得原专业的班主任大一刚开学时跟我们说，原专业也很好，就算本科毕业，熬上几年，工资会越来越高，干的活也会越来越轻松；而假如你考了研，那么就可以坐在设计院里画图，简直不要太舒服。同年龄的人听了都很振奋，很爱听，但我总有点疑问，这么多美事怎么都叫我赶上了。\n\n在新专业里，我惊奇地发现，自己和别的同学相比，落下的那几天课对学习进度似乎毫无影响——不会的同学，就算每节课都在课堂上也不会；会的同学甚至自学都能学会，而这大大减弱了我对听课的兴趣。大学规定大学生不应该逃课，但众所周知，规则就是制定出来供别人违反用的，因此我便<span class=\"mask\">49哥似的</span>想方设法地逃课，就算上课也是以玩手机居多，以为自己能在课外的时间补课内的知识，结果只是躺在床上，越来越不想动。到了期末，像高数、大物这类的“硬课”，成绩与绩点纷纷以肉眼可见的速度向49哥看齐了。\n\n学期结束后，在三伏天里军训，好在最后三天的安排受到台风影响不了了之，原本要训14天的我们只训了11天。军训中的刻奇主义和斯德哥尔摩综合征之类的，就不多提了，本来军训就是走一遍流程。意料之中的，在7月体验了10多天太阳浴的我黑了三度。<span class=\"mask\">中野梓体质了属于是</span>\n\n## 二\n这近半年来体验过的作品，由于我没有随时写感悟的好习惯，有些内容是这几天回忆的，可能会有错误和纰漏。\n\n### 星之梦\n《星之梦》是由Key社出品的短篇AVG冒险游戏，是Key社的第四部作品。作为一个小品游戏，没有选择支，没有漫长的多结局，可以当做一部电子小说。\n<meting-js\n\tserver=\"tencent\"\n\ttype=\"song\"\n\tid=\"001MG6R60mU9e3\">\n</meting-js>\n<!-- Gentle Jena -->\n\n剧情也相当简单，讲了一个寻宝猎人在未来世界的废墟城市中寻宝，无意与一个30年前的少女型接待机器人相遇最后被其触动的故事。\n![星野梦美CG](https://xjc.cn-sh2.ufileos.com/assets/blog/210710/xzm.jpg)\n在最后一刻，男主被守卫击败，女主机器人为了拯救男主而牺牲，当女主的记忆重现的时候，男主意识到了曾经人类世界的美好，认为当下的整个世界都“疯了”。出错的并不是星野梦美，而是人与人关系改变导致的这个战火纷飞的世界，引人深思。\n\n作为一款2004年的游戏，这个ip的寿命应该算挺长了。21年最新的OVA《雪景球》描写了在战前正常世界工作的梦美的日常，对设定进行了补充。16年出高清版和动画，在剧场版《星之人》中老年的男主用简陋的观星装置，在仅存的几个人类部落中传播着最后的希望，自称“传颂星星之人”。\n\n这让我想起了最近看到的学*电信*的何同学的一个[视频](https://www.bilibili.com/video/BV1764y167Lp),\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210710/htx.png)而上图的的场景让我对“观星”这个抽象的概念有了新的认识。老实说，我对所谓的科普视频并不是非常感冒，但是何同学的这个想法和创意确实有点对人文主义和浪漫的追求。\n\n### 追忆夏色年华\n一款由MOONSTONE制作的奇幻恋爱题材作品。\n<meting-js\n\tserver=\"tencent\"\n\ttype=\"song\"\n\tid=\"0046pBXP2fIE8r\">\n</meting-js>\n<!-- ノスタルジア -->\n\n男主角和双胞胎妹妹两人，在三年前因为家庭遭逢变故<span class=\"mask\">父母殉情烧死</span>而成了相依为命的孤儿，三年后再次他们回到原本住处附近的向日葵学园就读，却恰巧和童年时期一起玩耍的小团体里的其他三人再次相遇，之后被困在祥子营造出的伊甸园之中，从而开始了思考人生、互相救赎之路。\n\n从剧情来看，四条个人线路略有拖沓，有些情节的重复性较高，日常可能比较无聊。男主的超能力只用在祥子线也挺离谱的。整部作品推完，我发现里面没有一个正常人——包括男主自己。\n\n> 你说我们都疯了，其实你自己才是我们所有人中疯的最厉害的一个。\n\n游戏中的每个人物都会有自己的心魔，大多数不止一个。男主最大的执念就是找到父母殉情这件事的意义，如果找不到，那就人为地赋予一个含义。从中可以一窥剧本家呉的生死观——生死是纯粹的自然事件，而强加在生死上的意义往往是幸存者一厢情愿的。面对生死之事，并不应该陷入寻找所谓的意义与价值的执念漩涡之中，而应该直面悲伤，不再逃避，把悲伤化为力量，走出不幸。\n\n本作的画师为やまかぜ嵐。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210710/zyxsnh_xz.jpg)\n> 向日葵花语：我只注视你\n\n回想原画为桜坂つちゆ，回想场景大多以 jump scare 的方式闪现，但回想CG的画风挺清新的，大多数都不怎么恐怖。而如果在半夜里突然蹦出\n<details>\n    <summary><span class=\"mask\">这么一张</span></summary>\n    <img class=\"lazyload lazyload-gif zoomimg\" src=\"https://xjc.cn-sh2.ufileos.com/assets/blog/210710/zyxsnh_myj.jpg\" data-src=\"https://xjc.cn-sh2.ufileos.com/assets/blog/210710/zyxsnh_myj.jpg\">\n</details>\nCG，不得不说还是有那么一丢丢渗人的。\n\n### Narcissu 1st & 2nd\n《narcissu》及其续作《narcissu SIDE 2nd》是片岡智老师分别于 2005 年及 2007 年以个人名义发布的视觉小说。又是一部十多年前的短流程作品，但内容质量扎实，立意深度以小见大，音乐宁静而不凄凉，氛围渲染确实恰到好处。\n<meting-js\n\tauto=\"http://music.163.com/song?id=4966647\">\n</meting-js>\n<!-- ナルキッソス -->\n\n在医院的7楼，生病的男主优结识了沉默的少女佐仓濑津美，并被告知了7楼的几条规定：\n- “如果要逃走，要去A车站，而不要去B车站”\n- “如果不想给家人带来麻烦，什么也不吃是最好的方法” \n- “在这里，最多只有三次出院的机会”\n\n白色的手环，仅能拉开15厘米的窗户，还有宽敞的房间，全都说明了这是一个“非日常”的世界——身患绝症的人就在7楼和家之间等待着死亡。但濑津美不喜欢家和医院的7楼，于是男主便带着“日常世界”的证明——驾驶证，把父亲的车钥匙偷走，开着银色酷派，没有目标和目的地，逃出了医院的大门。如果说死亡的方式可以由绝症患者选择，那死亡本身这个不可逆的过程却挣脱不开命运的桎梏。终于在漫长的960km的旅程之后，男女两人来到了淡路岛。在这座岛上，开满了水仙。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210710/sx.jpg)\n> 水仙的花语：珍爱自己\n\n与《星之梦》从宏观的人类群体角度思考人性变化不同，也与《追忆夏色年华》从旁观者角度打破生死心魔不同，《水仙》是从当事者角度来直面生死的，因此更能引发个人的共鸣。游戏没有选项，从开头就注定只有一个结局——女主不可避免地走向死亡。\n\n> 假如从一开始就放弃了希望，自然也不会有任何的失望。消极的人生的确不会快乐，但同样也不会痛苦。\n\n在逃离医院后漫无目的的徘徊中，优和濑津美逐渐明确了自己的目的地，也就有了对“丧失”的恐惧感，开始害怕失去。最后两人欣赏到了美丽的水仙，了却了夙愿,在濑津美微笑走向大海途中，告诉男主要“让留下来的人，笑着活下去”，这也成为了7楼新的规矩。\n\n这部小品的核心是什么？作者似乎并没有明说。整部作品都以平凡朴实的语调叙述着一个故事，关于逃避与面对，关于接受与反抗。回归现实，某个市的市花就是一种水仙，某座岛又盛产水仙，这算不算是一种巧合？\n\n### 千恋* 万花\n\n《千恋* 万花》是柚子社的第九部作品，也是十周年的纪念作。<span class=\"mask\">ciallo!</span>\n<meting-js\n\tauto=\"https://y.qq.com/n/yqq/song/003rjgh2279FfP.html\">\n</meting-js>\n<!-- ふたつの影 -->\n经典的一部废萌作品，有些剧情挺水的。作品名《千恋* 万花》，其实是千变万化的谐音。同时每个角色都对应着一种花，可以在OP以及角色歌专辑的封面中找到。<span class=\"mask\">为什么这些厂商这么喜欢搞花语这些东西</span>\n\n作品中常常出现的“祓禊”的读音是 **fú xì** 。\n\n<span class=\"mask\">然而有的人连非生僻字都读不清楚，举个比方，呃，打个例子来说，把“中野梓”读成“zhōng yě xīn”之类的。当然还有的人能把 microsoft 拼成 mricosoft 呢，还好没拼成 macrohard </span>\n\n### Hello World\n\n<span class=\"mask\">不是你们以为的那种每个编程语言第一课打印的的hello-world</span>\n\n上海人在群里提到这个后我才想起来我好像看过。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210710/helloworld.jpg)\n\n角色设计是堀口悠纪子（是你！京都脸），故事的采景地也是京都。\n\n由于采用了3渲2的画面，人物动起来的时候有点掉帧一样，特别是细腻表情的刻画，显的很呆。但不得不说3渲2对于打斗以及和大场面的处理挺不错的。声优都不是专业的，加上3渲2导致的呆滞感。真的棒读plus。\n\n剧情套娃，故事有不止一重的反转，最后从一个新的世界开始。\n\n《ANOTHER WORLD》是电影之后出的外传ova，描写了未来10年后失去瑠璃的男主日常，对补充背景设定很有帮助。\n\n### 甘城光辉游乐园\n京都动画的一部名气相对不怎么大的番。剧情虽然老套但还行。<span class=\"mask\">女主是劳模</span>\n\n### Love, Death & Robots Volume 2\n网飞出品的动画短片集。看完后发现不管是剧集数量、单集是长度还是质量都和第一部有点差距。当然就其本身来说还是值得一看的。\n\n## 三\n从前想做的事情有很多，但是当到了自己真正应该去做的时候，总是由于这样或那样的原因选择躺在那里，一动不动。似乎渐渐到了现在，所有的一切最好莫过于躺平。我以为闲暇的日子能让我沉下来，但是却容易让自己陷入“没有其他事情可做，也没有其他事情能做”的尴尬境地，甚至自己曾经拥有的技能也可能沉到消失不见。在这个短视频大行其道的今天，愿意沉下心来静心做事的人越来越少了。三分钟刚刚好，多一秒都是煎熬。不知道现在生活中的我，能不能算是曾经构想的自己。\n\n最近买了本《Spring 实战》，希望能借假期补补自己的知识。这几天开始调整时差了，健康生活，从早睡早起开始。\n\n<style>\nspan.mask {\n    background-color: #e0e0eb;\n    color: transparent;\n    transition: color 0.5s;\n}\n\nspan.mask:hover {\n    color: #aaaa55;\n    background-color: transparent;\n}\n</style>","tags":["生活","随笔","gal"],"categories":["living"]},{"title":"Synthesizer","url":"/2021/03/07/2021-03-07-v/","content":"\nbanner：https://www.pixiv.net/artworks/83774306\n\n**赤羽，基本未调音。**\n\n<div id=\"player1\" class=\"aplayer\">\n<pre class=\"aplayer-lrc-content\">\n[00:13.69] 深夜里忽然感觉那本\n[00:15.66] C语言的教材\n[00:17.50] 绿色的封面诱使人发呆\n[00:20.62] 我思念 年轻时的那一瞬间\n[00:23.27] 在不知不觉消失 我眼前\n[00:27.48] 人世不如意 且行且珍惜\n[00:52.30] 江南的天气已然到了深冬\n[00:55.78] 可反常气候却让隆冬\n[00:57.72] 仿佛晓春\n[00:59.31] 刚刚敲完学校的集训\n[01:01.32] 不禁自我怀疑\n[01:06.19] 假期是让人催懒的奇妙东西\n[01:09.33] 突然诧异有人辞公离职而去\n[01:13.44] 敢问多少人有勇气和魄力\n[01:16.23] 说走就放弃\n[01:20.19] 啊 多希望舰娘圈子\n[01:23.20] 重返美好本质不再乌烟瘴气\n[01:27.21] 啊 多希望魔怔一年\n[01:30.16] 变成回忆如往昔\n[01:33.74] 意识之形态 团体在对立\n[01:37.27] 思想又斗争\n[01:39.02] 被迫选择远离\n[01:40.81] 心 那样近 魂牵梦萦\n[01:43.76] 却 海角天边\n[01:47.68] 敢离开铁饭碗的魅力\n[01:49.58] 又使我想起\n[01:51.38] 相信未来的我自己\n[01:54.45] 我思念\n[01:55.06] 外公当时念的叨絮\n[01:56.94] 在不知不觉坚定\n[01:58.48] 不再犹豫\n[02:01.51] 某一天我若执意冲击我的兴趣\n[02:04.16] 管它有无不错待遇\n[02:05.86] 围城若隐若现\n[02:08.48] 我会怕慢慢走近那一瞬间\n[02:10.91] 幻想乡飘零散尽又不见\n[02:15.36] 交叉快速路\n[02:19.20] 该选择何处\n[02:23.43] 啊 多希望光的斑驳\n[02:25.99] 照亮这生活两面的残酷仁慈\n[02:29.93] 啊 多希望目标生活\n[02:33.00] 描绘着 幸福轮廓\n[02:36.50] 失意何其多 乐观没有错\n[02:39.80] 日子又飘过\n[02:41.58] 谁过着惬意生活\n[02:43.63] 心 那样近 魂牵梦萦\n[02:45.93] 却海角天边\n[02:50.36] 某一天 我定能变成那道刺眼亮光\n[02:53.42] 将无尽黑暗照亮\n[02:55.05] 思绪若隐若现\n[02:57.26] 我会怕慢慢走近那一瞬间\n[02:59.69] 幻想乡飘零散尽又不见\n[03:04.27] 谁是白毛控 芳乃单线通\n[03:11.98] 幻想乡东方 加上赛马娘\n[03:25.75] 舰C又雪藏\n[03:32.23] 为你身不由己\n[03:33.80] 为你舍弃回忆\n[03:35.42] 触碰你在毫厘\n[03:37.23] 二次元怎么医\n[03:39.21] 不如重新来过\n[03:40.87] 打开这复乐园的枷锁\n[03:46.24] 某一天在梦里梦见\n[03:48.03] 月光下的地点\n[03:50.04] 你的影子映射在GAL旁边\n[03:52.90] 可就在 通线ED出现瞬间\n[03:55.70] 又不知不觉浮现我眼前\n[03:59.87] 某一天真实破灭了那侧颜\n[04:02.30] 我宁愿不相信\n[04:03.79] 相信柚子社的成功就是偶然\n[04:06.99] 我怕没有八月存在的夜晚\n[04:09.41] 悬空着 不愿打破 这热爱\n[04:14.13] 某一天在梦里梦见\n[04:15.77] 月光下的地点\n[04:17.62] 你的影子映射在GAL旁边\n[04:20.96] 我思念 叶键崛起那一瞬间\n[04:23.35] 在不知不觉消失 你眼前\n[04:28.45] 某一天 枕社出现在我梦里看不见\n[04:30.72] 我的心里无尽思念\n[04:32.59] 钟表 若隐若现\n[04:34.88] 我会怕 慢慢走近那一瞬间\n[04:37.42] 调色板七彩缤纷 又不见\n[04:42.05] 雪碧没倒闭\n[04:45.86] 方糖真甜蜜\n[04:49.21] 汝之二刺螈\n[04:52.25] 何时能破圈\n</pre>\n</div>   \n\n<script>\nvar ap = new APlayer({\n    container: document.getElementById('player1'),\n    lrcType:2,\n    audio: [{\n        name: '龍驤',\n        artist: 'RyujoPad',\n        url:\"https://xjc.cn-sh2.ufileos.com/assets/blog/210307/mp.mp3\",\n\t    cover:\"https://xjc.cn-sh2.ufileos.com/assets/blog/210307/cy.jpg\",\n    }]\n});\n\n</script>\n","tags":["music"],"categories":["technology"]},{"title":"再做一回矿工","url":"/2021/02/18/2021-02-18-to-be-a-miner/","content":"\n## 前言\n免责声明：本文不构成投资虚拟货币、显卡、矿机，操作软件/硬件挖矿的建议，任何挖矿行为都有**损坏显卡**、**违反保修条例**的可能，不保证加密货币市场不会发生**钱包被盗**、**51%攻击**、**传销币**等**非小概率事件**。投资有风险，挖矿需谨慎。\n\n## 2017\n如果撑着一叶扁舟，逆着时间长河缓缓漂流，不知有多少人能从三千弱水中，分辨出2017这样一个平凡的年份。\n\n那一年，特朗普刚刚上任，AlphaGo化身Master战胜众多棋手。那一年，比特币的价格刚好$1000。同样是那一年，比特币的最高价格仅不到$18600。\n\n中考结束时，我不知道从什么地方了解到了比特币。尽管之前也略有耳闻，但那些消息实在过于飘渺，就如同自己和励志故事的主人公一样遥远。2017年的监管是始料未及的，但监管不久后的疯狂拉升才让不少人捶胸顿足。矿场易址，显卡卖疯——我也第一次了解到个人GPU也能用来挖矿，于是拿着投机来的钱，买了一张垃圾GTX1066（好的都卖光了），在一张oem H61主板上，配着 真·亮机U·G1610，开始了第一次挖矿之旅。虽说以太坊的算法由A卡挖更合适，但那时N卡收益最高的也是ETH。\n\n于是就这么挖啊挖，只挖了大概几个月。那时的收益，我已经记不太清了——反正少的可怜。只记得随着比特币不断回落，高中的我开始有了晚自习，可支配时间不断减少，我对炒币的热情也随着对高中新鲜感的消散而逐渐自闭了。\n\n## 2021\n\n>时间其实不是河流，冲不走任何人，时间是刀，能雕刻出任何人。我们没有成为我们曾以为的，我们成为了我们能以为的。 ——刘同 《你的孤独，虽败犹荣》\n\n时间其实就是河流，冲走了那些不符合历史发展规律的，也露出了河床下那些物华天宝。\n\n加密货币的盘子太小了，甚至只要把上海人的一点零花钱投进去，就能左右市场。这些日子并没有特别关注，直到今年寒假过了大半，我从某个叫不上名字的自谋体上看到比特币又涨了（不知道比特币为这些自谋体贡献了多少kpi），才突然惊觉：挖矿好像又能赚钱了。上狗东一看，果然显卡又没货了。那就试着记录一下吧。\n\n一段日子不见，花里胡哨的东西果然又多了。云算力租赁、算力市场已变得不再新鲜。既然有那么多新方式，那么自然得用传统方法——找个矿池来挖。\n\n当然，首先要确定挖什么币。打开浏览器，在地址栏输入`smzdw.org`，按下回车键，望着空白的页面呆了几秒，直到`ERR_CONNECTION_TIMED_OUT`让我悻悻关闭了标签，才发现原来熟悉的，也很容易溜走。如字面所见，这个网站本来叫什么值得挖，可以计算挖矿的收益，而今也像无数无名小站一样消逝在了互联网的洪流中。好在要找到这样一个网站并非难事。一看收益列表——ETH的收益又双叒叕最高——这倒是有几年前那份熟悉的味道了。不过这次我换了个币挖——FIRO。这个币之前是小零币，那时就有过了解，最近既改了名又改了协议，就拿这个试试水。\n\n接下来找个靠谱的矿场。与过去相比，如今的矿池好像更往头部集中了。蚂蚁、鱼池等依然是top位置。对于FIRO，我选了mintpond——每小时支付，最低支付金额小，费率相对较低。至于`PPS`，`PPS+`，`PPLNS`，`FPPS`这些结算方式我就不多说了，只要不是`SOLO`就行。下载软件更就简单了，只要跟着Guide一通操作就行。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210218/%7BE4E6280D-9BC1-4ED9-A22F-1CE25861EE53%7D.png)\n\nmintpond甚至能填好参数，直接生成一键脚本。经过对比，还是用[ccminer](https://github.com/firoorg/ccminer)吧。\n\n在正式挖矿之前，还有一些东西可以优化——比如说，超频一下显卡。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210218/vfc.png)\n\n降压超显存，曲线拉了一点，显存超了一点，当然比较保守，效率也提升了一点——从1.5MH/s到了1.6MH/s，聊胜于无。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210218/cmd.png)\n\n温度大约在70度——不是很高，但也不低。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210218/earnings.png)\n\n挖了一天多一点，收益大概在0.4个左右。代币价格如下。\n\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/210218/price.png)\n\n让老显卡发挥一下余热，还是可以的。\n\n## 总结\n几年的时间，能让当时的甜品卡变为如今的鸡肋卡，也能让一个人有些许成长。我之前看见新闻中采访的投资比特币矿机的中年旷工，就会联想起，不知那些在流水线上流走的青春，能否在散热风扇的轰鸣声中找回？而我在几年之后重试挖矿，是只在意虚拟货币本身的价值，还是为了找回那份属于过去的热忱？","tags":["miner","bitcoin"],"categories":["technology"]},{"title":"无题","url":"/2021/02/05/2021-02-05-untitled-1/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/86898844)\n\n## 一\n离2021年的春节没几天了。很多写博客的人都有一个习惯，就是在年中，或者大多数在年末，写一写自己的年终总结，顺便定下目标，展望未来。不论是技能的获得、知识的充实，或是感情的收获，还是自己的旅游、观影、氪金历程，把这些像列表一样一项一项列下来，很多人就会发现，“哇，原来我在过去一年里干了这么多事”。可如果要我总结，我却很可能什么也说不出来。要说在新的一年的规划，我却又怕这会变成永远也不会完成的resolutions,到时候打了自己的脸就不妙了。2020是过去的一年，更是被许多人认为“2020 will go down in history as a ‘*before and after* ’ year”的一年。在风暴仍未消散的情况下，既要提防旧时的战乱，又要注意未知的陷阱。身处此刻，谁不会茫然无措，谁不会流离失所？\n\n## 二\n不知什么时候起，有时面对眼前的一幕，我会突然惊觉：这我好像经历过。我不知道这种感觉是叫做即视感还是叫做做梦后遗症或是其他什么别的东西。我只知道这种感觉是如此真实，又如此虚幻，好像经历了早已经历的事，又好像突然明晰了未来的走向。只是一眨眼间思绪往往又**飘**回了现实。脑海中虚幻的场景，究竟是平行世界的延伸，还是在睡梦里的远征？我想不明白，也不想去想。从时间线上看，如果把一个人现在的存在称作是一种状态，把他将来可进行的行动与看作一个可选择的列表，把他过去所做的一系列事和一系列影响叫做走过的路径。那么这个人接下来就可以从选择列表中找出了一个行动来前进，而这个选择连同其产生新的结果，又被加入到了路径中。这一切难道不像一种回溯算法吗？只是算法能回溯，而人生却不能回溯罢了。那么所谓脑海中的即视感，会不会只是回溯之后残留的影子？有的人，一出生便继承家产，不用什么力气就能达到了大多数人的目标。这难道不是求最短路径的广度优先搜索?而有的人在不断试错中一鸣惊人，这又与深度优先搜索何其相似。在计算机中。每多一个状态，数组的纬度就往往会加一。而我所看到的，是无数生命与非生命体形成了一个**亿亿维**的数组。相互纠缠，彼此影响，不断进行着深度优先与广度优先搜索，而我们只是数不清的回溯中的一支罢了。这样的搜索从宇宙大爆炸开始，但却不知道什么时候结束，遑论目标是什么。\n\n## 三\n说到算法，我突然想起来，在寒假之前，我计划在寒假学习很多新算法。但实际上，我除了一天打鱼，十天晒网地做两道签到题，[随便写写思路](https://xizeyoupan.gitbook.io/note/algorithm/competitive-programming)，并没有什么实质的进展。上一次好好做的算法笔记，还是在两个月前的去年。对比我一个求知若渴的小学同学，坚持在凌晨写代码，在博客建好之初，就更新了两篇高质量博文，文采斐然，情感真挚。更在短短一两天时间内，便熟知了Markdown的语法知识。与此相反，我对某件事的热情却不能持久，还记得小学时写的挺好的毛笔字到了初中便渐渐丢掉了。更别说他在五年的时间里能坚持本心，对一款“运营类卡牌对撞游戏”不离不弃。这样的坚持，正是我所缺失的。自己是不是也该做点什么了？想着这个问题，等着春节的临近，带着一颗不会熬夜且思绪混乱的脑袋，我关上灯，开始“在睡梦中远征”了。","tags":["生活","随笔","年终总结"],"categories":["living"]},{"title":"王小波书评","url":"/2020/12/30/2020-12-30-WangXiaobo-book-review/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/86483849)\n\n## 《万寿寺》\n故事由主人公王二被面包车撞到失忆，住进医院醒来后展开，之后他或主动、或被动地寻找自己的记忆，期间夹杂着自己笔下的薛嵩、红线、老妓女、小妓女，现实中的白衣女人、领导、表弟，这些人物在一根根可能的时间线里纠缠，最后以王二或自愿、或非自愿找到记忆而结束，于是“一切都在无可挽回地走向庸俗”。\n\n不道为什么，一看到这个结尾我就想起《白银时代》中称“将来的世界是银子的”，“早晚要沦为一片冷冰冰的、稀薄的银色混沌”。与《白银时代》中生活被条条框框约束、过着行尸走肉般生活的大多数人一样，《万寿寺》中王二最后也走向平凡，或者说，走向现实。而不同的是，因为急着掏粪而被面包车撞失了忆的王二有了可能性，得以在无数场景中穿梭。\n\n王二是个自由派，因此当他不喜欢他自己之前写的小说时，他可以修改、再创造，甚至直接化身为小说里的人物，就好像打破了第四面墙，以不同身份在不同时代和不同的人物对话。于是有了古灵精怪的红线、腹黑的老妓女、单纯的小妓女、深情的白衣女人以及心灵手巧，修东西有一把刷子的薛嵩——AKA王二自己。元叙述的手法使得各时空穿插起来，有了一种朦胧之感。\n\n除了单纯的时空变换外，不同事物的混合更是起了一种奇妙的化学反应。譬如中文与洋文穿插:\n> 所以她要从薛嵩身边经过，而那个人头始终在专注地看着她。红线想假作不知地走过，但第三次觉得不妥当。于是她转过身，看那颗人头。那人头朝她一笑，很俏皮，还皱了皱鼻子，伸出舌头舔舔嘴唇。红线知道它在招她过去。她有点不乐意。Anyway，这人可是她杀的呀。\n\n又比如，古代和现代穿插:\n\n在描写晚唐时期凤凰寨时，\n> 有关薛嵩的家，另有一种说法是这样的：它是一片柚木的大陆，可以在八根木柱上升降──当然，是通过一套极复杂的机构，有滑轮、缆绳、连杆、齿轮，还有蜗轮、蜗杆等等组成。薛嵩在自己门前转动一个轮子，轮子带动整套机构，他的花园和房子，连同地基，就缓缓地升起来。\n\n可以说很赛博朋克了。\n\n另一种很不符合古人的描写：\n\n> 在花园的左前方，也就是来宾入口附近，有一座水车，像一个巨大的车轮矗立在那里，薛嵩用它往平台上汲水。遗憾的是这水车转起来很重，这倒不是因为它造得不好，而是因为汲程很高。薛嵩在水车边贴了张标语，用水车的口吻写着“顺手转我一下”，这就是说，他想利用来宾的劳动力。\n\n还有譬如：\n> 作为一个史学家，我的脑壳应该是个monitor，手是一台打印机，在我的胸腔里，跳动着一个微处理器，就如那广告上说的pentium，给电脑一颗奔腾的心。说我是台586，是不是给自己脸上贴金？我的肠胃是台硬磁盘机，肚脐眼是软磁盘机。我还有一肚子的下水，可以和电脑部件一一对应。对应完了，还多了两条腿。假如电脑也长腿，我就更修不过来了。更加遗憾的是，我这台计算机还要吃饭和屙屎。\n\n这样的行文风格难免造成一种疏离感，但又平添了一份熟悉。\n\n在小说中，随着记忆的找回，薛嵩的故事也随之重构了好多次。其中最令人忍俊不禁的就是学院派和自由派的纷争了。\n\n> 一位贤者坐在君王面前，君王问道：有没有一种方法，可以控制天下苍生？这位智者、夫子，或者叫做傻逼，为了炫耀他的聪明，就答道：有的。这就是控制大家的意志。说他是智者，是因为他确实有这种鬼聪明。说他是傻逼，是因为他忘记了自己也是天下苍生的一分子，自己害起自己来了。从那一天开始，不仅天下苍生尽被控制，连智慧也被控制。有意志的智慧坚挺着，既有用，又有趣，可以给人带来极大的快感；没有意志的智慧软塌塌的，除了充当历史的脐带，别无用场了……所谓学院派，就是被历史的脐带缠住的流派……\n\n而自由派之间显然也不尽相同：\n> 在薛嵩家的竹楼里，红线在和薛嵩作爱。她像一匹仰卧着的马，也就是说，把四肢都举了起来，拥住薛嵩，兴高采烈，就在这一瞬间，忽然把表情在脸上凝住，侧耳到地板上去听。薛嵩也凝神去听，白天被人砍了一刀，傻子才会没有警惕性，但除了耳朵里的血管跳动，什么也没有听见。他知道红线的耳朵比他好──用他自己的话来说：该小贱人口不读圣贤书，所以口齿清楚。耳不闻圣人言，所以听得甚远。目不识丁，所以能看到三里路外的蚊子屁股。结论当然是：中华士人不能和蛮夷之人比耳聪目明，所以有时要求教于蛮夷之人。薛嵩说：有动静吗？红线说：不要紧，还远。但薛嵩还是不放心，开始变得软塌塌的。红线又说：启禀老爷，天下太平；这都是老爷治理之功，小贱人佩服得紧！听了这样的赞誉，薛嵩精神抖擞，又变得很硬……\n\n> 更加不幸的是，他走着走着，别的女人也会在篱笆后面叫道：薛嵩，来陪我玩。他也会跑进去，伏在人家身上说：大姐，你好漂亮啊。过一会儿也要去解竹篾条，并且说：可以吗？倘若对方说不可以（这种情况很少见），他就把篾条重新系上，并且说：真遗憾，但你的确很漂亮。然后就走掉了。在更多的情况下他要和那女人做爱，而且很自然，很澎湃；然后又说：对不起，我还有别的事，一会儿再来陪你。就走掉了。这也是实话，假如不是在别处绊住了，他真想回来看她。假如有位八十岁的老太太叫他：薛嵩，陪我玩。他也会跑进去，把玩她老态龙钟的身体，然后说：老奶奶，你真是个漂亮的老奶奶。然后不和她做爱，走掉了。他做得很对。假如是个三岁的女孩叫他，他就跑进去抱抱她，然后说：小妹妹，你真漂亮，可惜太小了，不能和你玩。然后走掉了。假如走在路上，听到一头母水牛在背后“哞”地一叫，他也要回头看看，然后对它说：捣什么乱啊你。然后走掉了。这个寨子里所有的女人都喜欢薛嵩，因为他对女人的身体深具爱心，热爱一切年龄、一切体态的身体。这寨子里的一切男人都恨薛嵩，也是因为他对女人的身体深具爱心，喜欢一切年龄、一切体态的身体。作为一个男人，他还有些可赞美之处，但作为一寨之主，他简直混账得很。像他这样处处留情的人物，当然属于邪恶的自由派。\n\n小说中荒诞的矛盾与奇妙的构思也贯穿全文。\n\n> 老妓女以为他在耍花招，就直截了当地命令道：去造一把你自己打不开的锁。薛嵩接受了这个任务，他思考了三天三夜，既没有画图纸，也没有动手做。最后，他对老妓女说：大妈，这种锁我造不出来。老妓女说：胡扯！我不信你这么笨！此时她指的是薛嵩不会缺少造锁的聪明。后来她又说：我不信你有这么聪明！此时指的是薛嵩开锁的聪明。最后她说：我不信你这么刚好！这就是说，她不信薛嵩开锁的聪明正好胜过了造锁的聪明。实际上，聪明只有一种，用于开锁，就是开锁的聪明；用于造锁，就是造锁的聪明。薛嵩叹了一口气，摇了摇头，走开去做别的工作了。\n\n不过随着记忆恢复，王二不断重新定义着自己，而学院派和自由派的界限也渐渐模糊起来。在波函数坍塌后，唯一的结果便成了真实。在小说前半段，王二急于知道自己之前的记忆，可别人都认为他在开玩笑。而在小说后半段，我更愿理解为是王二被动接受自己的记忆，甚至有可能，他在故意遗忘那些糟糕的记忆。毕竟“假如我不曾失掉记忆，就不能取得这个胜利，也不能得到这个快乐——所以，失掉记忆也不全然是坏事。总想着自己丧失了记忆，才全然是坏事”。而实际上，用白衣女人的话来说，王二“总是这么逗”，从他失忆前就存在的好几份手稿以及交给领导的报告中，不难看出，不管在现实、在笔下，还是在梦幻中，他都有一个有趣的灵魂。","tags":["随笔","书评","读后感"],"categories":["living"]},{"title":"远程串流指北","url":"/2020/12/01/2020-12-01-parsec-for-remote/","content":"\nhttps://www.pixiv.net/artworks/85970602\n\n暑假买了个轻薄本，寻思可以把家里的台式利用起来。于是查找串流软件，发现了这个Parsec。\n\n## 准备\n既然远程，那么首先要解决开关机问题。网上有的人用什么智能开关和什么WIF控制，着实不太优雅。其实系统自带了一套方案，就是`WakeOnLan`。在被控端，我们需要在设备管理中，选择网卡，做以下配置：   \n![](https://xjc.cn-sh2.ufileos.com/assets/blog/201201/sx2.png)   \n![](https://xjc.cn-sh2.ufileos.com/assets/blog/201201/sx1.png)   \n把关于WOL的配置都开起来，特别要注意把绿色节能的选项都关掉，不然就有可能不能远程开机吧。\n那么现在就可以通过相关软件远程开机了。譬如路由器，以及`WakeOnLanMonitor`之类的。\n\n## 使用\n安装流程没啥好说的，在控制端和受控端都装上软件，登录，开机自启。注意注册时需要翻墙。下面说几个问题：   \n- 首次使用后碰见UAC无法抓屏。方案：在受控端任务管理器中打开`Parsec`服务。对于某些情况下的阻塞，Parsec会使用两个进程抓取。\n- 我把显示器搬到了学校，但如此一来抓取黑屏。这是远控的通病。想要在Headless Device上实现，需要一个诱骗器。如图。![](https://xjc.cn-sh2.ufileos.com/assets/blog/201201/ypq.png)许多输入设备可能也有这个问题，比如鼠标等。\n- 剪切板不能共享，有丶难受。另外像远端音频输入啥的就别想了。\n\n## 测评\n可以看下图。用来玩GTA一类的游戏还行。但有画面变动较大的情况下，时就像加了一层运动模糊。在静止状态下仍时常可见明显色带。不过延迟确实还可以。就是校园网和本子的无线网卡有丶拉跨。  \n![](https://xjc.cn-sh2.ufileos.com/assets/blog/201201/2.png)\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/201201/3.png)\n![](https://xjc.cn-sh2.ufileos.com/assets/blog/201201/1.png)","tags":["parsec","串流","远程"],"categories":["technology"]},{"title":"八月随想","url":"/2020/08/02/2020-08-02-random-thoughts-in-August/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/83333853)\n\n## 正文\n\n今年的夏天有点反常。\n\n母亲手上的经典款纸质日历已经翻到了公历八月初，而窗外的蝉才叫了似乎没几天，照母亲的话来说，今年的夏天不会太热。\n\n母亲是个怀旧的人，尽管平常她会在手机上记录生活事项，但比起散发着金属味的电子产品，她显然更喜欢把这本比手掌大一点的、封面是红色的、印着“万事如意”“福星高照”的老日历放在掌间摩挲。这本日历并不挂在墙上，母亲也没有每日撕一页的习惯。母亲习惯问我“小暑是什么时候？”“大暑过了吗？”然后一页一页地翻着日历，好似这样日子才不会从她指间溜走。\n\n地处江南，今年夏天，有点沉闷，但又比往年凉爽。太阳依旧炙烤着大地，蚊子在空中张牙舞爪，午后的人们依旧慵懒。这是一个平常的夏天。\n\n直到那天下午，空气沉闷，天气预报说晚上有雷阵雨。\n\n按之前约好的，在高考出成绩的第2天，一个爸妈都休息的双休日，一家三口人去我表哥家探望。表哥今年刚从浙江工业大学毕业，看起来黝黑硬朗了许多。唯一的问题是他还没有找到工作。甚至据他说，因为实习期未满，他连毕业证都没有拿到。而他的爸爸———我的大姨父，却在一年前中风，恢复得极差，几乎失去了劳动能力。大姨父本来就是打打零工，又没有买社保，这对一个原本就不富裕的家庭来说更是雪上加霜。\n\n我和表哥在他家附近的小路转了几圈。一路上他大谈逆全球化趋势、养老产业的吃香、和未来外贸的衰落，而我只是笑笑敷衍过去。回到他家，他提出了他认为的人生最优解：读一个高学历，然后出国，技术移民。母亲马上反驳：这现实吗？大姨也说，你先把工作给找好吧，就你现在打一个月1k多的工，能干点什么？表哥张了张嘴，想说话，却一句也说不出。\n\n回到家，父亲摇摇头，叹息着说，与上次探望相比，大姨父的状态又变差了。这时母亲评论道，像我表哥家的这种情况，表哥就算能移民，他怎么能去呢？他这样对家庭负责任吗？这样做不好。\n\n表哥高中时期成绩优秀，念的是全市最好的高中。高考没进浙大，算是没考好。他当初要选计算机专业，却被大姨因为工作辛苦的理由拦住了，而听了别人，报了机械工程专业。但我想他当初如果坚持计算机专业，或许现在就业的选择不会这么难，对家庭的压力也更能有所分担。\n\n母亲说，没有步入过社会，谁都体验不到生活的艰辛。在我高考快要结束之时，母亲也恰好辞掉了工作。赋闲在家，得知我成绩后，她每天都摆个苦瓜脸。我问她为什么这样，她说，总不可能笑脸相迎吧。这时，我突然明白了为什么当孙笑川被别人称为司马脸的时候，会气急败坏、暴跳如雷。对任何一个日子过得不是很顺的人来说，焦虑才是常态。\n\n我的一个同学，非常自律，暑假每天都约我早起爬山。而值得注意的是，他的高考成绩是近几年来全校的最高分。他有一个双胞胎弟弟，头脑和他一样聪明，但性格却相差巨大，高考分数也相差巨大——总分差了100多分。但高考成绩在你走出大学校园后，一无是处。我无法想象他们的家人是怎样看待两兄弟的，正如我无法想象他们两人的未来究竟是怎样的。\n\n有时早上起床，看见社交群里前一天凌晨两三点的聊天记录；有时望见电脑屏幕右下角弹出的Steam好友游戏上线提示，我都会略微愣一下神，然后思考：________________________？\n\n母亲最近找到了工作，她阴霾的脸上难得有了一丝阳光。母亲遵守传统观念，平常日子里精打细算，很会过生活。她关注事物的结果，是一个传统的功利主义者，对各个事件有一套通俗易懂的理论。但她无法理解，为什么表哥名校毕业却找不到工作，为什么房价会变得这么高，为什么90年代国企要改革下岗，为什么几十年来人与人的差距会变得那么大。但这又有什么关系呢，关注当下，难道不是一件值得高兴的事吗？\n\n这两天整理了一下高中三年的书，发现要堆放好多叠才能保持不倒，突然有些感慨，也说不清这时光到底是快还是慢了。在我认识的几个同学中，有的说要开发游戏，有的说要研究人工智能、搞算法，未来究竟怎样，谁也搞不明白，但有一颗初心，确实是值得开心的事。\n\n太阳照着大地，蚊子在空中飞，午后的人们慵懒。这是一个平常的夏天。\n\n2020.8.2\n\n有修改","tags":["生活","随笔"],"categories":["living"]},{"title":"初探WSL2","url":"/2020/07/14/2020-07-14-work-on-wsl2/","content":"\nbanner: [this](https://howto.lintel.in/wsl-vs-wsl-2-performance/)\n\n## 安装WSL2\n**需要更新到版本 2004、内部版本 19041 或更高版本。**\n- 以管理员身份打开 PowerShell 并运行：\n\n```bash\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n```\n\n- 重新启动计算机，以完成 WSL 安装并更新到 WSL 2。\n- 将 WSL 2 设置为默认版本：\n`wsl --set-default-version 2`\n\n>运行该命令后，你可能会看到此消息：WSL 2 requires an update to its kernel component. For information please visit https://aka.ms/wsl2kernel 。 跟随链接（ https://aka.ms/wsl2kernel ），**在文档中安装来自该页面的 MSI，以便在计算机上安装 Linux 内核供 WSL 2 使用。** 安装内核后，请再次运行该命令，该命令应会成功完成而不显示消息。\n\n- 打开 Microsoft Store，并选择你偏好的 Linux 分发版。\n\n\n## 调整生产环境\n### git配置\n\n```bash\ngpg --gen-key #根据提示，生成GPG key，注意：确保邮箱的那项是你github账号认证的邮箱；还有记住输入的密码。\ngpg --list-keys #查看GPG key\n```\n\n注意：sub:私钥；pub:公钥；一串乱码才是**GPG key ID**\n```bash\ngpg --armor --export pub GPG key ID #获取公钥\ngpg --list-keys #查看pub GPG key ID\ngit config --global user.signingkey pub GPG key ID #设置git签名时用的key\ngit config commit.gpgsign true #开启GPG签名commit\ngit config commit.gpgsign false #关闭\ngit config --global commit.gpgsign true #让所有的本地仓库都使用GPG签名\ngit config --global http.proxy socks5://ip:port\ngit config --global https.proxy socks5://ip:port\ngit config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n```\n\n### npm换源\n1. 安装nrm: `npm install -g nrm`\n2. 测试所有源的响应时间：`nrm test`\n3. 切换到`taobao` : `nrm use taobao`\n### pip换源\n修改`~/.pip/pip.conf`(没有就创建一个)，内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n### 网络互通\nWSL2 不和 Windows 共享一个 localhost，所以不像 WSL1 中 Linux 和 Windows 有无感知的网络互通性。\n\nWindows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了，可以使用如下脚本获取 Windows 的 IP，并使用 IP 访问 Windows：\n`ip route | grep default | awk '{print $3}'`。Windows 主机 IP 在每次重启后都会变化。\n\n但是，在WSL2中提供的网络服务却不能被局域网中的设备直接访问到。解决方法：\n1. 在Windows下bash`arp -a`,找到127开头的接口的第一个动态类型ip（也是127开头），记下为wslip。\n2. Windows下设置端口转发：`netsh interface portproxy add v4tov4 listenport=宿主机端口 listenaddress=0.0.0.0 connectport=wsl端口 connectaddress=wslip`。\n3. `netsh interface portproxy show all`可以查看状态。\n4. 每重启一次都要重新执行。\n5. 可能需要调整防火墙策略。\n\n### 文件系统互通\nWSL2 访问 Windows 文件系统依然通过挂载分区的方式，Windows 下的磁盘会被挂载在 `/mnt` 下，例如 `/mnt/c`。\n\n相比于 WSL1，这次增加了 Windows 访问 Linux 分区的能力，可以在资源管理器中输入 `\\\\wsl$\\<子系统名>` 访问对应的子系统分区，为了方便也可以在资源管理器中把 Linux 分区挂载成一个磁盘。\n\n更加方便的一个方式是，在 Terminal 中，使用 `explorer.exe .` 可以直接调用资源管理器打开当前目录.\n\n## 安装VS Code Remote\n略。\n\n## 坑\n- GPG签名时报错：`error: gpg failed to sign the data,fatal: failed to write commit object`,解决：wsl下bash`export GPG_TTY=$(tty)`。\n- 某次启动出现类似\n```\n[2020-04-23 06:54:31.382] Launching C:\\WINDOWS\\System32\\wsl.exe sh -c '\"$VSCODE_WSL_EXT_LOCATION/scripts/wslServer.sh\" ff915844119ce9485abfe8aa9076ec76b5300ddd stable .vscode-server 0  ' in c:\\Users\\Name\\.vscode\\extensions\\ms-vscode-remote.remote-wsl-0.44.2}\n[2020-04-23 06:54:31.928] sh: 1: /scripts/wslServer.sh: not found\n[2020-04-23 06:54:31.928] VS Code Server for WSL closed unexpectedly.\n```\n情况，通过此[issue](https://github.com/microsoft/vscode-remote-release/issues/2818)用`wsl.exe --shutdown`解决。\n\n## 参考：\n>https://docs.microsoft.com/zh-cn/windows/wsl/install-win10\nhttps://www.cnblogs.com/songqingbo/articles/5611588.html\nhttps://www.jianshu.com/p/72aada169e92\nhttps://www.cnblogs.com/xueweihan/p/5430451.html\nhttps://github.com/microsoft/WSL/issues/4150","tags":["WSL","linux"],"categories":["technology"]},{"title":"这是一篇测试文章","url":"/2020/01/29/2020-01-29-it-is-a-test/","content":"banner：[pixiv](https://www.pixiv.net/artworks/32204529)\n\n## 测试二级标题\n### 测试三级标题\n#### 测试四级标题\n##### 测试五级标题\n###### 测试六级标题\n\n*测试斜体文字*   \n_测试斜体文字_   \n**测试加粗文字**   \n__测试加粗文字__   \n***测试加粗斜体***   \n~~测试文字删除线~~   \n\n测试一段引用：   \n>2019新型冠状病毒，即“2019-nCoV”，因2019年武汉病毒性肺炎病例而被发现，2020年1月12日被世界卫生组织命名。   \n\n* 测试无序列表\n+ 测试无序列表\n- 测试无序列表\n  - 测试无序列表\n\n1. 测试有序列表项 一\n   1. 测试二层有序列表项\n2. 测试有序列表项 二\n3. 测试有序列表项 三\n\n- [ ] 测试未完成事项\n- [x] 测试已完成事项\n\n测试插入 GIF:   \n![gif](https://xjc.cn-sh2.ufileos.com/assets%2Fblog%2F200129%2F1.gif)\n\n测试表格：\n\n| # | language | version |\n|---|----------|---------|\n| 1 | python   | 3.8     |\n| 2 | html     | 5       |\n\n测试分割线：   \n---\n\n测试`python`代码：\n![](https://xjc.cn-sh2.ufileos.com/assets%2Fblog%2F200129%2Fpy.jpg \"来自哪部番？\")\n```python\nimport os, time, datetime, random, base64\nimport os.path\nfrom copy import deepcopy\ntry: \n    import cPickle as pickle\nexcept ImportError: \n    import pickle \nfrom hashlib import sha1\nfrom . import utils\n```\n\n测试`javascript`代码：\n```javascript \n function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n```\n\n<hr />\n\n测试B站视频：   \n{% iframe //player.bilibili.com/player.html?aid=78976165&cid=144685783&page=1 %}\n<hr />\n\n测试油管视频（需科学上网）：   \n{% youtube CeHrkLMj2Ts %}\n\n测试数学公式：   \n$e=mc^2$\n\n**END**","tags":["blog","test"],"categories":["technology"]}]