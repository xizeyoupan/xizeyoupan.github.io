[{"title":"八月随想","url":"/2020/08/02/random-thoughts-in-August/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/83333853)\n\n## 正文\n\n今年的夏天有点反常。\n\n母亲手上的经典款纸质日历已经翻到了公历八月初，而窗外的蝉才叫了似乎没几天，照母亲的话来说，今年的夏天不会太热。\n\n母亲是个怀旧的人，尽管平常她会在手机上记录生活事项，但比起散发着金属味的电子产品，她显然更喜欢把这本比手掌大一点的、封面是红色的、印着“万事如意”“福星高照”的老日历放在掌间摩挲。这本日历并不挂在墙上，母亲也没有每日撕一页的习惯。母亲习惯问我“小暑是什么时候？”“大暑过了吗？”然后一页一页地翻着日历，好似这样日子才不会从她指间溜走。\n\n江南的今年夏天，有点沉闷，但又比往年凉爽。太阳依旧照着大地，蚊子在空中张牙舞爪，午后的人们依旧慵懒。今年的夏天十分平常。\n\n直到那天下午，空气沉闷，天气预报说晚上有雷阵雨。失落吗？后悔吗？不甘吗？一切的答案在此时都没有了意义，只有苟且的生活还得继续。\n\n今年的夏天有点反常。\n\n父亲无时不刻的絮絮叨叨提醒着我高考考砸的事实。这是高考，不是月考，更不是模拟考。这就是终点吗？这就是结果吗？就在我懵懵懂懂期待答案之时，江南善变的六月天却以打雷的态势轻飘飘地告诉我：结束了。\n\n按之前约好的，在高考出成绩的第2天，一个爸妈都休息的双休日，一家三口人去我表哥家探望。表哥今年刚从浙江工业大学毕业，看起来黝黑硬朗了许多。唯一的问题是他还没有找到工作。甚至据他说，因为实习期未满，他连毕业证都没有拿到。而他的爸爸———我的大姨父，却在一年前中风，恢复得极差，直接失去了劳动能力。大姨父本来就是打打零工，又没有买社保，这对一个原本就不富裕的家庭来说更是雪上加霜。\n\n我和表哥在他家附近的小路转了几圈。一路上他大谈逆全球化趋势、养老产业的吃香、和未来外贸的衰落，而我只是笑笑敷衍过去。回到他家，他提出了他认为的人生最优解：读一个高学历，然后出国，技术移民。母亲马上反驳：这现实吗？大姨也说，你先把工作给找好吧，就你现在打一个月1k多的工，能干点什么？表哥张了张嘴，想说话，却一句也说不出。\n\n回到家，父亲摇摇头，叹息着说，与上次探望相比，大姨父的状态又变差了。这时母亲评论道，像我表哥家的这种情况，表哥就算能移民，他怎么能去呢？他这样对家庭负责任吗？这样做不好。\n\n表哥高中时期成绩优秀，念的是全市最好的高中。高考没进浙大，算是没考好。他当初要选计算机专业，却被大姨因为工作辛苦的理由拦住了，而听了别人，报了机械工程专业。但我想他当初如果坚持计算机专业，或许现在就业的选择不会这么难，对家庭的压力也更能有所分担。\n\n母亲说，没有步入过社会，谁都体验不到生活的艰辛。在我高考快要结束之时，母亲也恰好辞掉了工作。赋闲在家，得知我成绩后，她每天都摆个苦瓜脸。我问她为什么这样，她说，总不可能笑脸相迎吧。这时，我突然明白了为什么当孙笑川被别人称之为司马脸的时候，会气急败坏、暴跳如雷。对任何一个日子过得不是很顺的人来说，焦虑才是常态。\n\n我的一个同学，非常自律，暑假每天都约我早起爬山。而值得注意的是，他的高考成绩是近几年来全校的最高分。他有一个双胞胎弟弟，头脑和他一样聪明，但性格却相差巨大，高考分数也相差巨大——总分差了100多分。我无法想象他们的家人在这大喜大悲中是怎样度过的，正如我无法想象他们两人的未来究竟是怎样的。\n\n有时早上起床，看见社交群里前一天凌晨两三点的聊天记录；有时望见电脑屏幕右下角弹出的Steam好友游戏上线提示，我都会略微愣一下神，然后思考：________________________？\n\n母亲最近找到了工作，她阴霾的脸上难得有了一丝阳光。母亲遵守传统观念，平常日子里精打细算，很会过生活。她关注事物的结果，是一个传统的功利主义者，对各个事件有一套通俗易懂的理论。但她无法理解，为什么表哥名校毕业却找不到工作，为什么房价会变得这么高，为什么90年代国企要改革下岗，为什么几十年来人与人的差距会变得那么大。但这又有什么关系呢，找到了工作，这难道不是一件值得高兴的事吗？\n\n这两天整理了一下高中三年的书，发现要堆放好多叠才能保持不倒，突然有些感慨，也说不清这时光到底是快还是慢了。在我认识的几个同学中，有的说要开发游戏，有的说要研究人工智能、搞算法，未来究竟怎样，谁也搞不明白，但有一颗初心，确实是值得开心的事。\n\n太阳照着大地，蚊子在空中飞，午后的人们慵懒。今年的夏天依旧平常。\n\n2020.8.2","tags":["生活","总结"],"categories":["living"]},{"title":"在Padavan路由器上配置v2ray","url":"/2020/07/16/use-v2ray-on-padavan/","content":"\nbanner: [pixiv](https://www.pixiv.net/artworks/82982250)\n\n# 在电脑上将正常的节点导出为分享URL\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2F1.jpg)\n\n# 在Padavan上的v2ray选项中导入节点\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2F2.jpg)\n\n# 设置transocks\n`广告屏蔽功能`==`transocks`==开关打开   \n`透明重定向的代理服务器IP、域名` : `路由器的内网IP`  \n`透明重定向的代理服务器端口` : v2ray界面的`本地代理端口`   \n`远端服务器IP、域名` : v2ray节点的域名或者IP   \n其他保持默认即可。\n\n# 更新\n上一步`设置transocks`也不用，直接在新版中打开透明代理即可。   \n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2F3.png)\n\n\n# 注意\n路由器性能不行，慎用。\n\n# 参考\n>https://233v2.com/post/padavan-v2ray   \nhttps://opt.cn2qq.com/padavan   \nhttps://sixu.life/padavan-v2ray.html","tags":["v2ray"],"categories":["technology"]},{"title":"openmediavault 入门","url":"/2020/07/16/install-omv/","content":"\nbanner : [pixiv](https://www.pixiv.net/artworks/82968220)\n\n# 安装\n参考[这里](https://openmediavault.readthedocs.io/en/5.x/installation/index.html)。\n\n# 使用ssh连接\n原本想用Vscode来试试，结果似乎不支持，只好作罢。但换成普通的ssh软件后，尝试非root用户登录，竟然会报`Permission denied, please try again.`?可明明密码是对的呀！？ ~~先用root登录吧。~~ 原因如下： **需要在WEBUI中把用户加到`SSH`组中。**\n\n# 安装omv-extras\n```bash\nwget -O - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install | bash\n```\n# 构建docker\n非常麻烦，搞几个容器弄了一整天。   \n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2Fcontainer.png)   \n另外，在`/etc/docker/daemon.json`中添加 `\"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn/\"]`后，用`Portainer`面板pull的速度依旧很慢，似乎没有经过镜像加速，而在bash中pull的速度就正常了。   \n目前装了这几个用`caddy`来反代，实现远程访问。\n- `qbittorrent`需要在`WEBUI`中去掉勾选`点击劫持`和`CSRF保护`。\n- `jellyfin`需要挂载设备就像这样`--device /dev/dri/renderD128:/dev/dri/renderD128 --device /dev/dri/card0:/dev/dri/card0`才能硬解。另外别忘了`apt-get install i965-va-driver`。\n- `nectcloud`需要在`config/config.php`中设置`'overwriteprotocol' => 'https',`和`'trusted_proxies'`。\n\n# 参考\n>https://code.visualstudio.com/docs/remote/ssh   \nhttps://www.bilibili.com/video/BV1Ge41147B9","tags":["linux","docker","nas","openmediavault"],"categories":["technology"]},{"title":"初探WSL2","url":"/2020/07/14/work-on-wsl2/","content":"\nbanner: [this](https://howto.lintel.in/wsl-vs-wsl-2-performance/)\n\n## 安装WSL2\n**需要更新到版本 2004、内部版本 19041 或更高版本。**\n- 以管理员身份打开 PowerShell 并运行：\n\n```bash\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n```\n\n- 重新启动计算机，以完成 WSL 安装并更新到 WSL 2。\n- 将 WSL 2 设置为默认版本：\n`wsl --set-default-version 2`\n\n>运行该命令后，你可能会看到此消息：WSL 2 requires an update to its kernel component. For information please visit https://aka.ms/wsl2kernel 。 跟随链接（ https://aka.ms/wsl2kernel ），**在文档中安装来自该页面的 MSI，以便在计算机上安装 Linux 内核供 WSL 2 使用。** 安装内核后，请再次运行该命令，该命令应会成功完成而不显示消息。\n\n- 打开 Microsoft Store，并选择你偏好的 Linux 分发版。\n\n\n## 调整生产环境\n### git配置\n\n```bash\ngpg --gen-key #根据提示，生成GPG key，注意：确保邮箱的那项是你github账号认证的邮箱；还有记住输入的密码。\ngpg --list-keys #查看GPG key\n```\n\n注意：sub:私钥；pub:公钥；一串乱码才是**GPG key ID**\n```bash\ngpg --armor --export pub GPG key ID #获取公钥\ngpg --list-keys #查看pub GPG key ID\ngit config --global user.signingkey pub GPG key ID #设置git签名时用的key\ngit config commit.gpgsign true #开启GPG签名commit\ngit config commit.gpgsign false #关闭\ngit config --global commit.gpgsign true #让所有的本地仓库都使用GPG签名\ngit config --global http.proxy socks5://ip:port\ngit config --global https.proxy socks5://ip:port\ngit config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n```\n\n### npm换源\n1. 安装nrm: `npm install -g nrm`\n2. 测试所有源的响应时间：`nrm test`\n3. 切换到`taobao` : `nrm use taobao`\n### pip换源\n修改`~/.pip/pip.conf`(没有就创建一个)，内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n### 网络互通\nWSL2 不和 Windows 共享一个 localhost，所以不像 WSL1 中 Linux 和 Windows 有无感知的网络互通性。\n\nWindows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了，可以使用如下脚本获取 Windows 的 IP，并使用 IP 访问 Windows：\n`ip route | grep default | awk '{print $3}'`。Windows 主机 IP 在每次重启后都会变化。\n\n但是，在WSL2中提供的网络服务却不能被局域网中的设备直接访问到。解决方法：\n1. 在Windows下bash`arp -a`,找到127开头的接口的第一个动态类型ip（也是127开头），记下为wslip。\n2. Windows下设置端口转发：`netsh interface portproxy add v4tov4 listenport=宿主机端口 listenaddress=0.0.0.0 connectport=wsl端口 connectaddress=wslip`。\n3. `netsh interface portproxy show all`可以查看状态。\n4. 每重启一次都要重新执行。\n5. 可能需要调整防火墙策略。\n\n### 文件系统互通\nWSL2 访问 Windows 文件系统依然通过挂载分区的方式，Windows 下的磁盘会被挂载在 `/mnt` 下，例如 `/mnt/c`。\n\n相比于 WSL1，这次增加了 Windows 访问 Linux 分区的能力，可以在资源管理器中输入 `\\\\wsl$\\<子系统名>` 访问对应的子系统分区，为了方便也可以在资源管理器中把 Linux 分区挂载成一个磁盘。\n\n更加方便的一个方式是，在 Terminal 中，使用 `explorer.exe .` 可以直接调用资源管理器打开当前目录.\n\n## 安装VS Code Remote\n略。\n\n## 坑\n- GPG签名时报错：`error: gpg failed to sign the data,fatal: failed to write commit object`,解决：wsl下bash`export GPG_TTY=$(tty)`。\n\n## 参考：\n>https://docs.microsoft.com/zh-cn/windows/wsl/install-win10\nhttps://www.cnblogs.com/songqingbo/articles/5611588.html\nhttps://www.jianshu.com/p/72aada169e92\nhttps://www.cnblogs.com/xueweihan/p/5430451.html\nhttps://github.com/microsoft/WSL/issues/4150","tags":["WSL","Linux"],"categories":["technology"]},{"title":"抓包入门","url":"/2020/04/02/get-start-with-webSpider/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/80392837)\n\n## 浏览器插件和工具\n\nChrome的`F12`和`Ctrl+Shift+J`就不说了。\n\n### 插件\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/plugins.png)\n\n### 工具\n\n1. [查UA的](http://www.wangdahai.cn/4171.html)\n\n2. [查UA的](http://www.fynas.com/ua)\n\n## Fiddler\n\n配置如下：\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/options1.png)\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/options2.png)\n\n### 配置证书\n\nFiddler本质是个中间人，**抓https需要配置证书**。\n\n连上局域网后，访问`http://内网ip:8888/`来下载证书并安装\n\n### 抓模拟器\n\n1.  ![改桥接模式](https://xjc.cn-sh2.ufileos.com/img/blog/200402/moniqi.png)\n2.  ![修改代理](https://xjc.cn-sh2.ufileos.com/img/blog/200402/moniqidaili.png)\n3.  安装证书。\n\n### 抓虚拟机\n\n1.  ![改NAT模式](https://xjc.cn-sh2.ufileos.com/img/blog/200402/xuniji1.png)\n2.  ![修改代理](https://xjc.cn-sh2.ufileos.com/img/blog/200402/xuniji2.png)\n3.  安装证书。\n\n## HttpCanary\n\nHttpCanary是一个安卓上的抓包工具。\n\n_Android 7.0_ 以下机型安装证书即可抓包。\n\n_Android 7.0_ 以上的机型需要root。\n\n### [](#android-70-以上) Android 7.0 以上\n\n1.  导出证书\n\n    ![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/daochuzhengshu.png)\n2.  安装MT管理器\n3.  挂载读写\n\n    ![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/mtguazai.png)\n4.  复制证书,将新证书放入手机系统证书目录\n\n    手机系统目录位置是：\n> /system/etc/security/cacerts\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/fuzhi.png)\n\n## [](#总结) 总结\n\n就算这样，有一些包还是可能抓不到。一些App有校验证书等反抓包手段，但反反抓包的技术也并不是不存在。","tags":["抓包"],"categories":["technology"]},{"title":"Blender学习笔记","url":"/2020/02/15/blender-note/","content":"\nbanner：Blender2.8开机画面\n\n## 教程\n基于[只剩一瓶辣椒酱](https://space.bilibili.com/35723238)的[零基础BLENDER2.8中文开源系统入门教程—《黑铁骑士入门篇》](https://www.bilibili.com/video/av55550709)学习。Many thanks!\n\n## 一些资源\n[here](https://shimo.im/sheets/3vpsYHEdSgsPMaTc/)\n\n## Tips\n1. 红X绿Y蓝Z\n2. 工具箱属性可以用左键多选。\n\n## 快捷键\n\n| 键                   | 操作         |\n|----------------------|--------------|\n| 鼠标中键             | 视角旋转     |\n| shift+中键           | 视角平移     |\n| 滚轮                 | 推拉视角     |\n| ctrl+alt+q           | 四视图       |\n| ~                    | 选择视图     |\n| 0                    | 摄像机视角   |\n| N                    | 工具栏       |\n| i                    | 打帧         |\n| g                    | 移动         |\n| s                    | 缩放         |\n| r                    | 旋转         |\n| 上述+x，y，z         | 按轴变换     |\n| 上述+shift+x，y，z   | 按面变换     |\n| alt+g，s，r          | 重置         |\n| Esc                  | 取消         |\n| ctrl+a               | 设置零点     |\n| Tab                  | 编辑模式     |\n| x                    | 删除         |\n| shift+a              | 新建实例     |\n| w                    | 切换选择工具 |\n| alt+z                | 透视         |\n| alt+左键             | 环选         |\n| 起点左键ctrl终点左键 | 选取最短路径 |\n| 加选减选             | shift+左键   |\n| a                    | 全选         |\n| 双击a                | 取消选择     |\n| 右键                 | 细分         |\n| e                    | 整体挤出     |\n| shift+空格 9         | 沿法向挤出   |\n| shift+空格 0         | 挤出各个面   |\n| ctrl+右键            | 挤压到鼠标   |\n| ctrl+r+滚轮          | 环切及段数   |\n| ctrl+r+滚轮后左键    | 确定环切位置 |\n| ctrl+r+滚轮后左键    | 均匀环切     |\n| ctrl+b+滚轮          | 倒角         |\n| ctrl+b后按p          | 倒角轮廓     |\n| i                    | 内插面       |\n| i后ctrl+鼠标         | 内插面深度   |\n| ctrl+shift+r         | 偏移环切边   |\n| ctrl+i               | 反向选择     |\n| alt+s                | 法向缩放     |\n| ctrl+v               | 顶点菜单     |\n| j                    | 连接两个顶点 |\n| alt+m                | 合并顶点     |\n| ctrl+e               | 边菜单       |\n| ctrl+f               | 面菜单       |\n| L                    | 选择相连元素 |\n| h                    | 隐藏         |\n| .                    | 重置视角     |\n| alt+h                | 全部显示     |\n| ctrl+p               | 设定父级     |\n| alt+a                | 对齐         |\n| pgdn                 | 智能摄像机   |\n","tags":["blender"],"categories":["technology"]},{"title":"博客搭建历程","url":"/2020/02/09/how-to-build-a-blog-using-github/","content":"\nbanner：[这里](https://www.webhostwhat.com/guide-how-to-host-jekyll-blog-on-github-using-a-mac/)\n\n---\n\n## 1.选一个托管博客的平台\n是要自己买服务器还是在其他平台上托管（例如[Gituhb Pages](https://pages.github.com/)、[CODING](https://coding.net/)）？是想要单纯写一些文章（[CSDN](https://www.csdn.net/)、[简书](https://www.jianshu.com/)、[博客园](https://www.cnblogs.com/)）还是想要更个性化的定制和更多的插件（[WordPress](https://cn.wordpress.org/)、[Jekyll](https://jekyllrb.com/)、[Hexo](https://hexo.io/zh-cn/)）？鉴于免费、可适度拓展的特点，我选择**Gituhb Pages + Jekyll**来搭建博客。\n\n## 2.选一个合适自己的主题\n搜索主题很容易，只要搜`关键字+主题`就能出来一堆。除了外观、功能外，最好选择那些更新频繁的主题。~~我使用了[Jekyll Theme MDUI](https://github.com/KeJunMao/jekyll-theme-mdui)。（一个好久没人维护的主题）~~ **[Sun](https://github.com/liuyib/hexo-theme-stun/)**.如何创建Gituhb Pages之类的教程网上一堆，各主题的文档也会提及，在此不再赘述。到此为止每一步都很顺利，但接下来就是坑的开始。\n\n**第三条内容已过时，目前主题使用平稳**\n---\n## 3.配置、修改主题\n大体上的配置文档都会讲，这里来说几个坑。\n### 本地运行ruby报错\n`bundle install`后`bundle exec jekyll s`\n显示错误，类似\n```shell\nBundler could not find compatible versions for gem \"bundler\":\n  In Gemfile:\n    bundler (~> 1.12) x64-mingw32\n\n  Current Bundler version:\n    bundler (2.0.2)\nThis Gemfile requires a different version of Bundler.\nPerhaps you need to update Bundler by running `gem install bundler`?\n\nCould not find gem 'bundler (~> 1.12)' in any of the relevant sources:\n  the local ruby installation\n```\n网上解决方法：降级\n```shell\ngem install bundler -v 1.12\nbundle _1.12_ install\n```\n\n### 更新评论插件\n由于主题长时间没更新，很多插件失效或被墙。自行替换了[utterances](https://utteranc.es/),放在`_includes\\comment`下。这也是一个基于Github的插件，但配置更简单，不用初始化，似乎也更安全。\n\n### 音乐播放器\n此主题提供了`cplayer`and`aplayer`,我选择aplayer后添加歌曲。但一首一首加实在太麻烦，于是我部署了[网易云音乐 NodeJS 版 API](https://binaryify.github.io/NeteaseCloudMusicApi/#/),并写了一段脚本来格式化，which可以通过歌单来批量添加歌曲。但测试时却发现无法获取歌曲，让我折腾了好久。最后才发现歌名和作者中不能有`'`，会和`html`语言冲突。全部替换后又发现不行，最后又发现歌名和作者中不能有`:`，会和`Liquid`冲突（特别是带有空格的时候）。。。。最终脚本如下：\n```python\nimport requests\n\ndef get_list(list_id: int, api_domain: str) -> dict:\n    def get_songUrl(song_id: int):\n        tmp = requests.get(\n            f\"{api_domain}/song/url?id={song_id}&br=320000\").json()\n        return tmp['data'][0]['url']\n\n    final_list = []\n    list_josn = requests.get(\n        f\"{api_domain}/playlist/detail?id={list_id}\").json()\n    for i in list_josn['playlist']['tracks']:\n        temp_json = {}\n\n        if \"name\" in i.keys() and 'tns' in i.keys():\n            temp_json['name'] = '-'.join((i['name'], i['tns'][0]))\n        else:\n            temp_json['name'] = i['name']\n        temp_json['name'] = temp_json['name'].replace(\"'\", \"~\")\n        temp_json['name'] = temp_json['name'].replace(\":\", \">\")\n\n        temp_json['author'] = '/'.join((k['name'] for k in i['ar']))\n        temp_json['author'] = temp_json['author'].replace(\"'\", \"~\")\n        temp_json['author'] = temp_json['author'].replace(\":\", \">\")\n\n        temp_json['pic_url'] = i['al']['picUrl']\n        # temp_json['url']=get_songUrl(i['id']) # maybe 403\n        temp_json['url'] = 'http://music.163.com/song/media/outer/url?id={}.mp3'.format(\n            i['id'])\n\n        final_list.append(temp_json)\n    return final_list\n\ndef _format(_list) -> str:\n    oklist = []\n    for i in _list:\n        if not i['url']:\n            continue\n\n        tmp = f'''\n    - title: {i['name']}\n      author: {i['author']}\n      url: {i['url']}\n      pic: {i['pic_url']}\n'''\n        oklist.append(tmp)\n    return ''.join(oklist)\n\n\nresult = _format(get_list(45454, 'http://5464'))\nwith open('result.txt', 'w', encoding='utf8') as f:\n    f.write(result)\n    f.flush()\n# print(result)\n```\n\n但htpps测试时发现音乐外链是http，无法请求。于是在`_includes\\head.html`中加入\n```html\n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\n```\n这时差不多能用了，但还有几个问题：\n1. aplayer版本过低，有些接口无法调用。\n2. 这么插入歌曲相当于硬编码在网页里，歌单一长，会使网页变成一个巨大又难以打开的怪物。\n\n### live2d的canvas问题\n当启用live2d时，设置`in_mobile: false`，移动端浏览有时候不会响应。研究发现它的代码是这样的：\n\n{% raw %}\n```javascript\n{% if live2d.in_mobile == false %}\nvar isMobile;\nvar appVersion = navigator.appVersion;\nif (appVersion.indexOf('Mobile') > 0){\n    var isMobile = true;\n}\nif(!isMobile){\n    loadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n}\n{% else %}\nloadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n{% endif %}\n```\n{% endraw %}\n结果就会出现一个透明的canvas，挡住其他元素：\n\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200209%2Flive2dcanvas.png)\n\n\n于是改成这样：\n{% raw %}\n```javascript\n{% if live2d.in_mobile == false %}\nvar isMobile;\nvar appVersion = navigator.appVersion;\nif (appVersion.indexOf('Mobile') > 0){\n    var isMobile = true;\n}\nif(!isMobile){\n    loadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n} else {\n    document.getElementById(\"live2dcanvas\").style.display=\"none\";\n}\n{% else %}\nloadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n{% endif %}\n```\n{% endraw %}\n\n### 总结\n个人感觉这个主题虽然功能挺多但有点臃肿，改一处配置可能要修改2-3处地方，渲染开销还挺大。可能还有各种小bug和有待优化的地方，~~或许我学了前端之后可以来优化一下¿~~   \n**直接换主题了。**  \n手动分割线------------\n\n## 4.自定义域名（可选）\n如果你不想用`example.github.io`作为域名，就需要自己买一个域名。想方便的，需要备案的，直接在国内各种云商处购买即可。可以域名、CDN、证书一条龙服务。我是根据这篇教程[40元买一个1年域名，再加一个10年域名的方法 .XYZ域名便宜注册](https://www.vpsdx.com/6135.html)购买的域名，特点是便宜，但需要Paypal或国外信用卡。购买后可以切换DNS服务商，把记录CNAME到你的Gituhb Pages。\n\n## 5.CDN和COS（可选）\n如果你受不了巨慢的访问，就可以考虑CDN加速了。而COS可以放图片，当图床（当然也能放其他文件，css，js等）。国内几乎全部CDN都需要备案，而COS的免费额度大多不包含`https`流量。具体的可以参考[这篇](https://www.julydate.com/post/60859300/)和[这篇](https://www.julydate.com/post/1756138088/)博客。具体怎么部署，申请SSL证书之类的不多废话了，网上教程一堆。基于~~白嫖~~***实用***原则，我选择了`quic.cloud`作为CDN（就是后台有点简陋），[UCLOUD](https://www.ucloud.cn/)作为COS。UCLOUD这个就比较牛逼，虽然页面上没有明说，但却提供**实实在在的免费的** `https` 和**不变**的域名和CDN，这可比什么七牛云强多了。虽然不太准，但看得出速度确实有改善：\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200209%2Fpingspeed.png)","tags":["blog"],"categories":["technology"]},{"title":"这是一篇测试文章","url":"/2020/01/29/it-is-a-test/","content":"banner：[pixiv](https://www.pixiv.net/artworks/32204529)\n\n## 测试二级标题\n### 测试三级标题\n#### 测试四级标题\n##### 测试五级标题\n###### 测试六级标题\n\n*测试斜体文字*   \n_测试斜体文字_   \n**测试加粗文字**   \n__测试加粗文字__   \n***测试加粗斜体***   \n~~测试文字删除线~~   \n\n测试一段引用：   \n>2019新型冠状病毒，即“2019-nCoV”，因2019年武汉病毒性肺炎病例而被发现，2020年1月12日被世界卫生组织命名。   \n\n* 测试无序列表\n+ 测试无序列表\n- 测试无序列表\n  - 测试无序列表\n\n1. 测试有序列表项 一\n   1. 测试二层有序列表项\n2. 测试有序列表项 二\n3. 测试有序列表项 三\n\n- [ ] 测试未完成事项\n- [x] 测试已完成事项\n\n测试插入 GIF:   \n![gif](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200129%2F1.gif)\n\n测试表格：\n\n| # | language | version |\n|---|----------|---------|\n| 1 | python   | 3.8     |\n| 2 | html     | 5       |\n\n测试分割线：   \n---\n\n测试`python`代码：\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200129%2Fpy.jpg \"来自哪部番？\")\n```python\nimport os, time, datetime, random, base64\nimport os.path\nfrom copy import deepcopy\ntry: \n    import cPickle as pickle\nexcept ImportError: \n    import pickle \nfrom hashlib import sha1\nfrom . import utils\n```\n\n测试`javascript`代码：\n```javascript \n function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n```\n\n<hr />\n\n测试B站视频：   \n{% iframe //player.bilibili.com/player.html?aid=78976165&cid=144685783&page=1 %}\n<hr />\n\n测试油管视频（需科学上网）：   \n{% youtube CeHrkLMj2Ts %}\n\n测试数学公式：   \n$e=mc^2$\n\n**END**","tags":["blog","test"],"categories":["technology"]}]