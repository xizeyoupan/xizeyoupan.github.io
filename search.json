[{"title":"超方便的双向远程剪切板","url":"/2021/02/16/remote-clipboard/","content":"\nbanner：https://netbears.com/blog/serverless-website/\n\n## 起源\n在某两个设备之间时常会传递一小段文本，但苦于没有足够优雅的方式来解决，找了找网上好像缺少现成的轮子，故尝试自己撸一个。\n\n## 项目进度\n```bash\nmkdir remote-clipboard\n```\n\n## to be continued...","tags":["远程","python","flask","javascript"],"categories":["technology"]},{"title":"就NM离谱","url":"/2021/02/10/wtf/","content":"\n活久见，深夜的我缓缓打出 <del>　一个　</del> **无数个**？？？？？？？？？\n\nｄｄｘｙｑ害人不浅"},{"title":"无题","url":"/2021/02/05/untitled-1/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/86898844)\n\n## 一\n离2021年的春节没几天了。很多写博客的人都有一个习惯，就是在年中，或者大多数在年末，写一写自己的年终总结，顺便定下目标，展望未来。不论是技能的获得、知识的充实，或是感情的收获，还是自己的旅游、观影、氪金历程，把这些像列表一样一项一项列下来，很多人就会发现，“哇，原来我在过去一年里干了这么多事”。可如果要我总结，我却很可能什么也说不出来。要说在新的一年的规划，我却又怕这会变成永远也不会完成的resolutions,到时候打了自己的脸就不妙了。2020是过去的一年，更是被许多人认为“2020 will go down in history as a ‘*before and after* ’ year”的一年。在风暴仍未消散的情况下，既要提防旧时的战乱，又要注意未知的陷阱。身处此刻，谁不会茫然无措，谁不会流离失所？\n\n## 二\n不知什么时候起，有时面对眼前的一幕，我会突然惊觉：这我好像经历过。我不知道这种感觉是叫做即视感还是叫做做梦后遗症或是其他什么别的东西。我只知道这种感觉是如此真实，又如此虚幻，好像经历了早已经历的事，又好像突然明晰了未来的走向。只是一眨眼间思绪往往又**飘**回了现实。脑海中虚幻的场景，究竟是平行世界的延伸，还是在睡梦里的远征？我想不明白，也不想去想。从时间线上看，如果把一个人现在的存在称作是一种状态，把他将来可进行的行动与看作一个可选择的列表，把他过去所做的一系列事和一系列影响叫做走过的路径。那么这个人接下来就可以从选择列表中找出了一个行动来前进，而这个选择连同其产生新的结果，又被加入到了路径中。这一切难道不像一种回溯算法吗？只是算法能回溯，而人生却不能回溯罢了。那么所谓脑海中的即视感，会不会只是回溯之后残留的影子？有的人，一出生便继承家产，不用什么力气就能达到了大多数人的目标。这难道不是求最短路径的广度优先搜索?而有的人在不断试错中一鸣惊人，这又与深度优先搜索何其相似。在计算机中。每多一个状态，数组的纬度就往往会加一。而我所看到的，是无数生命与非生命体形成了一个**亿亿维**的数组。相互纠缠，彼此影响，不断进行着深度优先与广度优先搜索，而我们只是数不清的回溯中的一支罢了。这样的搜索从宇宙大爆炸开始，但却不知道什么时候结束，遑论目标是什么。\n\n## 三\n说到算法，我突然想起来，在寒假之前，我计划在寒假学习很多新算法。但实际上，我除了一天打鱼，十天晒网地做两道签到题，[随便写写思路](https://xizeyoupan.gitbook.io/note/algorithm/competitive-programming)，并没有什么实质的进展。上一次好好做的算法笔记，还是在两个月前的去年。对比我一个求知若渴的小学同学，坚持在凌晨写代码，在博客建好之初，就更新了两篇高质量博文，文采斐然，情感真挚。更在短短一两天时间内，便熟知了Markdown的语法知识。与此相反，我对某件事的热情却不能持久，还记得小学时写的挺好的毛笔字到了初中便渐渐丢掉了。更别说他在五年的时间里能坚持本心，对一款“运营类卡牌对撞游戏”不离不弃。这样的坚持，正是我所缺失的。自己是不是也该做点什么了？想着这个问题，等着春节的临近，带着一颗不会熬夜且思绪混乱的脑袋，我关上灯，开始“在睡梦中远征”了。","tags":["生活","总结","随笔"],"categories":["living"]},{"title":"王小波书评","url":"/2020/12/30/WangXiaobo-book-review/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/86483849)\n\n## 《万寿寺》\n故事由主人公王二被面包车撞到失忆，住进医院醒来后展开，之后他或主动、或被动地寻找自己的记忆，期间夹杂着自己笔下的薛嵩、红线、老妓女、小妓女，现实中的白衣女人、领导、表弟，这些人物在一根根可能的时间线里纠缠，最后以王二或自愿、或非自愿找到记忆而结束，于是“一切都在无可挽回地走向庸俗”。\n\n不道为什么，一看到这个结尾我就想起《白银时代》中称“将来的世界是银子的”，“早晚要沦为一片冷冰冰的、稀薄的银色混沌”。与《白银时代》中生活被条条框框约束、过着行尸走肉般生活的大多数人一样，《万寿寺》中王二最后也走向平凡，或者说，走向现实。而不同的是，因为急着掏粪而被面包车撞失了忆的王二有了可能性，得以在无数场景中穿梭。\n\n王二是个自由派，因此当他不喜欢他自己之前写的小说时，他可以修改、再创造，甚至直接化身为小说里的人物，就好像打破了第四面墙，以不同身份在不同时代和不同的人物对话。于是有了古灵精怪的红线、腹黑的老妓女、单纯的小妓女、深情的白衣女人以及心灵手巧，修东西有一把刷子的薛嵩——AKA王二自己。元叙述的手法使得各时空穿插起来，有了一种朦胧之感。\n\n除了单纯的时空变换外，不同事物的混合更是起了一种奇妙的化学反应。譬如中文与洋文穿插:\n> 所以她要从薛嵩身边经过，而那个人头始终在专注地看着她。红线想假作不知地走过，但第三次觉得不妥当。于是她转过身，看那颗人头。那人头朝她一笑，很俏皮，还皱了皱鼻子，伸出舌头舔舔嘴唇。红线知道它在招她过去。她有点不乐意。Anyway，这人可是她杀的呀。\n\n又比如，古代和现代穿插:\n\n在描写晚唐时期凤凰寨时，\n> 有关薛嵩的家，另有一种说法是这样的：它是一片柚木的大陆，可以在八根木柱上升降──当然，是通过一套极复杂的机构，有滑轮、缆绳、连杆、齿轮，还有蜗轮、蜗杆等等组成。薛嵩在自己门前转动一个轮子，轮子带动整套机构，他的花园和房子，连同地基，就缓缓地升起来。\n\n可以说很赛博朋克了。\n\n另一种很不符合古人的描写：\n\n> 在花园的左前方，也就是来宾入口附近，有一座水车，像一个巨大的车轮矗立在那里，薛嵩用它往平台上汲水。遗憾的是这水车转起来很重，这倒不是因为它造得不好，而是因为汲程很高。薛嵩在水车边贴了张标语，用水车的口吻写着“顺手转我一下”，这就是说，他想利用来宾的劳动力。\n\n还有譬如：\n> 作为一个史学家，我的脑壳应该是个monitor，手是一台打印机，在我的胸腔里，跳动着一个微处理器，就如那广告上说的pentium，给电脑一颗奔腾的心。说我是台586，是不是给自己脸上贴金？我的肠胃是台硬磁盘机，肚脐眼是软磁盘机。我还有一肚子的下水，可以和电脑部件一一对应。对应完了，还多了两条腿。假如电脑也长腿，我就更修不过来了。更加遗憾的是，我这台计算机还要吃饭和屙屎。\n\n这样的行文风格难免造成一种疏离感，但又平添了一份熟悉。\n\n在小说中，随着记忆的找回，薛嵩的故事也随之重构了好多次。其中最令人忍俊不禁的就是学院派和自由派的纷争了。\n\n> 一位贤者坐在君王面前，君王问道：有没有一种方法，可以控制天下苍生？这位智者、夫子，或者叫做傻逼，为了炫耀他的聪明，就答道：有的。这就是控制大家的意志。说他是智者，是因为他确实有这种鬼聪明。说他是傻逼，是因为他忘记了自己也是天下苍生的一分子，自己害起自己来了。从那一天开始，不仅天下苍生尽被控制，连智慧也被控制。有意志的智慧坚挺着，既有用，又有趣，可以给人带来极大的快感；没有意志的智慧软塌塌的，除了充当历史的脐带，别无用场了……所谓学院派，就是被历史的脐带缠住的流派……\n\n而自由派之间显然也不尽相同：\n> 在薛嵩家的竹楼里，红线在和薛嵩作爱。她像一匹仰卧着的马，也就是说，把四肢都举了起来，拥住薛嵩，兴高采烈，就在这一瞬间，忽然把表情在脸上凝住，侧耳到地板上去听。薛嵩也凝神去听，白天被人砍了一刀，傻子才会没有警惕性，但除了耳朵里的血管跳动，什么也没有听见。他知道红线的耳朵比他好──用他自己的话来说：该小贱人口不读圣贤书，所以口齿清楚。耳不闻圣人言，所以听得甚远。目不识丁，所以能看到三里路外的蚊子屁股。结论当然是：中华士人不能和蛮夷之人比耳聪目明，所以有时要求教于蛮夷之人。薛嵩说：有动静吗？红线说：不要紧，还远。但薛嵩还是不放心，开始变得软塌塌的。红线又说：启禀老爷，天下太平；这都是老爷治理之功，小贱人佩服得紧！听了这样的赞誉，薛嵩精神抖擞，又变得很硬……\n\n> 更加不幸的是，他走着走着，别的女人也会在篱笆后面叫道：薛嵩，来陪我玩。他也会跑进去，伏在人家身上说：大姐，你好漂亮啊。过一会儿也要去解竹篾条，并且说：可以吗？倘若对方说不可以（这种情况很少见），他就把篾条重新系上，并且说：真遗憾，但你的确很漂亮。然后就走掉了。在更多的情况下他要和那女人做爱，而且很自然，很澎湃；然后又说：对不起，我还有别的事，一会儿再来陪你。就走掉了。这也是实话，假如不是在别处绊住了，他真想回来看她。假如有位八十岁的老太太叫他：薛嵩，陪我玩。他也会跑进去，把玩她老态龙钟的身体，然后说：老奶奶，你真是个漂亮的老奶奶。然后不和她做爱，走掉了。他做得很对。假如是个三岁的女孩叫他，他就跑进去抱抱她，然后说：小妹妹，你真漂亮，可惜太小了，不能和你玩。然后走掉了。假如走在路上，听到一头母水牛在背后“哞”地一叫，他也要回头看看，然后对它说：捣什么乱啊你。然后走掉了。这个寨子里所有的女人都喜欢薛嵩，因为他对女人的身体深具爱心，热爱一切年龄、一切体态的身体。这寨子里的一切男人都恨薛嵩，也是因为他对女人的身体深具爱心，喜欢一切年龄、一切体态的身体。作为一个男人，他还有些可赞美之处，但作为一寨之主，他简直混账得很。像他这样处处留情的人物，当然属于邪恶的自由派。\n\n小说中荒诞的矛盾与奇妙的构思也贯穿全文。\n\n> 老妓女以为他在耍花招，就直截了当地命令道：去造一把你自己打不开的锁。薛嵩接受了这个任务，他思考了三天三夜，既没有画图纸，也没有动手做。最后，他对老妓女说：大妈，这种锁我造不出来。老妓女说：胡扯！我不信你这么笨！此时她指的是薛嵩不会缺少造锁的聪明。后来她又说：我不信你有这么聪明！此时指的是薛嵩开锁的聪明。最后她说：我不信你这么刚好！这就是说，她不信薛嵩开锁的聪明正好胜过了造锁的聪明。实际上，聪明只有一种，用于开锁，就是开锁的聪明；用于造锁，就是造锁的聪明。薛嵩叹了一口气，摇了摇头，走开去做别的工作了。\n\n不过随着记忆恢复，王二不断重新定义着自己，而学院派和自由派的界限也渐渐模糊起来。在波函数坍塌后，唯一的结果便成了真实。在小说前半段，王二急于知道自己之前的记忆，可别人都认为他在开玩笑。而在小说后半段，我更愿理解为是王二被动接受自己的记忆，甚至有可能，他在故意遗忘那些糟糕的记忆。毕竟“假如我不曾失掉记忆，就不能取得这个胜利，也不能得到这个快乐——所以，失掉记忆也不全然是坏事。总想着自己丧失了记忆，才全然是坏事”。而实际上，用白衣女人的话来说，王二“总是这么逗”，从他失忆前就存在的好几份手稿以及交给领导的报告中，不难看出，不管在现实、在笔下，还是在梦幻中，他都有一个有趣的灵魂。","tags":["随笔","书评","读后感"],"categories":["living"]},{"title":"C with Vscode","url":"/2020/12/01/use-vsc-to-debug-c/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/85984123)\n\n## 起因\n自学c++时，发现Windows下进行C开发有时不够优雅。像某人虽然已经吃过苦了，但竟然还用VS写十几行的小程序，没错，说的就是~~日本人[@ironpad_ryujo](https://github.com/quantum818)~~,这种疑惑行为属实令人不解。发现可以用VSC解决后，记录一下。\n\n## 安装\n一开始装的MinGW，但其中g++版本太老，遂使用MSYS2。我这里的操作可能与网上教程有所差异，~~After all,as the saying goes,\"This works well on my machine.\"~~\n- 从[清华镜像](https://mirror.tuna.tsinghua.edu.cn/help/msys2)下载并配置加速。\n- 打开终端，更新`pacman -Syu`；安装gcc`pacman -Ss gcc`;安装gdb`pacman -S gdb`；`pacman -S mingw-w64-x86_64-toolchain`选择gcc。把gcc路径加到环境变量中。\n- Vscode的配置如下。特别注意红圈地方。否则调试会报错。\n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/V2.png)\n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/V1.png)\n","tags":["vscode","C program","MSYS2"],"categories":["technology"]},{"title":"远程串流指北","url":"/2020/12/01/parsec-for-remote/","content":"\nhttps://www.pixiv.net/artworks/85970602\n\n暑假买了个轻薄本，寻思可以把家里的台式利用起来。于是查找串流软件，发现了这个。\n\n## 准备\n既然远程，那么首先要解决开关机问题。网上有的人用什么智能开关和什么WIF控制，着实不太优雅。其实系统自带了一套方案，就是`WakeOnLan`。在被控端，我们需要在设备管理中，选择网卡，做以下配置：   \n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/sx2.png)   \n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/sx1.png)   \n把关于WOL的配置都开起来，特别要注意把绿色节能的选项都关掉，不然就有可能不能远程开机吧。\n那么现在就可以通过相关软件远程开机了。譬如路由器，以及`WakeOnLanMonitor`之类的。\n\n## 使用\n安装流程没啥好说的，在控制端和受控端都装上软件，登录，开机自启。注意注册时需要翻墙。下面说几个问题：   \n- 首次使用后碰见UAC无法抓屏。方案：在受控端任务管理器中打开`Parsec`服务。对于某些情况下的阻塞，Parsec会使用两个进程抓取。\n- 我把显示器搬到了学校，但如此一来抓取黑屏。这是远控的通病。想要在Headless Device上实现，需要一个诱骗器。如图。![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/ypq.png)许多输入设备可能也有这个问题，比如鼠标等。\n- 剪切板不能共享，有丶难受。另外像远端音频输入啥的就别想了。\n\n## 测评\n可以看下图。用来玩GTA一类的游戏还行。但有画面变动较大的情况下，时就像加了一层运动模糊。在静止状态下仍时常可见明显色带。不过延迟确实还可以。就是校园网和本子的无线网卡有丶拉跨。  \n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/2.png)\n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/3.png)\n![](https://xjc.cn-sh2.ufileos.com/img/blog/201201/1.png)","tags":["parsec","串流","远程"],"categories":["technology"]},{"title":"八月随想","url":"/2020/08/02/random-thoughts-in-August/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/83333853)\n\n## 正文\n\n今年的夏天有点反常。\n\n母亲手上的经典款纸质日历已经翻到了公历八月初，而窗外的蝉才叫了似乎没几天，照母亲的话来说，今年的夏天不会太热。\n\n母亲是个怀旧的人，尽管平常她会在手机上记录生活事项，但比起散发着金属味的电子产品，她显然更喜欢把这本比手掌大一点的、封面是红色的、印着“万事如意”“福星高照”的老日历放在掌间摩挲。这本日历并不挂在墙上，母亲也没有每日撕一页的习惯。母亲习惯问我“小暑是什么时候？”“大暑过了吗？”然后一页一页地翻着日历，好似这样日子才不会从她指间溜走。\n\n地处江南，今年夏天，有点沉闷，但又比往年凉爽。太阳依旧炙烤着大地，蚊子在空中张牙舞爪，午后的人们依旧慵懒。这是一个平常的夏天。\n\n直到那天下午，空气沉闷，天气预报说晚上有雷阵雨。\n\n按之前约好的，在高考出成绩的第2天，一个爸妈都休息的双休日，一家三口人去我表哥家探望。表哥今年刚从浙江工业大学毕业，看起来黝黑硬朗了许多。唯一的问题是他还没有找到工作。甚至据他说，因为实习期未满，他连毕业证都没有拿到。而他的爸爸———我的大姨父，却在一年前中风，恢复得极差，几乎失去了劳动能力。大姨父本来就是打打零工，又没有买社保，这对一个原本就不富裕的家庭来说更是雪上加霜。\n\n我和表哥在他家附近的小路转了几圈。一路上他大谈逆全球化趋势、养老产业的吃香、和未来外贸的衰落，而我只是笑笑敷衍过去。回到他家，他提出了他认为的人生最优解：读一个高学历，然后出国，技术移民。母亲马上反驳：这现实吗？大姨也说，你先把工作给找好吧，就你现在打一个月1k多的工，能干点什么？表哥张了张嘴，想说话，却一句也说不出。\n\n回到家，父亲摇摇头，叹息着说，与上次探望相比，大姨父的状态又变差了。这时母亲评论道，像我表哥家的这种情况，表哥就算能移民，他怎么能去呢？他这样对家庭负责任吗？这样做不好。\n\n表哥高中时期成绩优秀，念的是全市最好的高中。高考没进浙大，算是没考好。他当初要选计算机专业，却被大姨因为工作辛苦的理由拦住了，而听了别人，报了机械工程专业。但我想他当初如果坚持计算机专业，或许现在就业的选择不会这么难，对家庭的压力也更能有所分担。\n\n母亲说，没有步入过社会，谁都体验不到生活的艰辛。在我高考快要结束之时，母亲也恰好辞掉了工作。赋闲在家，得知我成绩后，她每天都摆个苦瓜脸。我问她为什么这样，她说，总不可能笑脸相迎吧。这时，我突然明白了为什么当孙笑川被别人称为司马脸的时候，会气急败坏、暴跳如雷。对任何一个日子过得不是很顺的人来说，焦虑才是常态。\n\n我的一个同学，非常自律，暑假每天都约我早起爬山。而值得注意的是，他的高考成绩是近几年来全校的最高分。他有一个双胞胎弟弟，头脑和他一样聪明，但性格却相差巨大，高考分数也相差巨大——总分差了100多分。但高考成绩在你走出大学校园后，一无是处。我无法想象他们的家人是怎样看待两兄弟的，正如我无法想象他们两人的未来究竟是怎样的。\n\n有时早上起床，看见社交群里前一天凌晨两三点的聊天记录；有时望见电脑屏幕右下角弹出的Steam好友游戏上线提示，我都会略微愣一下神，然后思考：________________________？\n\n母亲最近找到了工作，她阴霾的脸上难得有了一丝阳光。母亲遵守传统观念，平常日子里精打细算，很会过生活。她关注事物的结果，是一个传统的功利主义者，对各个事件有一套通俗易懂的理论。但她无法理解，为什么表哥名校毕业却找不到工作，为什么房价会变得这么高，为什么90年代国企要改革下岗，为什么几十年来人与人的差距会变得那么大。但这又有什么关系呢，关注当下，难道不是一件值得高兴的事吗？\n\n这两天整理了一下高中三年的书，发现要堆放好多叠才能保持不倒，突然有些感慨，也说不清这时光到底是快还是慢了。在我认识的几个同学中，有的说要开发游戏，有的说要研究人工智能、搞算法，未来究竟怎样，谁也搞不明白，但有一颗初心，确实是值得开心的事。\n\n太阳照着大地，蚊子在空中飞，午后的人们慵懒。这是一个平常的夏天。\n\n2020.8.2\n\n有修改","tags":["生活","总结","随笔"],"categories":["living"]},{"title":"在Padavan路由器上配置v2ray","url":"/2020/07/16/use-v2ray-on-padavan/","content":"\nbanner: [pixiv](https://www.pixiv.net/artworks/82982250)\n\n# 在电脑上将正常的节点导出为分享URL\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2F1.jpg)\n\n# 在Padavan上的v2ray选项中导入节点\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2F2.jpg)\n\n# 设置transocks\n`广告屏蔽功能`==`transocks`==开关打开   \n`透明重定向的代理服务器IP、域名` : `路由器的内网IP`  \n`透明重定向的代理服务器端口` : v2ray界面的`本地代理端口`   \n`远端服务器IP、域名` : v2ray节点的域名或者IP   \n其他保持默认即可。\n\n# 更新\n上一步`设置transocks`也不用，直接在新版中打开透明代理即可。   \n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2F3.png)\n\n\n# 注意\n路由器性能不行，慎用。\n\n# 参考\n>https://233v2.com/post/padavan-v2ray   \nhttps://opt.cn2qq.com/padavan   \nhttps://sixu.life/padavan-v2ray.html","tags":["v2ray"],"categories":["technology"]},{"title":"openmediavault 入门","url":"/2020/07/16/install-omv/","content":"\nbanner : [pixiv](https://www.pixiv.net/artworks/82968220)\n\n# 安装\n参考[这里](https://openmediavault.readthedocs.io/en/5.x/installation/index.html)。\n\n# 使用ssh连接\n原本想用Vscode来试试，结果似乎不支持，只好作罢。但换成普通的ssh软件后，尝试非root用户登录，竟然会报`Permission denied, please try again.`?可明明密码是对的呀！？ ~~先用root登录吧。~~ 原因如下： **需要在WEBUI中把用户加到`SSH`组中。**\n\n# 安装omv-extras\n```bash\nwget -O - https://github.com/OpenMediaVault-Plugin-Developers/packages/raw/master/install | bash\n```\n# 构建docker\n非常麻烦，搞几个容器弄了一整天。   \n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200716%2Fcontainer.png)   \n另外，在`/etc/docker/daemon.json`中添加 `\"registry-mirrors\": [\"https://docker.mirrors.ustc.edu.cn/\"]`后，用`Portainer`面板pull的速度依旧很慢，似乎没有经过镜像加速，而在bash中pull的速度就正常了。   \n目前装了这几个用`caddy`来反代，实现远程访问。\n- `qbittorrent`需要在`WEBUI`中去掉勾选`点击劫持`和`CSRF保护`。\n- `jellyfin`需要挂载设备就像这样`--device /dev/dri/renderD128:/dev/dri/renderD128 --device /dev/dri/card0:/dev/dri/card0`才能硬解。另外别忘了`apt-get install i965-va-driver`。\n- `nectcloud`需要在`config/config.php`中设置`'overwriteprotocol' => 'https',`和`'trusted_proxies'`。\n- 加了一个webdav，命令`docker run --name webdav --restart always -v /srv/dev-disk:/var/lib/dav -e AUTH_TYPE=Digest -e USERNAME=USERNAME -e PASSWORD=PASSWORD --publish port:80 -d bytemark/webdav`。会在选择的目录下生存data文件夹。**但是在windows上直连有问题**，我用了**RaiDrive**来挂载。手机端用CX文件管理器。\n\n# 参考\n>https://code.visualstudio.com/docs/remote/ssh   \nhttps://www.bilibili.com/video/BV1Ge41147B9","tags":["linux","docker","nas","openmediavault","webdav"],"categories":["technology"]},{"title":"初探WSL2","url":"/2020/07/14/work-on-wsl2/","content":"\nbanner: [this](https://howto.lintel.in/wsl-vs-wsl-2-performance/)\n\n## 安装WSL2\n**需要更新到版本 2004、内部版本 19041 或更高版本。**\n- 以管理员身份打开 PowerShell 并运行：\n\n```bash\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart\ndism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart\n```\n\n- 重新启动计算机，以完成 WSL 安装并更新到 WSL 2。\n- 将 WSL 2 设置为默认版本：\n`wsl --set-default-version 2`\n\n>运行该命令后，你可能会看到此消息：WSL 2 requires an update to its kernel component. For information please visit https://aka.ms/wsl2kernel 。 跟随链接（ https://aka.ms/wsl2kernel ），**在文档中安装来自该页面的 MSI，以便在计算机上安装 Linux 内核供 WSL 2 使用。** 安装内核后，请再次运行该命令，该命令应会成功完成而不显示消息。\n\n- 打开 Microsoft Store，并选择你偏好的 Linux 分发版。\n\n\n## 调整生产环境\n### git配置\n\n```bash\ngpg --gen-key #根据提示，生成GPG key，注意：确保邮箱的那项是你github账号认证的邮箱；还有记住输入的密码。\ngpg --list-keys #查看GPG key\n```\n\n注意：sub:私钥；pub:公钥；一串乱码才是**GPG key ID**\n```bash\ngpg --armor --export pub GPG key ID #获取公钥\ngpg --list-keys #查看pub GPG key ID\ngit config --global user.signingkey pub GPG key ID #设置git签名时用的key\ngit config commit.gpgsign true #开启GPG签名commit\ngit config commit.gpgsign false #关闭\ngit config --global commit.gpgsign true #让所有的本地仓库都使用GPG签名\ngit config --global http.proxy socks5://ip:port\ngit config --global https.proxy socks5://ip:port\ngit config --global user.name \"yourname\"\ngit config --global user.email \"youremail\"\n```\n\n### npm换源\n1. 安装nrm: `npm install -g nrm`\n2. 测试所有源的响应时间：`nrm test`\n3. 切换到`taobao` : `nrm use taobao`\n### pip换源\n修改`~/.pip/pip.conf`(没有就创建一个)，内容如下：\n```\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\n```\n### 网络互通\nWSL2 不和 Windows 共享一个 localhost，所以不像 WSL1 中 Linux 和 Windows 有无感知的网络互通性。\n\nWindows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了，可以使用如下脚本获取 Windows 的 IP，并使用 IP 访问 Windows：\n`ip route | grep default | awk '{print $3}'`。Windows 主机 IP 在每次重启后都会变化。\n\n但是，在WSL2中提供的网络服务却不能被局域网中的设备直接访问到。解决方法：\n1. 在Windows下bash`arp -a`,找到127开头的接口的第一个动态类型ip（也是127开头），记下为wslip。\n2. Windows下设置端口转发：`netsh interface portproxy add v4tov4 listenport=宿主机端口 listenaddress=0.0.0.0 connectport=wsl端口 connectaddress=wslip`。\n3. `netsh interface portproxy show all`可以查看状态。\n4. 每重启一次都要重新执行。\n5. 可能需要调整防火墙策略。\n\n### 文件系统互通\nWSL2 访问 Windows 文件系统依然通过挂载分区的方式，Windows 下的磁盘会被挂载在 `/mnt` 下，例如 `/mnt/c`。\n\n相比于 WSL1，这次增加了 Windows 访问 Linux 分区的能力，可以在资源管理器中输入 `\\\\wsl$\\<子系统名>` 访问对应的子系统分区，为了方便也可以在资源管理器中把 Linux 分区挂载成一个磁盘。\n\n更加方便的一个方式是，在 Terminal 中，使用 `explorer.exe .` 可以直接调用资源管理器打开当前目录.\n\n## 安装VS Code Remote\n略。\n\n## 坑\n- GPG签名时报错：`error: gpg failed to sign the data,fatal: failed to write commit object`,解决：wsl下bash`export GPG_TTY=$(tty)`。\n- 某次启动出现类似\n```\n[2020-04-23 06:54:31.382] Launching C:\\WINDOWS\\System32\\wsl.exe sh -c '\"$VSCODE_WSL_EXT_LOCATION/scripts/wslServer.sh\" ff915844119ce9485abfe8aa9076ec76b5300ddd stable .vscode-server 0  ' in c:\\Users\\Name\\.vscode\\extensions\\ms-vscode-remote.remote-wsl-0.44.2}\n[2020-04-23 06:54:31.928] sh: 1: /scripts/wslServer.sh: not found\n[2020-04-23 06:54:31.928] VS Code Server for WSL closed unexpectedly.\n```\n情况，通过此[issue](https://github.com/microsoft/vscode-remote-release/issues/2818)用`wsl.exe --shutdown`解决。\n\n## 参考：\n>https://docs.microsoft.com/zh-cn/windows/wsl/install-win10\nhttps://www.cnblogs.com/songqingbo/articles/5611588.html\nhttps://www.jianshu.com/p/72aada169e92\nhttps://www.cnblogs.com/xueweihan/p/5430451.html\nhttps://github.com/microsoft/WSL/issues/4150","tags":["WSL","Linux"],"categories":["technology"]},{"title":"抓包入门","url":"/2020/04/02/get-start-with-webSpider/","content":"\nbanner：[pixiv](https://www.pixiv.net/artworks/80392837)\n\n## 浏览器插件和工具\n\nChrome的`F12`和`Ctrl+Shift+J`就不说了。\n\n### 插件\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/plugins.png)\n\n### 工具\n\n1. [查UA的](http://www.wangdahai.cn/4171.html)\n\n2. [查UA的](http://www.fynas.com/ua)\n\n## Fiddler\n\n配置如下：\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/options1.png)\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/options2.png)\n\n### 配置证书\n\nFiddler本质是个中间人，**抓https需要配置证书**。\n\n连上局域网后，访问`http://内网ip:8888/`来下载证书并安装\n\n### 抓模拟器\n\n1.  ![改桥接模式](https://xjc.cn-sh2.ufileos.com/img/blog/200402/moniqi.png)\n2.  ![修改代理](https://xjc.cn-sh2.ufileos.com/img/blog/200402/moniqidaili.png)\n3.  安装证书。\n\n### 抓虚拟机\n\n1.  ![改NAT模式](https://xjc.cn-sh2.ufileos.com/img/blog/200402/xuniji1.png)\n2.  ![修改代理](https://xjc.cn-sh2.ufileos.com/img/blog/200402/xuniji2.png)\n3.  安装证书。\n\n## HttpCanary\n\nHttpCanary是一个安卓上的抓包工具。\n\n_Android 7.0_ 以下机型安装证书即可抓包。\n\n_Android 7.0_ 以上的机型需要root。\n\n### [](#android-70-以上) Android 7.0 以上\n\n1.  导出证书\n\n    ![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/daochuzhengshu.png)\n2.  安装MT管理器\n3.  挂载读写\n\n    ![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/mtguazai.png)\n4.  复制证书,将新证书放入手机系统证书目录\n\n    手机系统目录位置是：\n> /system/etc/security/cacerts\n\n![](https://xjc.cn-sh2.ufileos.com/img/blog/200402/fuzhi.png)\n\n## [](#总结) 总结\n\n就算这样，有一些包还是可能抓不到。一些App有校验证书等反抓包手段，但反反抓包的技术也并不是不存在。","tags":["抓包"],"categories":["technology"]},{"title":"Blender学习笔记","url":"/2020/02/15/blender-note/","content":"\nbanner：Blender2.8开机画面\n\n## 教程\n基于[只剩一瓶辣椒酱](https://space.bilibili.com/35723238)的[零基础BLENDER2.8中文开源系统入门教程—《黑铁骑士入门篇》](https://www.bilibili.com/video/av55550709)学习。Many thanks!\n\n## 一些资源\n[here](https://shimo.im/sheets/3vpsYHEdSgsPMaTc/)\n\n## Tips\n1. 红X绿Y蓝Z\n2. 工具箱属性可以用左键多选。\n\n## 快捷键\n\n| 键                   | 操作         |\n|----------------------|--------------|\n| 鼠标中键             | 视角旋转     |\n| shift+中键           | 视角平移     |\n| 滚轮                 | 推拉视角     |\n| ctrl+alt+q           | 四视图       |\n| ~                    | 选择视图     |\n| 0                    | 摄像机视角   |\n| N                    | 工具栏       |\n| i                    | 打帧         |\n| g                    | 移动         |\n| s                    | 缩放         |\n| r                    | 旋转         |\n| 上述+x，y，z         | 按轴变换     |\n| 上述+shift+x，y，z   | 按面变换     |\n| alt+g，s，r          | 重置         |\n| Esc                  | 取消         |\n| ctrl+a               | 设置零点     |\n| Tab                  | 编辑模式     |\n| x                    | 删除         |\n| shift+a              | 新建实例     |\n| w                    | 切换选择工具 |\n| alt+z                | 透视         |\n| alt+左键             | 环选         |\n| 起点左键ctrl终点左键 | 选取最短路径 |\n| 加选减选             | shift+左键   |\n| a                    | 全选         |\n| 双击a                | 取消选择     |\n| 右键                 | 细分         |\n| e                    | 整体挤出     |\n| shift+空格 9         | 沿法向挤出   |\n| shift+空格 0         | 挤出各个面   |\n| ctrl+右键            | 挤压到鼠标   |\n| ctrl+r+滚轮          | 环切及段数   |\n| ctrl+r+滚轮后左键    | 确定环切位置 |\n| ctrl+r+滚轮后左键    | 均匀环切     |\n| ctrl+b+滚轮          | 倒角         |\n| ctrl+b后按p          | 倒角轮廓     |\n| i                    | 内插面       |\n| i后ctrl+鼠标         | 内插面深度   |\n| ctrl+shift+r         | 偏移环切边   |\n| ctrl+i               | 反向选择     |\n| alt+s                | 法向缩放     |\n| ctrl+v               | 顶点菜单     |\n| j                    | 连接两个顶点 |\n| alt+m                | 合并顶点     |\n| ctrl+e               | 边菜单       |\n| ctrl+f               | 面菜单       |\n| L                    | 选择相连元素 |\n| h                    | 隐藏         |\n| .                    | 重置视角     |\n| alt+h                | 全部显示     |\n| ctrl+p               | 设定父级     |\n| alt+a                | 对齐         |\n| pgdn                 | 智能摄像机   |\n","tags":["blender"],"categories":["technology"]},{"title":"博客搭建历程","url":"/2020/02/09/how-to-build-a-blog-using-github/","content":"\nbanner：[这里](https://www.webhostwhat.com/guide-how-to-host-jekyll-blog-on-github-using-a-mac/)\n\n---\n\n## 1.选一个托管博客的平台\n是要自己买服务器还是在其他平台上托管（例如[Gituhb Pages](https://pages.github.com/)、[CODING](https://coding.net/)）？是想要单纯写一些文章（[CSDN](https://www.csdn.net/)、[简书](https://www.jianshu.com/)、[博客园](https://www.cnblogs.com/)）还是想要更个性化的定制和更多的插件（[WordPress](https://cn.wordpress.org/)、[Jekyll](https://jekyllrb.com/)、[Hexo](https://hexo.io/zh-cn/)）？鉴于免费、可适度拓展的特点，我选择**Gituhb Pages + Jekyll**来搭建博客。\n\n## 2.选一个合适自己的主题\n搜索主题很容易，只要搜`关键字+主题`就能出来一堆。除了外观、功能外，最好选择那些更新频繁的主题。~~我使用了[Jekyll Theme MDUI](https://github.com/KeJunMao/jekyll-theme-mdui)。（一个好久没人维护的主题）~~ **[Stun](https://github.com/liuyib/hexo-theme-stun/)**.如何创建Gituhb Pages之类的教程网上一堆，各主题的文档也会提及，在此不再赘述。到此为止每一步都很顺利，但接下来就是坑的开始。\n\n**第三条内容已过时，目前主题使用平稳**\n---\n## 3.配置、修改主题\n大体上的配置文档都会讲，这里来说几个坑。\n### 本地运行ruby报错\n`bundle install`后`bundle exec jekyll s`\n显示错误，类似\n```shell\nBundler could not find compatible versions for gem \"bundler\":\n  In Gemfile:\n    bundler (~> 1.12) x64-mingw32\n\n  Current Bundler version:\n    bundler (2.0.2)\nThis Gemfile requires a different version of Bundler.\nPerhaps you need to update Bundler by running `gem install bundler`?\n\nCould not find gem 'bundler (~> 1.12)' in any of the relevant sources:\n  the local ruby installation\n```\n网上解决方法：降级\n```shell\ngem install bundler -v 1.12\nbundle _1.12_ install\n```\n\n### 更新评论插件\n由于主题长时间没更新，很多插件失效或被墙。自行替换了[utterances](https://utteranc.es/),放在`_includes\\comment`下。这也是一个基于Github的插件，但配置更简单，不用初始化，似乎也更安全。\n\n### 音乐播放器\n此主题提供了`cplayer`and`aplayer`,我选择aplayer后添加歌曲。但一首一首加实在太麻烦，于是我部署了[网易云音乐 NodeJS 版 API](https://binaryify.github.io/NeteaseCloudMusicApi/#/),并写了一段脚本来格式化，which可以通过歌单来批量添加歌曲。但测试时却发现无法获取歌曲，让我折腾了好久。最后才发现歌名和作者中不能有`'`，会和`html`语言冲突。全部替换后又发现不行，最后又发现歌名和作者中不能有`:`，会和`Liquid`冲突（特别是带有空格的时候）。。。。最终脚本如下：\n```python\nimport requests\n\ndef get_list(list_id: int, api_domain: str) -> dict:\n    def get_songUrl(song_id: int):\n        tmp = requests.get(\n            f\"{api_domain}/song/url?id={song_id}&br=320000\").json()\n        return tmp['data'][0]['url']\n\n    final_list = []\n    list_josn = requests.get(\n        f\"{api_domain}/playlist/detail?id={list_id}\").json()\n    for i in list_josn['playlist']['tracks']:\n        temp_json = {}\n\n        if \"name\" in i.keys() and 'tns' in i.keys():\n            temp_json['name'] = '-'.join((i['name'], i['tns'][0]))\n        else:\n            temp_json['name'] = i['name']\n        temp_json['name'] = temp_json['name'].replace(\"'\", \"~\")\n        temp_json['name'] = temp_json['name'].replace(\":\", \">\")\n\n        temp_json['author'] = '/'.join((k['name'] for k in i['ar']))\n        temp_json['author'] = temp_json['author'].replace(\"'\", \"~\")\n        temp_json['author'] = temp_json['author'].replace(\":\", \">\")\n\n        temp_json['pic_url'] = i['al']['picUrl']\n        # temp_json['url']=get_songUrl(i['id']) # maybe 403\n        temp_json['url'] = 'http://music.163.com/song/media/outer/url?id={}.mp3'.format(\n            i['id'])\n\n        final_list.append(temp_json)\n    return final_list\n\ndef _format(_list) -> str:\n    oklist = []\n    for i in _list:\n        if not i['url']:\n            continue\n\n        tmp = f'''\n    - title: {i['name']}\n      author: {i['author']}\n      url: {i['url']}\n      pic: {i['pic_url']}\n'''\n        oklist.append(tmp)\n    return ''.join(oklist)\n\n\nresult = _format(get_list(45454, 'http://5464'))\nwith open('result.txt', 'w', encoding='utf8') as f:\n    f.write(result)\n    f.flush()\n# print(result)\n```\n\n但htpps测试时发现音乐外链是http，无法请求。于是在`_includes\\head.html`中加入\n```html\n<meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\n```\n这时差不多能用了，但还有几个问题：\n1. aplayer版本过低，有些接口无法调用。\n2. 这么插入歌曲相当于硬编码在网页里，歌单一长，会使网页变成一个巨大又难以打开的怪物。\n\n### live2d的canvas问题\n当启用live2d时，设置`in_mobile: false`，移动端浏览有时候不会响应。研究发现它的代码是这样的：\n\n{% raw %}\n```javascript\n{% if live2d.in_mobile == false %}\nvar isMobile;\nvar appVersion = navigator.appVersion;\nif (appVersion.indexOf('Mobile') > 0){\n    var isMobile = true;\n}\nif(!isMobile){\n    loadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n}\n{% else %}\nloadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n{% endif %}\n```\n{% endraw %}\n结果就会出现一个透明的canvas，挡住其他元素：\n\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200209%2Flive2dcanvas.png)\n\n\n于是改成这样：\n{% raw %}\n```javascript\n{% if live2d.in_mobile == false %}\nvar isMobile;\nvar appVersion = navigator.appVersion;\nif (appVersion.indexOf('Mobile') > 0){\n    var isMobile = true;\n}\nif(!isMobile){\n    loadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n} else {\n    document.getElementById(\"live2dcanvas\").style.display=\"none\";\n}\n{% else %}\nloadlive2d(\"live2dcanvas\", '{{live2d.model  | prepend: site.baseurl }}');\n{% endif %}\n```\n{% endraw %}\n\n### 总结\n个人感觉这个主题虽然功能挺多但有点臃肿，改一处配置可能要修改2-3处地方，渲染开销还挺大。可能还有各种小bug和有待优化的地方，~~或许我学了前端之后可以来优化一下¿~~   \n**直接换主题了。**  \n\n## 手动分割线------------\n关于**Sun**主题的一些拓展\n\n### 添加live2d\n忘了怎么加的，好像用插件。\n\n### 添加音乐播放器\n[源码](https://github.com/metowolf/MetingJS)   \n添加`themes/stun/layout/_partials/widgets/MetingJS.pug`，内容为\n```\nlink(\n    rel=\"stylesheet\" \n    href=\"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css\"\n) \nscript(src=\"https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js\")\nscript(src=\"https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js\")\n\nmeting-js(\n\tserver=\"netease\"\n\ttype=\"playlist\"\n\tid=\"yourid\"\n    fixed=\"true\"\n)\n```\n\n接着修改`themes/stun/layout/_partials/head/head.pug`，在第46行插入`include ../widgets/MetingJS.pug`\n\n## 4.自定义域名（可选）\n如果你不想用`example.github.io`作为域名，就需要自己买一个域名。想方便的，需要备案的，直接在国内各种云商处购买即可。可以域名、CDN、证书一条龙服务。我是根据这篇教程[40元买一个1年域名，再加一个10年域名的方法 .XYZ域名便宜注册](https://www.vpsdx.com/6135.html)购买的域名，特点是便宜，但需要Paypal或国外信用卡。购买后可以切换DNS服务商，把记录CNAME到你的Gituhb Pages。\n\n## 5.CDN和COS（可选）\n如果你受不了巨慢的访问，就可以考虑CDN加速了。而COS可以放图片，当图床（当然也能放其他文件，css，js等）。国内几乎全部CDN都需要备案，而COS的免费额度大多不包含`https`流量。具体的可以参考[这篇](https://www.julydate.com/post/60859300/)和[这篇](https://www.julydate.com/post/1756138088/)博客。具体怎么部署，申请SSL证书之类的不多废话了，网上教程一堆。基于~~白嫖~~***实用***原则，~~我选择了`quic.cloud`作为CDN（就是后台有点简陋）~~，**过时，根据[目前政策](https://quic.cloud/faq/#configuration)，`Currently, the only CMS you can use QUIC.cloud with is WordPress. Your WordPress installation must be able to use the LiteSpeed Cache for WordPress plugin.` ~~一般站点好像不能白嫖，但老的似乎可以继续用。~~ 结论：~~白嫖要趁早。~~** 直接不用CDN了233。选择[UCLOUD](https://www.ucloud.cn/)作为COS。UCLOUD这个就比较牛逼，虽然页面上没有明说，但却提供**实实在在的免费的** `https` 和**不变**的域名和CDN，这可比什么七牛云强多了。虽然不太准，但看得出速度确实有改善：\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200209%2Fpingspeed.png)","tags":["blog"],"categories":["technology"]},{"title":"这是一篇测试文章","url":"/2020/01/29/it-is-a-test/","content":"banner：[pixiv](https://www.pixiv.net/artworks/32204529)\n\n## 测试二级标题\n### 测试三级标题\n#### 测试四级标题\n##### 测试五级标题\n###### 测试六级标题\n\n*测试斜体文字*   \n_测试斜体文字_   \n**测试加粗文字**   \n__测试加粗文字__   \n***测试加粗斜体***   \n~~测试文字删除线~~   \n\n测试一段引用：   \n>2019新型冠状病毒，即“2019-nCoV”，因2019年武汉病毒性肺炎病例而被发现，2020年1月12日被世界卫生组织命名。   \n\n* 测试无序列表\n+ 测试无序列表\n- 测试无序列表\n  - 测试无序列表\n\n1. 测试有序列表项 一\n   1. 测试二层有序列表项\n2. 测试有序列表项 二\n3. 测试有序列表项 三\n\n- [ ] 测试未完成事项\n- [x] 测试已完成事项\n\n测试插入 GIF:   \n![gif](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200129%2F1.gif)\n\n测试表格：\n\n| # | language | version |\n|---|----------|---------|\n| 1 | python   | 3.8     |\n| 2 | html     | 5       |\n\n测试分割线：   \n---\n\n测试`python`代码：\n![](https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200129%2Fpy.jpg \"来自哪部番？\")\n```python\nimport os, time, datetime, random, base64\nimport os.path\nfrom copy import deepcopy\ntry: \n    import cPickle as pickle\nexcept ImportError: \n    import pickle \nfrom hashlib import sha1\nfrom . import utils\n```\n\n测试`javascript`代码：\n```javascript \n function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n```\n\n<hr />\n\n测试B站视频：   \n{% iframe //player.bilibili.com/player.html?aid=78976165&cid=144685783&page=1 %}\n<hr />\n\n测试油管视频（需科学上网）：   \n{% youtube CeHrkLMj2Ts %}\n\n测试数学公式：   \n$e=mc^2$\n\n**END**","tags":["blog","test"],"categories":["technology"]}]