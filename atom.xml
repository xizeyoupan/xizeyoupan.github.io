<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Krypton&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.2333332.xyz/"/>
  <updated>2020-07-15T03:49:10.185Z</updated>
  <id>https://blog.2333332.xyz/</id>
  
  <author>
    <name>Krypton</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初探WSL2</title>
    <link href="https://blog.2333332.xyz/2020/07/14/work-on-wsl2/"/>
    <id>https://blog.2333332.xyz/2020/07/14/work-on-wsl2/</id>
    <published>2020-07-14T11:17:36.000Z</published>
    <updated>2020-07-15T03:49:10.185Z</updated>
    
    <content type="html"><![CDATA[<p>banner: <span class="exturl"><a class="exturl__link"   href="https://howto.lintel.in/wsl-vs-wsl-2-performance/"  target="_blank" rel="noopener">this</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="安装wsl2"   >          <a href="#安装wsl2" class="heading-link"><i class="fas fa-link"></i></a>安装WSL2</h2>      <p><strong>需要更新到版本 2004、内部版本 19041 或更高版本。</strong></p><ul><li>以管理员身份打开 PowerShell 并运行：</li></ul><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable</span>-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line">dism.exe /online /<span class="built_in">enable</span>-feature /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></div></figure><ul><li>重新启动计算机，以完成 WSL 安装并更新到 WSL 2。</li><li>将 WSL 2 设置为默认版本：<br /><code>wsl --set-default-version 2</code></li></ul><blockquote><p>运行该命令后，你可能会看到此消息：WSL 2 requires an update to its kernel component. For information please visit <span class="exturl"><a class="exturl__link"   href="https://aka.ms/wsl2kernel"  target="_blank" rel="noopener">https://aka.ms/wsl2kernel</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 。 跟随链接（ <span class="exturl"><a class="exturl__link"   href="https://aka.ms/wsl2kernel"  target="_blank" rel="noopener">https://aka.ms/wsl2kernel</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> ），<strong>在文档中安装来自该页面的 MSI，以便在计算机上安装 Linux 内核供 WSL 2 使用。</strong> 安装内核后，请再次运行该命令，该命令应会成功完成而不显示消息。</p></blockquote><ul><li>打开 Microsoft Store，并选择你偏好的 Linux 分发版。</li></ul>        <h2 id="调整生产环境"   >          <a href="#调整生产环境" class="heading-link"><i class="fas fa-link"></i></a>调整生产环境</h2>              <h3 id="git配置"   >          <a href="#git配置" class="heading-link"><i class="fas fa-link"></i></a>git配置</h3>      <figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gpg --gen-key <span class="comment">#根据提示，生成GPG key，注意：确保邮箱的那项是你github账号认证的邮箱；还有记住输入的密码。</span></span><br><span class="line">gpg --list-keys <span class="comment">#查看GPG key</span></span><br></pre></td></tr></table></div></figure><p>注意：sub:私钥；pub:公钥；一串乱码才是<strong>GPG key ID</strong></p><figure class="highlight bash"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gpg --armor --<span class="built_in">export</span> pub GPG key ID <span class="comment">#获取公钥</span></span><br><span class="line">gpg --list-keys <span class="comment">#查看pub GPG key ID</span></span><br><span class="line">git config --global user.signingkey pub GPG key ID <span class="comment">#设置git签名时用的key</span></span><br><span class="line">git config commit.gpgsign <span class="literal">true</span> <span class="comment">#开启GPG签名commit</span></span><br><span class="line">git config commit.gpgsign <span class="literal">false</span> <span class="comment">#关闭</span></span><br><span class="line">git config --global commit.gpgsign <span class="literal">true</span> <span class="comment">#让所有的本地仓库都使用GPG签名</span></span><br><span class="line">git config --global http.proxy socks5://ip:port</span><br><span class="line">git config --global https.proxy socks5://ip:port</span><br><span class="line">git config --global user.name <span class="string">"yourname"</span></span><br><span class="line">git config --global user.email <span class="string">"youremail"</span></span><br></pre></td></tr></table></div></figure>        <h3 id="npm换源"   >          <a href="#npm换源" class="heading-link"><i class="fas fa-link"></i></a>npm换源</h3>      <ol><li>安装nrm: <code>npm install -g nrm</code></li><li>测试所有源的响应时间：<code>nrm test</code></li><li>切换到<code>taobao</code> : <code>nrm use taobao</code></li></ol>        <h3 id="pip换源"   >          <a href="#pip换源" class="heading-link"><i class="fas fa-link"></i></a>pip换源</h3>      <p>修改<code>~/.pip/pip.conf</code>(没有就创建一个)，内容如下：</p><figure class="highlight plain"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line">index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></div></figure>        <h3 id="网络互通"   >          <a href="#网络互通" class="heading-link"><i class="fas fa-link"></i></a>网络互通</h3>      <p>WSL2 不和 Windows 共享一个 localhost，所以不像 WSL1 中 Linux 和 Windows 有无感知的网络互通性。</p><p>Windows 访问 WSL2 启动的网络服务，可以直接使用 localhost，但是 Linux 访问 Windows 启动的网络服务这种方式就不行了，可以使用如下脚本获取 Windows 的 IP，并使用 IP 访问 Windows：<br /><code>ip route | grep default | awk '{print $3}'</code></p>        <h3 id="文件系统互通"   >          <a href="#文件系统互通" class="heading-link"><i class="fas fa-link"></i></a>文件系统互通</h3>      <p>WSL2 访问 Windows 文件系统依然通过挂载分区的方式，Windows 下的磁盘会被挂载在 <code>/mnt</code> 下，例如 <code>/mnt/c</code>。</p><p>相比于 WSL1，这次增加了 Windows 访问 Linux 分区的能力，可以在资源管理器中输入 <code>\\wsl$\&lt;子系统名&gt;</code> 访问对应的子系统分区，为了方便也可以在资源管理器中把 Linux 分区挂载成一个磁盘。</p><p>更加方便的一个方式是，在 Terminal 中，使用 <code>explorer.exe .</code> 可以直接调用资源管理器打开当前目录.</p>        <h2 id="安装vs-code-remote"   >          <a href="#安装vs-code-remote" class="heading-link"><i class="fas fa-link"></i></a>安装VS Code Remote</h2>      <p>略。</p>        <h2 id="参考"   >          <a href="#参考" class="heading-link"><i class="fas fa-link"></i></a>参考：</h2>      <blockquote><p><span class="exturl"><a class="exturl__link"   href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10"  target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br /><span class="exturl"><a class="exturl__link"   href="https://www.cnblogs.com/songqingbo/articles/5611588.html"  target="_blank" rel="noopener">https://www.cnblogs.com/songqingbo/articles/5611588.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br /><span class="exturl"><a class="exturl__link"   href="https://www.jianshu.com/p/72aada169e92"  target="_blank" rel="noopener">https://www.jianshu.com/p/72aada169e92</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span><br /><span class="exturl"><a class="exturl__link"   href="https://www.cnblogs.com/xueweihan/p/5430451.html"  target="_blank" rel="noopener">https://www.cnblogs.com/xueweihan/p/5430451.html</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></blockquote>]]></content>
    
    <summary type="html">
    
      适用于 Linux 的 Windows 子系统可让开发人员按原样运行 GNU/Linux 环境 - 包括大多数命令行工具、实用工具和应用程序 - 且不会产生传统虚拟机或双启动设置开销。
    
    </summary>
    
    
      <category term="technology" scheme="https://blog.2333332.xyz/categories/technology/"/>
    
    
      <category term="WSL" scheme="https://blog.2333332.xyz/tags/WSL/"/>
    
      <category term="Linux" scheme="https://blog.2333332.xyz/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>抓包入门</title>
    <link href="https://blog.2333332.xyz/2020/04/02/get-start-with-webSpider/"/>
    <id>https://blog.2333332.xyz/2020/04/02/get-start-with-webSpider/</id>
    <published>2020-04-02T09:17:36.000Z</published>
    <updated>2020-07-15T04:57:00.895Z</updated>
    
    <content type="html"><![CDATA[<p>banner：<span class="exturl"><a class="exturl__link"   href="https://www.pixiv.net/artworks/80392837"  target="_blank" rel="noopener">pixiv</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="浏览器插件和工具"   >          <a href="#浏览器插件和工具" class="heading-link"><i class="fas fa-link"></i></a>浏览器插件和工具</h2>      <p>Chrome的<code>F12</code>和<code>Ctrl+Shift+J</code>就不说了。</p>        <h3 id="插件"   >          <a href="#插件" class="heading-link"><i class="fas fa-link"></i></a>插件</h3>      <p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/plugins.png"  alt="" />      </p>        <h3 id="工具"   >          <a href="#工具" class="heading-link"><i class="fas fa-link"></i></a>工具</h3>      <ol><li><p><span class="exturl"><a class="exturl__link"   href="http://www.wangdahai.cn/4171.html"  target="_blank" rel="noopener">查UA的</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></li><li><p><span class="exturl"><a class="exturl__link"   href="http://www.fynas.com/ua"  target="_blank" rel="noopener">查UA的</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p></li></ol>        <h2 id="fiddler"   >          <a href="#fiddler" class="heading-link"><i class="fas fa-link"></i></a>Fiddler</h2>      <p>配置如下：</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/options1.png"  alt="" />      </p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/options2.png"  alt="" />      </p>        <h3 id="配置证书"   >          <a href="#配置证书" class="heading-link"><i class="fas fa-link"></i></a>配置证书</h3>      <p>Fiddler本质是个中间人，<strong>抓https需要配置证书</strong>。</p><p>连上局域网后，访问<code>http://内网ip:8888/</code>来下载证书并安装</p>        <h3 id="抓模拟器"   >          <a href="#抓模拟器" class="heading-link"><i class="fas fa-link"></i></a>抓模拟器</h3>      <ol><li>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/moniqi.png"  alt="改桥接模式" />      </li><li>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/moniqidaili.png"  alt="修改代理" />      </li><li>安装证书。</li></ol>        <h3 id="抓虚拟机"   >          <a href="#抓虚拟机" class="heading-link"><i class="fas fa-link"></i></a>抓虚拟机</h3>      <ol><li>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/xuniji1.png"  alt="改NAT模式" />      </li><li>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/xuniji2.png"  alt="修改代理" />      </li><li>安装证书。</li></ol>        <h2 id="httpcanary"   >          <a href="#httpcanary" class="heading-link"><i class="fas fa-link"></i></a>HttpCanary</h2>      <p>HttpCanary是一个安卓上的抓包工具。</p><p><em>Android 7.0</em> 以下机型安装证书即可抓包。</p><p><em>Android 7.0</em> 以上的机型需要root。</p><h3 id=""><a class="markdownIt-Anchor" href="#"></a> <a href="#android-70-%E4%BB%A5%E4%B8%8A"></a> Android 7.0 以上</h3><ol><li><p>导出证书</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/daochuzhengshu.png"  alt="" />      </p></li><li><p>安装MT管理器</p></li><li><p>挂载读写</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/mtguazai.png"  alt="" />      </p></li><li><p>复制证书,将新证书放入手机系统证书目录</p><p>手机系统目录位置是：</p></li></ol><blockquote><p>/system/etc/security/cacerts</p></blockquote><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img/blog/200402/fuzhi.png"  alt="" />      </p>        <h2 id="-2"   >          <a href="#-2" class="heading-link"><i class="fas fa-link"></i></a>总结</h2>      <p>就算这样，有一些包还是可能抓不到。一些App有校验证书等反抓包手段，但反反抓包的技术也并不是不存在。</p>]]></content>
    
    <summary type="html">
    
      介绍了抓包的基本工具。
    
    </summary>
    
    
      <category term="technology" scheme="https://blog.2333332.xyz/categories/technology/"/>
    
    
      <category term="抓包" scheme="https://blog.2333332.xyz/tags/%E6%8A%93%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Blender学习笔记</title>
    <link href="https://blog.2333332.xyz/2020/02/15/blender-note/"/>
    <id>https://blog.2333332.xyz/2020/02/15/blender-note/</id>
    <published>2020-02-15T02:05:30.000Z</published>
    <updated>2020-07-14T14:57:07.370Z</updated>
    
    <content type="html"><![CDATA[<p>banner：Blender2.8开机画面</p>        <h2 id="教程"   >          <a href="#教程" class="heading-link"><i class="fas fa-link"></i></a>教程</h2>      <p>基于<span class="exturl"><a class="exturl__link"   href="https://space.bilibili.com/35723238"  target="_blank" rel="noopener">只剩一瓶辣椒酱</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>的<span class="exturl"><a class="exturl__link"   href="https://www.bilibili.com/video/av55550709"  target="_blank" rel="noopener">零基础BLENDER2.8中文开源系统入门教程—《黑铁骑士入门篇》</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>学习。Many thanks!</p>        <h2 id="一些资源"   >          <a href="#一些资源" class="heading-link"><i class="fas fa-link"></i></a>一些资源</h2>      <p><span class="exturl"><a class="exturl__link"   href="https://shimo.im/sheets/3vpsYHEdSgsPMaTc/"  target="_blank" rel="noopener">here</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="tips"   >          <a href="#tips" class="heading-link"><i class="fas fa-link"></i></a>Tips</h2>      <ol><li>红X绿Y蓝Z</li><li>工具箱属性可以用左键多选。</li></ol>        <h2 id="快捷键"   >          <a href="#快捷键" class="heading-link"><i class="fas fa-link"></i></a>快捷键</h2>      <div class="table-container"><table><thead><tr><th>键</th><th>操作</th></tr></thead><tbody><tr><td>鼠标中键</td><td>视角旋转</td></tr><tr><td>shift+中键</td><td>视角平移</td></tr><tr><td>滚轮</td><td>推拉视角</td></tr><tr><td>ctrl+alt+q</td><td>四视图</td></tr><tr><td>~</td><td>选择视图</td></tr><tr><td>0</td><td>摄像机视角</td></tr><tr><td>N</td><td>工具栏</td></tr><tr><td>i</td><td>打帧</td></tr><tr><td>g</td><td>移动</td></tr><tr><td>s</td><td>缩放</td></tr><tr><td>r</td><td>旋转</td></tr><tr><td>上述+x，y，z</td><td>按轴变换</td></tr><tr><td>上述+shift+x，y，z</td><td>按面变换</td></tr><tr><td>alt+g，s，r</td><td>重置</td></tr><tr><td>Esc</td><td>取消</td></tr><tr><td>ctrl+a</td><td>设置零点</td></tr><tr><td>Tab</td><td>编辑模式</td></tr><tr><td>x</td><td>删除</td></tr><tr><td>shift+a</td><td>新建实例</td></tr><tr><td>w</td><td>切换选择工具</td></tr><tr><td>alt+z</td><td>透视</td></tr><tr><td>alt+左键</td><td>环选</td></tr><tr><td>起点左键ctrl终点左键</td><td>选取最短路径</td></tr><tr><td>加选减选</td><td>shift+左键</td></tr><tr><td>a</td><td>全选</td></tr><tr><td>双击a</td><td>取消选择</td></tr><tr><td>右键</td><td>细分</td></tr><tr><td>e</td><td>整体挤出</td></tr><tr><td>shift+空格 9</td><td>沿法向挤出</td></tr><tr><td>shift+空格 0</td><td>挤出各个面</td></tr><tr><td>ctrl+右键</td><td>挤压到鼠标</td></tr><tr><td>ctrl+r+滚轮</td><td>环切及段数</td></tr><tr><td>ctrl+r+滚轮后左键</td><td>确定环切位置</td></tr><tr><td>ctrl+r+滚轮后左键</td><td>均匀环切</td></tr><tr><td>ctrl+b+滚轮</td><td>倒角</td></tr><tr><td>ctrl+b后按p</td><td>倒角轮廓</td></tr><tr><td>i</td><td>内插面</td></tr><tr><td>i后ctrl+鼠标</td><td>内插面深度</td></tr><tr><td>ctrl+shift+r</td><td>偏移环切边</td></tr><tr><td>ctrl+i</td><td>反向选择</td></tr><tr><td>alt+s</td><td>法向缩放</td></tr><tr><td>ctrl+v</td><td>顶点菜单</td></tr><tr><td>j</td><td>连接两个顶点</td></tr><tr><td>alt+m</td><td>合并顶点</td></tr><tr><td>ctrl+e</td><td>边菜单</td></tr><tr><td>ctrl+f</td><td>面菜单</td></tr><tr><td>L</td><td>选择相连元素</td></tr><tr><td>h</td><td>隐藏</td></tr><tr><td>.</td><td>重置视角</td></tr><tr><td>alt+h</td><td>全部显示</td></tr><tr><td>ctrl+p</td><td>设定父级</td></tr><tr><td>alt+a</td><td>对齐</td></tr><tr><td>pgdn</td><td>智能摄像机</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      简单记录了一些快捷键等。
    
    </summary>
    
    
      <category term="technology" scheme="https://blog.2333332.xyz/categories/technology/"/>
    
    
      <category term="blender" scheme="https://blog.2333332.xyz/tags/blender/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建历程</title>
    <link href="https://blog.2333332.xyz/2020/02/09/how-to-build-a-blog-using-github/"/>
    <id>https://blog.2333332.xyz/2020/02/09/how-to-build-a-blog-using-github/</id>
    <published>2020-02-09T13:05:30.000Z</published>
    <updated>2020-07-15T02:35:13.615Z</updated>
    
    <content type="html"><![CDATA[<p>banner：<span class="exturl"><a class="exturl__link"   href="https://www.webhostwhat.com/guide-how-to-host-jekyll-blog-on-github-using-a-mac/"  target="_blank" rel="noopener">这里</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><hr />        <h2 id="1选一个托管博客的平台"   >          <a href="#1选一个托管博客的平台" class="heading-link"><i class="fas fa-link"></i></a>1.选一个托管博客的平台</h2>      <p>是要自己买服务器还是在其他平台上托管（例如<span class="exturl"><a class="exturl__link"   href="https://pages.github.com/"  target="_blank" rel="noopener">Gituhb Pages</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>、<span class="exturl"><a class="exturl__link"   href="https://coding.net/"  target="_blank" rel="noopener">CODING</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>）？是想要单纯写一些文章（<span class="exturl"><a class="exturl__link"   href="https://www.csdn.net/"  target="_blank" rel="noopener">CSDN</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>、<span class="exturl"><a class="exturl__link"   href="https://www.jianshu.com/"  target="_blank" rel="noopener">简书</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>、<span class="exturl"><a class="exturl__link"   href="https://www.cnblogs.com/"  target="_blank" rel="noopener">博客园</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>）还是想要更个性化的定制和更多的插件（<span class="exturl"><a class="exturl__link"   href="https://cn.wordpress.org/"  target="_blank" rel="noopener">WordPress</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>、<span class="exturl"><a class="exturl__link"   href="https://jekyllrb.com/"  target="_blank" rel="noopener">Jekyll</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>、<span class="exturl"><a class="exturl__link"   href="https://hexo.io/zh-cn/"  target="_blank" rel="noopener">Hexo</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>）？鉴于免费、可适度拓展的特点，我选择<strong>Gituhb Pages + Jekyll</strong>来搭建博客。</p>        <h2 id="2选一个合适自己的主题"   >          <a href="#2选一个合适自己的主题" class="heading-link"><i class="fas fa-link"></i></a>2.选一个合适自己的主题</h2>      <p>搜索主题很容易，只要搜<code>关键字+主题</code>就能出来一堆。除了外观、功能外，最好选择那些更新频繁的主题。<s>我使用了<span class="exturl"><a class="exturl__link"   href="https://github.com/KeJunMao/jekyll-theme-mdui"  target="_blank" rel="noopener">Jekyll Theme MDUI</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。（一个好久没人维护的主题）</s> <strong><span class="exturl"><a class="exturl__link"   href="https://github.com/liuyib/hexo-theme-stun/"  target="_blank" rel="noopener">Sun</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></strong>.如何创建Gituhb Pages之类的教程网上一堆，各主题的文档也会提及，在此不再赘述。到此为止每一步都很顺利，但接下来就是坑的开始。</p>        <h2 id="第三条内容已过时目前主题使用平稳"   >          <a href="#第三条内容已过时目前主题使用平稳" class="heading-link"><i class="fas fa-link"></i></a>第三条内容已过时，目前主题使用平稳</h2>              <h2 id="3配置-修改主题"   >          <a href="#3配置-修改主题" class="heading-link"><i class="fas fa-link"></i></a>3.配置、修改主题</h2>      <p>大体上的配置文档都会讲，这里来说几个坑。</p>        <h3 id="本地运行ruby报错"   >          <a href="#本地运行ruby报错" class="heading-link"><i class="fas fa-link"></i></a>本地运行ruby报错</h3>      <p><code>bundle install</code>后<code>bundle exec jekyll s</code><br />显示错误，类似</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Bundler could not find compatible versions for gem "bundler":</span><br><span class="line">  In Gemfile:</span><br><span class="line">    bundler (~&gt; 1.12) x64-mingw32</span><br><span class="line"></span><br><span class="line">  Current Bundler version:</span><br><span class="line">    bundler (2.0.2)</span><br><span class="line">This Gemfile requires a different version of Bundler.</span><br><span class="line">Perhaps you need to update Bundler by running `gem install bundler`?</span><br><span class="line"></span><br><span class="line">Could not find gem 'bundler (~&gt; 1.12)' in any of the relevant sources:</span><br><span class="line">  the local ruby installation</span><br></pre></td></tr></table></div></figure><p>网上解决方法：降级</p><figure class="highlight shell"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gem install bundler -v 1.12</span><br><span class="line">bundle _1.12_ install</span><br></pre></td></tr></table></div></figure>        <h3 id="更新评论插件"   >          <a href="#更新评论插件" class="heading-link"><i class="fas fa-link"></i></a>更新评论插件</h3>      <p>由于主题长时间没更新，很多插件失效或被墙。自行替换了<span class="exturl"><a class="exturl__link"   href="https://utteranc.es/"  target="_blank" rel="noopener">utterances</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>,放在<code>_includes\comment</code>下。这也是一个基于Github的插件，但配置更简单，不用初始化，似乎也更安全。</p>        <h3 id="音乐播放器"   >          <a href="#音乐播放器" class="heading-link"><i class="fas fa-link"></i></a>音乐播放器</h3>      <p>此主题提供了<code>cplayer</code>and<code>aplayer</code>,我选择aplayer后添加歌曲。但一首一首加实在太麻烦，于是我部署了<span class="exturl"><a class="exturl__link"   href="https://binaryify.github.io/NeteaseCloudMusicApi/#/"  target="_blank" rel="noopener">网易云音乐 NodeJS 版 API</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>,并写了一段脚本来格式化，which可以通过歌单来批量添加歌曲。但测试时却发现无法获取歌曲，让我折腾了好久。最后才发现歌名和作者中不能有<code>'</code>，会和<code>html</code>语言冲突。全部替换后又发现不行，最后又发现歌名和作者中不能有<code>:</code>，会和<code>Liquid</code>冲突（特别是带有空格的时候）。。。。最终脚本如下：</p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_list</span><span class="params">(list_id: int, api_domain: str)</span> -&gt; dict:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_songUrl</span><span class="params">(song_id: int)</span>:</span></span><br><span class="line">        tmp = requests.get(</span><br><span class="line">            <span class="string">f"<span class="subst">&#123;api_domain&#125;</span>/song/url?id=<span class="subst">&#123;song_id&#125;</span>&amp;br=320000"</span>).json()</span><br><span class="line">        <span class="keyword">return</span> tmp[<span class="string">'data'</span>][<span class="number">0</span>][<span class="string">'url'</span>]</span><br><span class="line"></span><br><span class="line">    final_list = []</span><br><span class="line">    list_josn = requests.get(</span><br><span class="line">        <span class="string">f"<span class="subst">&#123;api_domain&#125;</span>/playlist/detail?id=<span class="subst">&#123;list_id&#125;</span>"</span>).json()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> list_josn[<span class="string">'playlist'</span>][<span class="string">'tracks'</span>]:</span><br><span class="line">        temp_json = &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">"name"</span> <span class="keyword">in</span> i.keys() <span class="keyword">and</span> <span class="string">'tns'</span> <span class="keyword">in</span> i.keys():</span><br><span class="line">            temp_json[<span class="string">'name'</span>] = <span class="string">'-'</span>.join((i[<span class="string">'name'</span>], i[<span class="string">'tns'</span>][<span class="number">0</span>]))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            temp_json[<span class="string">'name'</span>] = i[<span class="string">'name'</span>]</span><br><span class="line">        temp_json[<span class="string">'name'</span>] = temp_json[<span class="string">'name'</span>].replace(<span class="string">"'"</span>, <span class="string">"~"</span>)</span><br><span class="line">        temp_json[<span class="string">'name'</span>] = temp_json[<span class="string">'name'</span>].replace(<span class="string">":"</span>, <span class="string">"&gt;"</span>)</span><br><span class="line"></span><br><span class="line">        temp_json[<span class="string">'author'</span>] = <span class="string">'/'</span>.join((k[<span class="string">'name'</span>] <span class="keyword">for</span> k <span class="keyword">in</span> i[<span class="string">'ar'</span>]))</span><br><span class="line">        temp_json[<span class="string">'author'</span>] = temp_json[<span class="string">'author'</span>].replace(<span class="string">"'"</span>, <span class="string">"~"</span>)</span><br><span class="line">        temp_json[<span class="string">'author'</span>] = temp_json[<span class="string">'author'</span>].replace(<span class="string">":"</span>, <span class="string">"&gt;"</span>)</span><br><span class="line"></span><br><span class="line">        temp_json[<span class="string">'pic_url'</span>] = i[<span class="string">'al'</span>][<span class="string">'picUrl'</span>]</span><br><span class="line">        <span class="comment"># temp_json['url']=get_songUrl(i['id']) # maybe 403</span></span><br><span class="line">        temp_json[<span class="string">'url'</span>] = <span class="string">'http://music.163.com/song/media/outer/url?id=&#123;&#125;.mp3'</span>.format(</span><br><span class="line">            i[<span class="string">'id'</span>])</span><br><span class="line"></span><br><span class="line">        final_list.append(temp_json)</span><br><span class="line">    <span class="keyword">return</span> final_list</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_format</span><span class="params">(_list)</span> -&gt; str:</span></span><br><span class="line">    oklist = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> _list:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> i[<span class="string">'url'</span>]:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">        tmp = <span class="string">f'''</span></span><br><span class="line"><span class="string">    - title: <span class="subst">&#123;i[<span class="string">'name'</span>]&#125;</span></span></span><br><span class="line"><span class="string">      author: <span class="subst">&#123;i[<span class="string">'author'</span>]&#125;</span></span></span><br><span class="line"><span class="string">      url: <span class="subst">&#123;i[<span class="string">'url'</span>]&#125;</span></span></span><br><span class="line"><span class="string">      pic: <span class="subst">&#123;i[<span class="string">'pic_url'</span>]&#125;</span></span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line">        oklist.append(tmp)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(oklist)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">result = _format(get_list(<span class="number">45454</span>, <span class="string">'http://5464'</span>))</span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'result.txt'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(result)</span><br><span class="line">    f.flush()</span><br><span class="line"><span class="comment"># print(result)</span></span><br></pre></td></tr></table></div></figure><p>但htpps测试时发现音乐外链是http，无法请求。于是在<code>_includes\head.html</code>中加入</p><figure class="highlight html"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Security-Policy"</span> <span class="attr">content</span>=<span class="string">"upgrade-insecure-requests"</span>&gt;</span></span><br></pre></td></tr></table></div></figure><p>这时差不多能用了，但还有几个问题：</p><ol><li>aplayer版本过低，有些接口无法调用。</li><li>这么插入歌曲相当于硬编码在网页里，歌单一长，会使网页变成一个巨大又难以打开的怪物。</li></ol>        <h3 id="live2d的canvas问题"   >          <a href="#live2d的canvas问题" class="heading-link"><i class="fas fa-link"></i></a>live2d的canvas问题</h3>      <p>当启用live2d时，设置<code>in_mobile: false</code>，移动端浏览有时候不会响应。研究发现它的代码是这样的：</p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> live2d.in_mobile == <span class="literal">false</span> %&#125;</span><br><span class="line"><span class="keyword">var</span> isMobile;</span><br><span class="line"><span class="keyword">var</span> appVersion = navigator.appVersion;</span><br><span class="line"><span class="keyword">if</span> (appVersion.indexOf(<span class="string">'Mobile'</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> isMobile = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!isMobile)&#123;</span><br><span class="line">    loadlive2d(<span class="string">"live2dcanvas"</span>, <span class="string">'&#123;&#123;live2d.model  | prepend: site.baseurl &#125;&#125;'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">loadlive2d(<span class="string">"live2dcanvas"</span>, <span class="string">'&#123;&#123;live2d.model  | prepend: site.baseurl &#125;&#125;'</span>);</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></div></figure><p>结果就会出现一个透明的canvas，挡住其他元素：</p><p>        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200209%2Flive2dcanvas.png"  alt="" />      </p><p>于是改成这样：</p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> live2d.in_mobile == <span class="literal">false</span> %&#125;</span><br><span class="line"><span class="keyword">var</span> isMobile;</span><br><span class="line"><span class="keyword">var</span> appVersion = navigator.appVersion;</span><br><span class="line"><span class="keyword">if</span> (appVersion.indexOf(<span class="string">'Mobile'</span>) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> isMobile = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!isMobile)&#123;</span><br><span class="line">    loadlive2d(<span class="string">"live2dcanvas"</span>, <span class="string">'&#123;&#123;live2d.model  | prepend: site.baseurl &#125;&#125;'</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"live2dcanvas"</span>).style.display=<span class="string">"none"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#123;% <span class="keyword">else</span> %&#125;</span><br><span class="line">loadlive2d(<span class="string">"live2dcanvas"</span>, <span class="string">'&#123;&#123;live2d.model  | prepend: site.baseurl &#125;&#125;'</span>);</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></div></figure>        <h3 id="总结"   >          <a href="#总结" class="heading-link"><i class="fas fa-link"></i></a>总结</h3>      <p>个人感觉这个主题虽然功能挺多但有点臃肿，改一处配置可能要修改2-3处地方，渲染开销还挺大。可能还有各种小bug和有待优化的地方，<s>或许我学了前端之后可以来优化一下¿</s><br /><strong>直接换主题了。</strong><br />手动分割线------------</p>        <h2 id="4自定义域名可选"   >          <a href="#4自定义域名可选" class="heading-link"><i class="fas fa-link"></i></a>4.自定义域名（可选）</h2>      <p>如果你不想用<code>example.github.io</code>作为域名，就需要自己买一个域名。想方便的，需要备案的，直接在国内各种云商处购买即可。可以域名、CDN、证书一条龙服务。我是根据这篇教程<span class="exturl"><a class="exturl__link"   href="https://www.vpsdx.com/6135.html"  target="_blank" rel="noopener">40元买一个1年域名，再加一个10年域名的方法 .XYZ域名便宜注册</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>购买的域名，特点是便宜，但需要Paypal或国外信用卡。购买后可以切换DNS服务商，把记录CNAME到你的Gituhb Pages。</p>        <h2 id="5cdn和cos可选"   >          <a href="#5cdn和cos可选" class="heading-link"><i class="fas fa-link"></i></a>5.CDN和COS（可选）</h2>      <p>如果你受不了巨慢的访问，就可以考虑CDN加速了。而COS可以放图片，当图床（当然也能放其他文件，css，js等）。国内几乎全部CDN都需要备案，而COS的免费额度大多不包含<code>https</code>流量。具体的可以参考<span class="exturl"><a class="exturl__link"   href="https://www.julydate.com/post/60859300/"  target="_blank" rel="noopener">这篇</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>和<span class="exturl"><a class="exturl__link"   href="https://www.julydate.com/post/1756138088/"  target="_blank" rel="noopener">这篇</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>博客。具体怎么部署，申请SSL证书之类的不多废话了，网上教程一堆。基于<s>白嫖</s><strong><em>实用<em><strong>原则，我选择了<code>quic.cloud</code>作为CDN（就是后台有点简陋），<span class="exturl"><a class="exturl__link"   href="https://www.ucloud.cn/"  target="_blank" rel="noopener">UCLOUD</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>作为COS。UCLOUD这个就比较牛逼，虽然页面上没有明说，但却提供</strong>实实在在的免费的</em></em><code>https</code>和</strong>不变**的域名和CDN，这可比什么七牛云强多了。虽然不要太准，但看得出速度确实有改善：<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200209%2Fpingspeed.png"  alt="" />      </p>]]></content>
    
    <summary type="html">
    
      简单记录了博客的搭建过程及踩过的各种坑。
    
    </summary>
    
    
      <category term="technology" scheme="https://blog.2333332.xyz/categories/technology/"/>
    
    
      <category term="blog" scheme="https://blog.2333332.xyz/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>这是一篇测试文章</title>
    <link href="https://blog.2333332.xyz/2020/01/29/it-is-a-test/"/>
    <id>https://blog.2333332.xyz/2020/01/29/it-is-a-test/</id>
    <published>2020-01-29T10:05:30.000Z</published>
    <updated>2020-07-14T15:00:31.290Z</updated>
    
    <content type="html"><![CDATA[<p>banner：<span class="exturl"><a class="exturl__link"   href="https://www.pixiv.net/artworks/32204529"  target="_blank" rel="noopener">pixiv</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p>        <h2 id="测试二级标题"   >          <a href="#测试二级标题" class="heading-link"><i class="fas fa-link"></i></a>测试二级标题</h2>              <h3 id="测试三级标题"   >          <a href="#测试三级标题" class="heading-link"><i class="fas fa-link"></i></a>测试三级标题</h3>              <h4 id="测试四级标题"   >          <a href="#测试四级标题" class="heading-link"><i class="fas fa-link"></i></a>测试四级标题</h4>              <h5 id="测试五级标题"   >          <a href="#测试五级标题" class="heading-link"><i class="fas fa-link"></i></a>测试五级标题</h5>              <h6 id="测试六级标题"   >          <a href="#测试六级标题" class="heading-link"><i class="fas fa-link"></i></a>测试六级标题</h6>      <p><em>测试斜体文字</em><br /><em>测试斜体文字</em><br /><strong>测试加粗文字</strong><br /><strong>测试加粗文字</strong><br /><em><strong>测试加粗斜体</strong></em><br /><s>测试文字删除线</s></p><p>测试一段引用：</p><blockquote><p>2019新型冠状病毒，即“2019-nCoV”，因2019年武汉病毒性肺炎病例而被发现，2020年1月12日被世界卫生组织命名。</p></blockquote><ul><li>测试无序列表</li></ul><ul><li>测试无序列表</li></ul><ul><li>测试无序列表<ul><li>测试无序列表</li></ul></li></ul><ol><li>测试有序列表项 一<ol><li>测试二层有序列表项</li></ol></li><li>测试有序列表项 二</li><li>测试有序列表项 三</li></ol><ul><li>[ ] 测试未完成事项</li><li>[x] 测试已完成事项</li></ul><p>测试插入 GIF:<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200129%2F1.gif"  alt="gif" />      </p><p>测试表格：</p><div class="table-container"><table><thead><tr><th>#</th><th>language</th><th>version</th></tr></thead><tbody><tr><td>1</td><td>python</td><td>3.8</td></tr><tr><td>2</td><td>html</td><td>5</td></tr></tbody></table></div>        <h2 id="测试分割线"   >          <a href="#测试分割线" class="heading-link"><i class="fas fa-link"></i></a>测试分割线：</h2>      <p>测试<code>python</code>代码：<br />        <img   class="lazyload lazyload-gif"          src="/images/loading.svg" data-src="https://xjc.cn-sh2.ufileos.com/img%2Fblog%2F200129%2Fpy.jpg"  alt="" title="来自哪部番？" />      </p><figure class="highlight python"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os, time, datetime, random, base64</span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"><span class="keyword">try</span>: </span><br><span class="line">    <span class="keyword">import</span> cPickle <span class="keyword">as</span> pickle</span><br><span class="line"><span class="keyword">except</span> ImportError: </span><br><span class="line">    <span class="keyword">import</span> pickle </span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> utils</span><br></pre></td></tr></table></div></figure><p>测试<code>javascript</code>代码：</p><figure class="highlight javascript"><div class="table-container"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bind</span>(<span class="params">obj, fn</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> fn.apply(obj, <span class="built_in">arguments</span>);</span><br><span class="line">       &#125;;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">scripts</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="built_in">document</span>.getElementsByTagName(<span class="string">'script'</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">defaultOnError</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">throw</span> err;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//Allow getting a global that is expressed in</span></span><br><span class="line">   <span class="comment">//dot notation, like 'a.b.c'.</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">getGlobal</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (!value) &#123;</span><br><span class="line">           <span class="keyword">return</span> value;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">var</span> g = global;</span><br><span class="line">       each(value.split(<span class="string">'.'</span>), <span class="function"><span class="keyword">function</span> (<span class="params">part</span>) </span>&#123;</span><br><span class="line">           g = g[part];</span><br><span class="line">       &#125;);</span><br><span class="line">       <span class="keyword">return</span> g;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></div></figure><hr /><p>测试B站视频：</p><iframe src="//player.bilibili.com/player.html?aid=78976165&cid=144685783&page=1" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe><hr /><p>测试油管视频（需科学上网）：</p><div class="video-container"><iframe src="https://www.youtube.com/embed/CeHrkLMj2Ts" frameborder="0" loading="lazy" allowfullscreen></iframe></div><p>测试数学公式：<br /><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>e</mi><mo>=</mo><mi>m</mi><msup><mi>c</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">e=mc^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">e</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord mathdefault">m</span><span class="mord"><span class="mord mathdefault">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></p><p><strong>END</strong></p>]]></content>
    
    <summary type="html">
    
      此博文用于测试。
    
    </summary>
    
    
      <category term="technology" scheme="https://blog.2333332.xyz/categories/technology/"/>
    
    
      <category term="blog" scheme="https://blog.2333332.xyz/tags/blog/"/>
    
      <category term="test" scheme="https://blog.2333332.xyz/tags/test/"/>
    
  </entry>
  
</feed>
